/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateZFSPoolResponseContent struct for CreateZFSPoolResponseContent
type CreateZFSPoolResponseContent struct {
	Data string `json:"data"`
}

// NewCreateZFSPoolResponseContent instantiates a new CreateZFSPoolResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateZFSPoolResponseContent(data string) *CreateZFSPoolResponseContent {
	this := CreateZFSPoolResponseContent{}
	this.Data = data
	return &this
}

// NewCreateZFSPoolResponseContentWithDefaults instantiates a new CreateZFSPoolResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateZFSPoolResponseContentWithDefaults() *CreateZFSPoolResponseContent {
	this := CreateZFSPoolResponseContent{}
	return &this
}

// GetData returns the Data field value
func (o *CreateZFSPoolResponseContent) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateZFSPoolResponseContent) GetDataOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateZFSPoolResponseContent) SetData(v string) {
	o.Data = v
}

func (o CreateZFSPoolResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCreateZFSPoolResponseContent struct {
	value *CreateZFSPoolResponseContent
	isSet bool
}

func (v NullableCreateZFSPoolResponseContent) Get() *CreateZFSPoolResponseContent {
	return v.value
}

func (v *NullableCreateZFSPoolResponseContent) Set(val *CreateZFSPoolResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateZFSPoolResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateZFSPoolResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateZFSPoolResponseContent(val *CreateZFSPoolResponseContent) *NullableCreateZFSPoolResponseContent {
	return &NullableCreateZFSPoolResponseContent{value: val, isSet: true}
}

func (v NullableCreateZFSPoolResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateZFSPoolResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


