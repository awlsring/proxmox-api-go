/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LVMThinSummary struct for LVMThinSummary
type LVMThinSummary struct {
	Lv []LVMThinSummary `json:"lv"`
	// The size of the lvm thin pool in bytes
	LvSize float32 `json:"lv_size"`
	// The used size of the lvm thin pool in bytes
	Used float32 `json:"used"`
	// The size of the metadata lv in bytes
	MetadataSize float32 `json:"metadata_size"`
	// The used size of the metadata lv in bytes
	MetadataUsed float32 `json:"metadata_used"`
	// The associated volume group.
	Vg string `json:"vg"`
}

// NewLVMThinSummary instantiates a new LVMThinSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLVMThinSummary(lv []LVMThinSummary, lvSize float32, used float32, metadataSize float32, metadataUsed float32, vg string) *LVMThinSummary {
	this := LVMThinSummary{}
	this.Lv = lv
	this.LvSize = lvSize
	this.Used = used
	this.MetadataSize = metadataSize
	this.MetadataUsed = metadataUsed
	this.Vg = vg
	return &this
}

// NewLVMThinSummaryWithDefaults instantiates a new LVMThinSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLVMThinSummaryWithDefaults() *LVMThinSummary {
	this := LVMThinSummary{}
	return &this
}

// GetLv returns the Lv field value
func (o *LVMThinSummary) GetLv() []LVMThinSummary {
	if o == nil {
		var ret []LVMThinSummary
		return ret
	}

	return o.Lv
}

// GetLvOk returns a tuple with the Lv field value
// and a boolean to check if the value has been set.
func (o *LVMThinSummary) GetLvOk() ([]LVMThinSummary, bool) {
	if o == nil {
    return nil, false
	}
	return o.Lv, true
}

// SetLv sets field value
func (o *LVMThinSummary) SetLv(v []LVMThinSummary) {
	o.Lv = v
}

// GetLvSize returns the LvSize field value
func (o *LVMThinSummary) GetLvSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LvSize
}

// GetLvSizeOk returns a tuple with the LvSize field value
// and a boolean to check if the value has been set.
func (o *LVMThinSummary) GetLvSizeOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LvSize, true
}

// SetLvSize sets field value
func (o *LVMThinSummary) SetLvSize(v float32) {
	o.LvSize = v
}

// GetUsed returns the Used field value
func (o *LVMThinSummary) GetUsed() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Used
}

// GetUsedOk returns a tuple with the Used field value
// and a boolean to check if the value has been set.
func (o *LVMThinSummary) GetUsedOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Used, true
}

// SetUsed sets field value
func (o *LVMThinSummary) SetUsed(v float32) {
	o.Used = v
}

// GetMetadataSize returns the MetadataSize field value
func (o *LVMThinSummary) GetMetadataSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MetadataSize
}

// GetMetadataSizeOk returns a tuple with the MetadataSize field value
// and a boolean to check if the value has been set.
func (o *LVMThinSummary) GetMetadataSizeOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MetadataSize, true
}

// SetMetadataSize sets field value
func (o *LVMThinSummary) SetMetadataSize(v float32) {
	o.MetadataSize = v
}

// GetMetadataUsed returns the MetadataUsed field value
func (o *LVMThinSummary) GetMetadataUsed() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MetadataUsed
}

// GetMetadataUsedOk returns a tuple with the MetadataUsed field value
// and a boolean to check if the value has been set.
func (o *LVMThinSummary) GetMetadataUsedOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MetadataUsed, true
}

// SetMetadataUsed sets field value
func (o *LVMThinSummary) SetMetadataUsed(v float32) {
	o.MetadataUsed = v
}

// GetVg returns the Vg field value
func (o *LVMThinSummary) GetVg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vg
}

// GetVgOk returns a tuple with the Vg field value
// and a boolean to check if the value has been set.
func (o *LVMThinSummary) GetVgOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Vg, true
}

// SetVg sets field value
func (o *LVMThinSummary) SetVg(v string) {
	o.Vg = v
}

func (o LVMThinSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["lv"] = o.Lv
	}
	if true {
		toSerialize["lv_size"] = o.LvSize
	}
	if true {
		toSerialize["used"] = o.Used
	}
	if true {
		toSerialize["metadata_size"] = o.MetadataSize
	}
	if true {
		toSerialize["metadata_used"] = o.MetadataUsed
	}
	if true {
		toSerialize["vg"] = o.Vg
	}
	return json.Marshal(toSerialize)
}

type NullableLVMThinSummary struct {
	value *LVMThinSummary
	isSet bool
}

func (v NullableLVMThinSummary) Get() *LVMThinSummary {
	return v.value
}

func (v *NullableLVMThinSummary) Set(val *LVMThinSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableLVMThinSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableLVMThinSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLVMThinSummary(val *LVMThinSummary) *NullableLVMThinSummary {
	return &NullableLVMThinSummary{value: val, isSet: true}
}

func (v NullableLVMThinSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLVMThinSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


