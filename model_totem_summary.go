/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TotemSummary struct for TotemSummary
type TotemSummary struct {
	Secauth *string `json:"secauth,omitempty"`
	Version *string `json:"version,omitempty"`
	Interface *map[string]LinkSummary `json:"interface,omitempty"`
	LinkMode *string `json:"link_mode,omitempty"`
	IpVersion *string `json:"ip_version,omitempty"`
	ConfigVersion *string `json:"config_version,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
}

// NewTotemSummary instantiates a new TotemSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotemSummary() *TotemSummary {
	this := TotemSummary{}
	return &this
}

// NewTotemSummaryWithDefaults instantiates a new TotemSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotemSummaryWithDefaults() *TotemSummary {
	this := TotemSummary{}
	return &this
}

// GetSecauth returns the Secauth field value if set, zero value otherwise.
func (o *TotemSummary) GetSecauth() string {
	if o == nil || isNil(o.Secauth) {
		var ret string
		return ret
	}
	return *o.Secauth
}

// GetSecauthOk returns a tuple with the Secauth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetSecauthOk() (*string, bool) {
	if o == nil || isNil(o.Secauth) {
    return nil, false
	}
	return o.Secauth, true
}

// HasSecauth returns a boolean if a field has been set.
func (o *TotemSummary) HasSecauth() bool {
	if o != nil && !isNil(o.Secauth) {
		return true
	}

	return false
}

// SetSecauth gets a reference to the given string and assigns it to the Secauth field.
func (o *TotemSummary) SetSecauth(v string) {
	o.Secauth = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *TotemSummary) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *TotemSummary) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *TotemSummary) SetVersion(v string) {
	o.Version = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *TotemSummary) GetInterface() map[string]LinkSummary {
	if o == nil || isNil(o.Interface) {
		var ret map[string]LinkSummary
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetInterfaceOk() (*map[string]LinkSummary, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *TotemSummary) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given map[string]LinkSummary and assigns it to the Interface field.
func (o *TotemSummary) SetInterface(v map[string]LinkSummary) {
	o.Interface = &v
}

// GetLinkMode returns the LinkMode field value if set, zero value otherwise.
func (o *TotemSummary) GetLinkMode() string {
	if o == nil || isNil(o.LinkMode) {
		var ret string
		return ret
	}
	return *o.LinkMode
}

// GetLinkModeOk returns a tuple with the LinkMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetLinkModeOk() (*string, bool) {
	if o == nil || isNil(o.LinkMode) {
    return nil, false
	}
	return o.LinkMode, true
}

// HasLinkMode returns a boolean if a field has been set.
func (o *TotemSummary) HasLinkMode() bool {
	if o != nil && !isNil(o.LinkMode) {
		return true
	}

	return false
}

// SetLinkMode gets a reference to the given string and assigns it to the LinkMode field.
func (o *TotemSummary) SetLinkMode(v string) {
	o.LinkMode = &v
}

// GetIpVersion returns the IpVersion field value if set, zero value otherwise.
func (o *TotemSummary) GetIpVersion() string {
	if o == nil || isNil(o.IpVersion) {
		var ret string
		return ret
	}
	return *o.IpVersion
}

// GetIpVersionOk returns a tuple with the IpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetIpVersionOk() (*string, bool) {
	if o == nil || isNil(o.IpVersion) {
    return nil, false
	}
	return o.IpVersion, true
}

// HasIpVersion returns a boolean if a field has been set.
func (o *TotemSummary) HasIpVersion() bool {
	if o != nil && !isNil(o.IpVersion) {
		return true
	}

	return false
}

// SetIpVersion gets a reference to the given string and assigns it to the IpVersion field.
func (o *TotemSummary) SetIpVersion(v string) {
	o.IpVersion = &v
}

// GetConfigVersion returns the ConfigVersion field value if set, zero value otherwise.
func (o *TotemSummary) GetConfigVersion() string {
	if o == nil || isNil(o.ConfigVersion) {
		var ret string
		return ret
	}
	return *o.ConfigVersion
}

// GetConfigVersionOk returns a tuple with the ConfigVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetConfigVersionOk() (*string, bool) {
	if o == nil || isNil(o.ConfigVersion) {
    return nil, false
	}
	return o.ConfigVersion, true
}

// HasConfigVersion returns a boolean if a field has been set.
func (o *TotemSummary) HasConfigVersion() bool {
	if o != nil && !isNil(o.ConfigVersion) {
		return true
	}

	return false
}

// SetConfigVersion gets a reference to the given string and assigns it to the ConfigVersion field.
func (o *TotemSummary) SetConfigVersion(v string) {
	o.ConfigVersion = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *TotemSummary) GetClusterName() string {
	if o == nil || isNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotemSummary) GetClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.ClusterName) {
    return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *TotemSummary) HasClusterName() bool {
	if o != nil && !isNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *TotemSummary) SetClusterName(v string) {
	o.ClusterName = &v
}

func (o TotemSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Secauth) {
		toSerialize["secauth"] = o.Secauth
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !isNil(o.LinkMode) {
		toSerialize["link_mode"] = o.LinkMode
	}
	if !isNil(o.IpVersion) {
		toSerialize["ip_version"] = o.IpVersion
	}
	if !isNil(o.ConfigVersion) {
		toSerialize["config_version"] = o.ConfigVersion
	}
	if !isNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	return json.Marshal(toSerialize)
}

type NullableTotemSummary struct {
	value *TotemSummary
	isSet bool
}

func (v NullableTotemSummary) Get() *TotemSummary {
	return v.value
}

func (v *NullableTotemSummary) Set(val *TotemSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTotemSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTotemSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotemSummary(val *TotemSummary) *NullableTotemSummary {
	return &NullableTotemSummary{value: val, isSet: true}
}

func (v NullableTotemSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotemSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


