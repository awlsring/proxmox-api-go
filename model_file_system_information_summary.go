/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FileSystemInformationSummary struct for FileSystemInformationSummary
type FileSystemInformationSummary struct {
	Disk []DiskInformationSummary `json:"disk,omitempty"`
	Name *string `json:"name,omitempty"`
	Mountpoint *string `json:"mountpoint,omitempty"`
	Type *string `json:"type,omitempty"`
	UsedBytes *float32 `json:"used-bytes,omitempty"`
	TotalBytes *float32 `json:"total-bytes,omitempty"`
}

// NewFileSystemInformationSummary instantiates a new FileSystemInformationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSystemInformationSummary() *FileSystemInformationSummary {
	this := FileSystemInformationSummary{}
	return &this
}

// NewFileSystemInformationSummaryWithDefaults instantiates a new FileSystemInformationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSystemInformationSummaryWithDefaults() *FileSystemInformationSummary {
	this := FileSystemInformationSummary{}
	return &this
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *FileSystemInformationSummary) GetDisk() []DiskInformationSummary {
	if o == nil || isNil(o.Disk) {
		var ret []DiskInformationSummary
		return ret
	}
	return o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemInformationSummary) GetDiskOk() ([]DiskInformationSummary, bool) {
	if o == nil || isNil(o.Disk) {
    return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *FileSystemInformationSummary) HasDisk() bool {
	if o != nil && !isNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given []DiskInformationSummary and assigns it to the Disk field.
func (o *FileSystemInformationSummary) SetDisk(v []DiskInformationSummary) {
	o.Disk = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FileSystemInformationSummary) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemInformationSummary) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FileSystemInformationSummary) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FileSystemInformationSummary) SetName(v string) {
	o.Name = &v
}

// GetMountpoint returns the Mountpoint field value if set, zero value otherwise.
func (o *FileSystemInformationSummary) GetMountpoint() string {
	if o == nil || isNil(o.Mountpoint) {
		var ret string
		return ret
	}
	return *o.Mountpoint
}

// GetMountpointOk returns a tuple with the Mountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemInformationSummary) GetMountpointOk() (*string, bool) {
	if o == nil || isNil(o.Mountpoint) {
    return nil, false
	}
	return o.Mountpoint, true
}

// HasMountpoint returns a boolean if a field has been set.
func (o *FileSystemInformationSummary) HasMountpoint() bool {
	if o != nil && !isNil(o.Mountpoint) {
		return true
	}

	return false
}

// SetMountpoint gets a reference to the given string and assigns it to the Mountpoint field.
func (o *FileSystemInformationSummary) SetMountpoint(v string) {
	o.Mountpoint = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FileSystemInformationSummary) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemInformationSummary) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FileSystemInformationSummary) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FileSystemInformationSummary) SetType(v string) {
	o.Type = &v
}

// GetUsedBytes returns the UsedBytes field value if set, zero value otherwise.
func (o *FileSystemInformationSummary) GetUsedBytes() float32 {
	if o == nil || isNil(o.UsedBytes) {
		var ret float32
		return ret
	}
	return *o.UsedBytes
}

// GetUsedBytesOk returns a tuple with the UsedBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemInformationSummary) GetUsedBytesOk() (*float32, bool) {
	if o == nil || isNil(o.UsedBytes) {
    return nil, false
	}
	return o.UsedBytes, true
}

// HasUsedBytes returns a boolean if a field has been set.
func (o *FileSystemInformationSummary) HasUsedBytes() bool {
	if o != nil && !isNil(o.UsedBytes) {
		return true
	}

	return false
}

// SetUsedBytes gets a reference to the given float32 and assigns it to the UsedBytes field.
func (o *FileSystemInformationSummary) SetUsedBytes(v float32) {
	o.UsedBytes = &v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *FileSystemInformationSummary) GetTotalBytes() float32 {
	if o == nil || isNil(o.TotalBytes) {
		var ret float32
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemInformationSummary) GetTotalBytesOk() (*float32, bool) {
	if o == nil || isNil(o.TotalBytes) {
    return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *FileSystemInformationSummary) HasTotalBytes() bool {
	if o != nil && !isNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given float32 and assigns it to the TotalBytes field.
func (o *FileSystemInformationSummary) SetTotalBytes(v float32) {
	o.TotalBytes = &v
}

func (o FileSystemInformationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Mountpoint) {
		toSerialize["mountpoint"] = o.Mountpoint
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.UsedBytes) {
		toSerialize["used-bytes"] = o.UsedBytes
	}
	if !isNil(o.TotalBytes) {
		toSerialize["total-bytes"] = o.TotalBytes
	}
	return json.Marshal(toSerialize)
}

type NullableFileSystemInformationSummary struct {
	value *FileSystemInformationSummary
	isSet bool
}

func (v NullableFileSystemInformationSummary) Get() *FileSystemInformationSummary {
	return v.value
}

func (v *NullableFileSystemInformationSummary) Set(val *FileSystemInformationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSystemInformationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSystemInformationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSystemInformationSummary(val *FileSystemInformationSummary) *NullableFileSystemInformationSummary {
	return &NullableFileSystemInformationSummary{value: val, isSet: true}
}

func (v NullableFileSystemInformationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSystemInformationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


