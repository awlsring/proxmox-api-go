/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PciMediatedDeviceSummary struct for PciMediatedDeviceSummary
type PciMediatedDeviceSummary struct {
	Available float32 `json:"available"`
	Description string `json:"description"`
	Type string `json:"type"`
}

// NewPciMediatedDeviceSummary instantiates a new PciMediatedDeviceSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPciMediatedDeviceSummary(available float32, description string, type_ string) *PciMediatedDeviceSummary {
	this := PciMediatedDeviceSummary{}
	this.Available = available
	this.Description = description
	this.Type = type_
	return &this
}

// NewPciMediatedDeviceSummaryWithDefaults instantiates a new PciMediatedDeviceSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPciMediatedDeviceSummaryWithDefaults() *PciMediatedDeviceSummary {
	this := PciMediatedDeviceSummary{}
	return &this
}

// GetAvailable returns the Available field value
func (o *PciMediatedDeviceSummary) GetAvailable() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *PciMediatedDeviceSummary) GetAvailableOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *PciMediatedDeviceSummary) SetAvailable(v float32) {
	o.Available = v
}

// GetDescription returns the Description field value
func (o *PciMediatedDeviceSummary) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PciMediatedDeviceSummary) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PciMediatedDeviceSummary) SetDescription(v string) {
	o.Description = v
}

// GetType returns the Type field value
func (o *PciMediatedDeviceSummary) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PciMediatedDeviceSummary) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PciMediatedDeviceSummary) SetType(v string) {
	o.Type = v
}

func (o PciMediatedDeviceSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["available"] = o.Available
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullablePciMediatedDeviceSummary struct {
	value *PciMediatedDeviceSummary
	isSet bool
}

func (v NullablePciMediatedDeviceSummary) Get() *PciMediatedDeviceSummary {
	return v.value
}

func (v *NullablePciMediatedDeviceSummary) Set(val *PciMediatedDeviceSummary) {
	v.value = val
	v.isSet = true
}

func (v NullablePciMediatedDeviceSummary) IsSet() bool {
	return v.isSet
}

func (v *NullablePciMediatedDeviceSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePciMediatedDeviceSummary(val *PciMediatedDeviceSummary) *NullablePciMediatedDeviceSummary {
	return &NullablePciMediatedDeviceSummary{value: val, isSet: true}
}

func (v NullablePciMediatedDeviceSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePciMediatedDeviceSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


