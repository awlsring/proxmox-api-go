openapi: 3.0.2
info:
  title: Proxmox
  version: 2023-01-01
servers:
- url: /
security:
- smithy.api.httpBasicAuth: []
- smithy.api.httpApiKeyAuth: []
paths:
  /access/acl:
    get:
      operationId: GetAccessControlList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessControlListResponseContent'
          description: GetAccessControlList 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: UpdateAccessControlList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessControlListRequestContent'
        required: true
      responses:
        "200":
          description: UpdateAccessControlList 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/domains:
    get:
      operationId: ListRealms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRealmsResponseContent'
          description: ListRealms 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreateRealm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRealmRequestContent'
        required: true
      responses:
        "200":
          description: CreateRealm 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/domains/{realm}:
    delete:
      operationId: DeleteRealm
      parameters:
      - explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeleteRealm 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: GetRealm
      parameters:
      - explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRealmResponseContent'
          description: GetRealm 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: SyncRealm
      parameters:
      - explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRealmRequestContent'
      responses:
        "200":
          description: SyncRealm 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: UpdateRealm
      parameters:
      - explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRealmRequestContent'
      responses:
        "200":
          description: UpdateRealm 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/groups:
    get:
      operationId: ListGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponseContent'
          description: ListGroups 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequestContent'
        required: true
      responses:
        "200":
          description: CreateGroup 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/groups/{groupId}:
    delete:
      operationId: DeleteGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeleteGroup 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: GetGroupDetails
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupDetailsResponseContent'
          description: GetGroupDetails 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: UpdateGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequestContent'
      responses:
        "200":
          description: UpdateGroup 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/password:
    put:
      description: Change a users password. This method cannot be used by API tokens.
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestContent'
        required: true
      responses:
        "200":
          description: ChangePassword 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/permissions:
    get:
      description: Retrive the permissions for the given user. If none specified the
        permissions for the current user are returned.
      operationId: GetPermissions
      parameters:
      - explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsResponseContent'
          description: GetPermissions 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/roles:
    get:
      operationId: ListRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponseContent'
          description: ListRoles 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequestContent'
        required: true
      responses:
        "200":
          description: CreateRole 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/roles/{roleId}:
    delete:
      operationId: DeleteRole
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeleteRole 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: GetRole
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleResponseContent'
          description: GetRole 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: ModifyRole
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyRoleRequestContent'
      responses:
        "200":
          description: ModifyRole 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/ticket:
    post:
      operationId: CreateTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTicketResponseContent'
          description: CreateTicket 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/users:
    get:
      description: List users on system.
      operationId: ListUsers
      parameters:
      - description: "An integer used to represent a boolean. 0 is false, 1 is true."
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        style: form
      - description: "An integer used to represent a boolean. 0 is false, 1 is true."
        explode: true
        in: query
        name: full
        required: false
        schema:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponseContent'
          description: ListUsers 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create a new user.
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestContent'
        required: true
      responses:
        "200":
          description: CreateUser 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/users/{userId}:
    delete:
      description: Delete a user.
      operationId: DeleteUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeleteUser 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      description: Get user on system.
      operationId: GetUserConfiguration
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserConfigurationResponseContent'
          description: GetUserConfiguration 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      description: Update a user.
      operationId: ModifyUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyUserRequestContent'
      responses:
        "200":
          description: ModifyUser 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/users/{userId}/token:
    get:
      description: List user tokens system.
      operationId: ListUserTokens
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserTokensResponseContent'
          description: ListUserTokens 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /access/users/{userId}/token/{tokenId}:
    delete:
      description: Delete a token.
      operationId: DeleteUserToken
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeleteUserToken 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      description: Get user token.
      operationId: GetUserToken
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserTokenResponseContent'
          description: GetUserToken 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create token for user.
      operationId: CreateUserToken
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserTokenRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserTokenResponseContent'
          description: CreateUserToken 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      description: Modify a token.
      operationId: ModifyUserToken
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyUserTokenRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyUserTokenResponseContent'
          description: ModifyUserToken 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /cluster/config:
    post:
      operationId: CreateClusterConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterConfigRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterConfigResponseContent'
          description: CreateClusterConfig 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /cluster/config/apiversion:
    get:
      operationId: GetClusterApiVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterApiVersionResponseContent'
          description: GetClusterApiVersion 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /cluster/config/join:
    get:
      operationId: GetClusterJoinInformation
      parameters:
      - description: The node which to join.
        explode: true
        in: query
        name: node
        required: false
        schema:
          description: The node which to join.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterJoinInformationResponseContent'
          description: GetClusterJoinInformation 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: JoinCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinClusterRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinClusterResponseContent'
          description: JoinCluster 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /cluster/config/nodes:
    get:
      operationId: ListCorosyncNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCorosyncNodesResponseContent'
          description: ListCorosyncNodes 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /cluster/config/nodes/{node}:
    delete:
      operationId: RemoveCorosyncNode
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          description: RemoveCorosyncNode 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: AddCorosyncNode
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCorosyncNodeRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCorosyncNodeResponseContent'
          description: AddCorosyncNode 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /cluster/config/totem:
    get:
      operationId: GetClusterTotemSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterTotemSettingsResponseContent'
          description: GetClusterTotemSettings 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes:
    get:
      operationId: ListNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponseContent'
          description: ListNodes 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/apt/changelog:
    get:
      operationId: GetPackageChangelog
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The name of the package to get the changelog for.
        explode: true
        in: query
        name: name
        required: false
        schema:
          description: The name of the package to get the changelog for.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageChangelogResponseContent'
          description: GetPackageChangelog 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/apt/repositories:
    post:
      operationId: ChangeRepositoryProperties
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: Path to the containing file
        explode: true
        in: query
        name: path
        required: true
        schema:
          description: Path to the containing file
          type: string
        style: form
      - description: Index within the file
        explode: true
        in: query
        name: index
        required: true
        schema:
          description: Index within the file
          type: number
        style: form
      - description: Digest to detect modifications
        explode: true
        in: query
        name: digest
        required: false
        schema:
          description: Digest to detect modifications
          type: string
        style: form
      - description: Wether the repository is enabled
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          description: Wether the repository is enabled
          type: boolean
        style: form
      responses:
        "200":
          description: ChangeRepositoryProperties 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: AddRepository
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: Handle that identifies the repository
        explode: true
        in: query
        name: handle
        required: true
        schema:
          description: Handle that identifies the repository
          type: string
        style: form
      - description: Digest to detect modifications
        explode: true
        in: query
        name: digest
        required: false
        schema:
          description: Digest to detect modifications
          type: string
        style: form
      responses:
        "200":
          description: AddRepository 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/apt/repository:
    get:
      operationId: ListRepositoriesInformation
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesInformationResponseContent'
          description: ListRepositoriesInformation 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/apt/update:
    get:
      operationId: ListUpdates
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUpdatesResponseContent'
          description: ListUpdates 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/apt/versions:
    get:
      operationId: ListPackages
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponseContent'
          description: ListPackages 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/capabilities/qemu/cpu:
    get:
      description: List all custom and default CPU models.
      operationId: ListCpuCapabilities
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCpuCapabilitiesResponseContent'
          description: ListCpuCapabilities 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/capabilities/qemu/machines:
    get:
      description: Get available QEMU/KVM machine types.
      operationId: ListMachineCapabilities
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMachineCapabilitiesResponseContent'
          description: ListMachineCapabilities 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/certificates/acme/certificate:
    delete:
      description: Renew existing certificate from CA.
      operationId: DeleteNodeCertificate
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNodeCertificateResponseContent'
          description: DeleteNodeCertificate 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Order a new certificate from ACME-compatible CA.
      operationId: OrderNodeCertificate
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderNodeCertificateRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNodeCertificateResponseContent'
          description: OrderNodeCertificate 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      description: Renew existing certificate from CA.
      operationId: RenewNodeCertificate
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewNodeCertificateRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewNodeCertificateResponseContent'
          description: RenewNodeCertificate 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/certificates/custom:
    post:
      description: Add or update a custom certificate.
      operationId: AddCustomNodeCertificate
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomNodeCertificateRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCustomNodeCertificateResponseContent'
          description: AddCustomNodeCertificate 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/certificates/info:
    get:
      description: Get information about the node's certificates.
      operationId: ListNodeCertificates
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodeCertificatesResponseContent'
          description: ListNodeCertificates 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/directory:
    get:
      description: List PVE managed directory storages.
      operationId: ListDirectories
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDirectoriesResponseContent'
          description: ListDirectories 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      operationId: CreateDirectory
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectoryRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryResponseContent'
          description: CreateDirectory 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/directory/{name}:
    delete:
      description: Unmounts the storage and removes the mount unit.
      operationId: DeleteDirectory
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The storage identifier.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The storage identifier.
          type: string
        style: simple
      - description: "Marks the associated storage as not available on this node anr\
          \ removes them from the config. Takes a boolean integer value (0 false,\
          \ 1 true)."
        explode: true
        in: query
        name: cleanup-config
        required: false
        schema:
          description: "Marks the associated storage as not available on this node\
            \ anr removes them from the config. Takes a boolean integer value (0 false,\
            \ 1 true)."
          type: number
        style: form
      - description: "Wipes the disk. Takes a boolean integer value (0 false, 1 true)."
        explode: true
        in: query
        name: cleanup-disks
        required: false
        schema:
          description: "Wipes the disk. Takes a boolean integer value (0 false, 1\
            \ true)."
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryResponseContent'
          description: DeleteDirectory 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/list:
    get:
      description: List local disks on node.
      operationId: ListDisks
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: "Include partitions in response list. Takes a boolean integer\
          \ value (0 false, 1 true)."
        explode: true
        in: query
        name: include-partitions
        required: false
        schema:
          description: "Include partitions in response list. Takes a boolean integer\
            \ value (0 false, 1 true)."
          type: number
        style: form
      - description: "Skip SMART checks. Takes a boolean integer value (0 false, 1\
          \ true)."
        explode: true
        in: query
        name: skipsmart
        required: false
        schema:
          description: "Skip SMART checks. Takes a boolean integer value (0 false,\
            \ 1 true)."
          type: number
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/DiskTypeFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDisksResponseContent'
          description: ListDisks 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/lvm:
    get:
      description: List LVM volume groups on node.
      operationId: ListLVMs
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLVMsResponseContent'
          description: ListLVMs 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create a LVM volume group.
      operationId: CreateLVM
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLVMRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLVMResponseContent'
          description: CreateLVM 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/lvm/{name}:
    delete:
      description: Removes an LVM volume group.
      operationId: DeleteLVM
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The storage identifier.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The storage identifier.
          type: string
        style: simple
      - description: "Marks the associated storage as not available on this node anr\
          \ removes them from the config. Takes a boolean integer value (0 false,\
          \ 1 true)."
        explode: true
        in: query
        name: cleanup-config
        required: false
        schema:
          description: "Marks the associated storage as not available on this node\
            \ anr removes them from the config. Takes a boolean integer value (0 false,\
            \ 1 true)."
          type: number
        style: form
      - description: "Wipes the disk. Takes a boolean integer value (0 false, 1 true)."
        explode: true
        in: query
        name: cleanup-disks
        required: false
        schema:
          description: "Wipes the disk. Takes a boolean integer value (0 false, 1\
            \ true)."
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLVMResponseContent'
          description: DeleteLVM 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/lvmthin:
    get:
      description: List LVM thinpools on node.
      operationId: ListLVMThins
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLVMThinsResponseContent'
          description: ListLVMThins 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create a LVM thinpool.
      operationId: CreateLVMThin
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLVMThinRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLVMThinResponseContent'
          description: CreateLVMThin 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/lvmthin/{name}:
    delete:
      description: Removes an LVM thinpool.
      operationId: DeleteLVMThin
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The storage identifier.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The storage identifier.
          type: string
        style: simple
      - description: The volume group name.
        explode: true
        in: query
        name: volume-group
        required: true
        schema:
          description: The volume group name.
          type: string
        style: form
      - description: "Marks the associated storage as not available on this node anr\
          \ removes them from the config. Takes a boolean integer value (0 false,\
          \ 1 true)."
        explode: true
        in: query
        name: cleanup-config
        required: false
        schema:
          description: "Marks the associated storage as not available on this node\
            \ anr removes them from the config. Takes a boolean integer value (0 false,\
            \ 1 true)."
          type: number
        style: form
      - description: "Wipes the disk. Takes a boolean integer value (0 false, 1 true)."
        explode: true
        in: query
        name: cleanup-disks
        required: false
        schema:
          description: "Wipes the disk. Takes a boolean integer value (0 false, 1\
            \ true)."
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLVMThinResponseContent'
          description: DeleteLVMThin 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/smart:
    get:
      description: Get SMART health of a disk.
      operationId: GetSmartHealth
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: Disk to check.
        explode: true
        in: query
        name: disk
        required: false
        schema:
          description: Disk to check.
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        style: form
      - description: "Return only health status. Takes a boolean integer value (0\
          \ false, 1 true)."
        explode: true
        in: query
        name: healthonly
        required: false
        schema:
          description: "Return only health status. Takes a boolean integer value (0\
            \ false, 1 true)."
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSmartHealthResponseContent'
          description: GetSmartHealth 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Initialize disk with GPT.
      operationId: InitializeGPT
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializeGPTRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitializeGPTResponseContent'
          description: InitializeGPT 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      description: Wipe a disk or partition. Requires to be authenticated as the node
        root user.
      operationId: WipeDisk
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: Disk to wipe.
        explode: true
        in: query
        name: disk
        required: false
        schema:
          description: Disk to wipe.
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        style: form
      responses:
        "200":
          description: WipeDisk 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/zfs:
    get:
      description: List LVM volume groups on node.
      operationId: ListZFSPools
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZFSPoolsResponseContent'
          description: ListZFSPools 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create a ZFS pool.
      operationId: CreateZFSPool
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateZFSPoolRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateZFSPoolResponseContent'
          description: CreateZFSPool 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/disks/zfs/{name}:
    delete:
      description: Destroys a ZFS pool.
      operationId: DeleteZFSPool
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The storage identifier.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The storage identifier.
          type: string
        style: simple
      - description: "Marks the associated storage as not available on this node anr\
          \ removes them from the config. Takes a boolean integer value (0 false,\
          \ 1 true)."
        explode: true
        in: query
        name: cleanup-config
        required: false
        schema:
          description: "Marks the associated storage as not available on this node\
            \ anr removes them from the config. Takes a boolean integer value (0 false,\
            \ 1 true)."
          type: number
        style: form
      - description: "Wipes the disk. Takes a boolean integer value (0 false, 1 true)."
        explode: true
        in: query
        name: cleanup-disks
        required: false
        schema:
          description: "Wipes the disk. Takes a boolean integer value (0 false, 1\
            \ true)."
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteZFSPoolResponseContent'
          description: DeleteZFSPool 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      description: List LVM volume groups on node.
      operationId: GetZFSPoolStatus
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZFSPoolStatusResponseContent'
          description: GetZFSPoolStatus 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/hardware/pci:
    get:
      operationId: ListPciDevices
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: Comma seperated list of PCI class IDs to exclude from the list
        explode: true
        in: query
        name: pci-class-blacklist
        required: false
        schema:
          description: Comma seperated list of PCI class IDs to exclude from the list
          type: string
        style: form
      - description: "An integer used to represent a boolean. 0 is false, 1 is true."
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPciDevicesResponseContent'
          description: ListPciDevices 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/hardware/pci/{deviceId}:
    get:
      operationId: ListPciDeviceMediatedDevices
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The PCI device to get mediated devices for.
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          description: The PCI device to get mediated devices for.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPciDeviceMediatedDevicesResponseContent'
          description: ListPciDeviceMediatedDevices 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/hardware/usb:
    get:
      operationId: ListUsbDevices
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsbDevicesResponseContent'
          description: ListUsbDevices 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/network:
    delete:
      operationId: RevertNetworkInterfaceConfiguration
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          description: RevertNetworkInterfaceConfiguration 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: ListNetworkInterfaces
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/NetworkInterfaceType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkInterfacesResponseContent'
          description: ListNetworkInterfaces 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreateNetworkInterface
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkInterfaceRequestContent'
        required: true
      responses:
        "200":
          description: CreateNetworkInterface 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: ApplyNetworkInterfaceConfiguration
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyNetworkInterfaceConfigurationResponseContent'
          description: ApplyNetworkInterfaceConfiguration 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/network/{interface}:
    delete:
      operationId: DeleteNetworkInterface
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: interface
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeleteNetworkInterface 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: GetNetworkInterface
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: interface
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkInterfaceResponseContent'
          description: GetNetworkInterface 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: UpdateNetworkInterface
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: interface
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkInterfaceRequestContent'
        required: true
      responses:
        "200":
          description: UpdateNetworkInterface 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu:
    get:
      operationId: ListVirtualMachines
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualMachinesResponseContent'
          description: ListVirtualMachines 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Create a new virtual machine.
      operationId: CreateVirtualMachine
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualMachineRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVirtualMachineResponseContent'
          description: CreateVirtualMachine 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}:
    delete:
      description: Create a new virtual machine.
      operationId: DeleteVirtualMachine
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - description: Destroy disks that are not referenced in the config.
        explode: true
        in: query
        name: destory-unreferenced-disks
        required: false
        schema:
          description: Destroy disks that are not referenced in the config.
          maximum: 1
          minimum: 0
          type: number
        style: form
      - description: "Purge the VM from the configurations, backups, jobs, and HA."
        explode: true
        in: query
        name: purge
        required: false
        schema:
          description: "Purge the VM from the configurations, backups, jobs, and HA."
          maximum: 1
          minimum: 0
          type: number
        style: form
      - description: Skip the lock check. Only valid for root.
        explode: true
        in: query
        name: skiplock
        required: false
        schema:
          description: Skip the lock check. Only valid for root.
          maximum: 1
          minimum: 0
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVirtualMachineResponseContent'
          description: DeleteVirtualMachine 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/agent/exec:
    post:
      description: Execute a command on the virtual machine. Requries the guest agent
        to be installed and active.
      operationId: VirtualMachineExecuteCommand
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineExecuteCommandRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExecuteCommandResponseContent'
          description: VirtualMachineExecuteCommand 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/exec-status:
    get:
      description: Get a command status of an execution started on the virtual machine.
        Requries the guest agent to be installed and active.
      operationId: GetVirtualMachineCommandStatus
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - explode: true
        in: query
        name: pid
        required: true
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineCommandStatusResponseContent'
          description: GetVirtualMachineCommandStatus 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/file-read:
    get:
      description: Read a file on the virtual machine. Requries the guest agent to
        be installed and active.
      operationId: VirtualMachineReadFile
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - explode: true
        in: query
        name: file
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineReadFileResponseContent'
          description: VirtualMachineReadFile 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/file-write:
    post:
      description: Write a file on the virtual machine. Requries the guest agent to
        be installed and active.
      operationId: VirtualMachineWriteFile
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineWriteFileRequestContent'
        required: true
      responses:
        "200":
          description: VirtualMachineWriteFile 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-fsinfo:
    get:
      description: Get the file system information on the virtual machine. Requries
        the guest agent to be installed and active.
      operationId: GetVirtualMachineFileSystemInformation
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineFileSystemInformationResponseContent'
          description: GetVirtualMachineFileSystemInformation 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-host-name:
    get:
      description: Get the hostname of the virtual machine. Requries the guest agent
        to be installed and active.
      operationId: GetVirtualMachineHostname
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineHostnameResponseContent'
          description: GetVirtualMachineHostname 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-info:
    get:
      description: Get the supported agent commands of the virtual machine. Requries
        the guest agent to be installed and active.
      operationId: GetVirtualMachineAgentInfo
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineAgentInfoResponseContent'
          description: GetVirtualMachineAgentInfo 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-memory-block-info:
    get:
      description: Get the memory block info on the virtual machine. Requries the
        guest agent to be installed and active.
      operationId: GetVirtualMachineMemoryBlockInformation
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineMemoryBlockInformationResponseContent'
          description: GetVirtualMachineMemoryBlockInformation 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-memory-blocks:
    get:
      description: Get the memory blocks on the virtual machine. Requries the guest
        agent to be installed and active.
      operationId: GetVirtualMachineMemoryBlocks
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineMemoryBlocksResponseContent'
          description: GetVirtualMachineMemoryBlocks 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-osinfo:
    get:
      description: Get the OS information of the virtual machine. Requries the guest
        agent to be installed and active.
      operationId: GetVirtualMachineOperatingSystemInformation
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineOperatingSystemInformationResponseContent'
          description: GetVirtualMachineOperatingSystemInformation 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-time:
    get:
      description: Get the time of the virtual machine. Requries the guest agent to
        be installed and active.
      operationId: GetVirtualMachineTime
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineTimeResponseContent'
          description: GetVirtualMachineTime 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-timezone:
    get:
      description: Get the time zone of the virtual machine. Requries the guest agent
        to be installed and active.
      operationId: GetVirtualMachineTimeZone
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineTimeZoneResponseContent'
          description: GetVirtualMachineTimeZone 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/get-vcpus:
    get:
      description: Get the vcpus of the virtual machine. Requries the guest agent
        to be installed and active.
      operationId: GetVirtualMachineVcpus
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineVcpusResponseContent'
          description: GetVirtualMachineVcpus 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/network-get-interfaces:
    get:
      description: Get the network interface information of the virtual machine. Requries
        the guest agent to be installed and active.
      operationId: GetVirtualMachineNetworkInterfaces
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineNetworkInterfacesResponseContent'
          description: GetVirtualMachineNetworkInterfaces 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/agent/ping:
    post:
      description: Ping the virtual machine. Requries the guest agent to be installed
        and active.
      operationId: PingVirtualMachine
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingVirtualMachineResponseContent'
          description: PingVirtualMachine 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoGuestAgentErrorResponseContent'
          description: NoGuestAgentError 500 response
  /nodes/{node}/qemu/{vmId}/clone:
    post:
      description: Create a copy of a virtual machine or template.
      operationId: CloneVirtualMachine
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneVirtualMachineRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneVirtualMachineResponseContent'
          description: CloneVirtualMachine 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/cloudinit:
    get:
      description: Get the cloudinit configuration with both current and pending values.
      operationId: GetPendingVirtualMachineCloudInitChanges
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPendingVirtualMachineCloudInitChangesResponseContent'
          description: GetPendingVirtualMachineCloudInitChanges 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      description: Regenerate and change cloudinit config drive..
      operationId: RegenerateVirtualMachineCloudInit
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          description: RegenerateVirtualMachineCloudInit 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/cloudinit/dump:
    get:
      description: Get automatically generated cloudinit config.
      operationId: GetVirtualMachineCloudInit
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/CloudInitType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineCloudInitResponseContent'
          description: GetVirtualMachineCloudInit 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/config:
    get:
      description: Get the virtual machine configuration with pending configuration
        changes applied. Using the 'current' parameter will pass the current configuration.
      operationId: GetVirtualMachineConfiguration
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - description: "If specified, the configuration returned will be the current\
          \ configuration. Otherwise, the configuration returned will be the pending\
          \ configuration."
        explode: true
        in: query
        name: current
        required: false
        schema:
          description: "If specified, the configuration returned will be the current\
            \ configuration. Otherwise, the configuration returned will be the pending\
            \ configuration."
          maximum: 1
          minimum: 0
          type: number
        style: form
      - description: Fetch the configuration from the specified snapshot.
        explode: true
        in: query
        name: snapshot
        required: false
        schema:
          description: Fetch the configuration from the specified snapshot.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineConfigurationResponseContent'
          description: GetVirtualMachineConfiguration 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      description: Set the virtual machine configuration asynchronously.
      operationId: ApplyVirtualMachineConfigurationAsync
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyVirtualMachineConfigurationAsyncRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyVirtualMachineConfigurationAsyncResponseContent'
          description: ApplyVirtualMachineConfigurationAsync 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      description: Set the virtual machine configuration synchronously.
      operationId: ApplyVirtualMachineConfigurationSync
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyVirtualMachineConfigurationSyncRequestContent'
      responses:
        "200":
          description: ApplyVirtualMachineConfigurationSync 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/feature:
    get:
      description: Get the utilization and status of a virtual machine.
      operationId: GetVirtualMachineFeatureSupport
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - explode: true
        in: query
        name: feature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: snapname
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineFeatureSupportResponseContent'
          description: GetVirtualMachineFeatureSupport 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/pending:
    get:
      description: List the virtual machine configuration with both current and pending
        values.
      operationId: ListPendingVirtualMachineConfigurationChanges
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPendingVirtualMachineConfigurationChangesResponseContent'
          description: ListPendingVirtualMachineConfigurationChanges 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/resize:
    put:
      description: Extend the volume size of a virtual machine disk.
      operationId: ResizeVirtualMachineDisk
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - description: The name of the disk to resize.
        explode: true
        in: query
        name: disk
        required: true
        schema:
          $ref: '#/components/schemas/VirtualMachineDiskTarget'
        style: form
      - description: "The new size of the disk in bytes, or with a suffix of K, M,\
          \ G, or T for kilobytes, megabytes, gigabytes, or terabytes. If + is specified,\
          \ the size is increased by the given amount."
        explode: true
        in: query
        name: size
        required: true
        schema:
          description: "The new size of the disk in bytes, or with a suffix of K,\
            \ M, G, or T for kilobytes, megabytes, gigabytes, or terabytes. If + is\
            \ specified, the size is increased by the given amount."
          pattern: "^+?d+(.d+)?[KMGT]?$"
          type: string
        style: form
      - description: The SHA1 digest of the current configuration. Used to prevent
          concurrent operations.
        explode: true
        in: query
        name: digest
        required: false
        schema:
          description: The SHA1 digest of the current configuration. Used to prevent
            concurrent operations.
          type: string
        style: form
      - description: Ignore lock. Only valid if authenticated as root user.
        explode: true
        in: query
        name: skiplock
        required: false
        schema:
          description: Ignore lock. Only valid if authenticated as root user.
          type: boolean
        style: form
      responses:
        "200":
          description: ResizeVirtualMachineDisk 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/status/current:
    get:
      description: Get the utilization and status of a virtual machine.
      operationId: GetVirtualMachineStatus
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVirtualMachineStatusResponseContent'
          description: GetVirtualMachineStatus 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/template:
    post:
      description: Create a copy of a virtual machine or template.
      operationId: CreateVirtualMachineTemplate
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualMachineTemplateRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVirtualMachineTemplateResponseContent'
          description: CreateVirtualMachineTemplate 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/qemu/{vmId}/unlink:
    put:
      description: Unlink/delete disk images.
      operationId: UnlinkVirtualMachineDisks
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - description: The id of the virtual machine as a string
        explode: false
        in: path
        name: vmId
        required: true
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: simple
      - description: A list of disk ids to unlink.
        explode: true
        in: query
        name: idlist
        required: true
        schema:
          description: A list of disk ids to unlink.
          type: string
        style: form
      - description: "Fore removal of disk. Without this, the disk is replaced with\
          \ a disk entry of 'unused[n]'."
        explode: true
        in: query
        name: force
        required: true
        schema:
          description: "Fore removal of disk. Without this, the disk is replaced with\
            \ a disk entry of 'unused[n]'."
          type: boolean
        style: form
      responses:
        "200":
          description: UnlinkVirtualMachineDisks 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/storage:
    get:
      operationId: ListNodeStorage
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: true
        in: query
        name: content
        required: false
        schema:
          type: string
        style: form
      - description: "An integer used to represent a boolean. 0 is false, 1 is true."
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        style: form
      - explode: true
        in: query
        name: storage
        required: false
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: form
      - description: "If target and node differ, only return storage that is available\
          \ on both nodes."
        explode: true
        in: query
        name: target
        required: false
        schema:
          description: "If target and node differ, only return storage that is available\
            \ on both nodes."
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodeStorageResponseContent'
          description: ListNodeStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/storage/{storage}/content:
    get:
      operationId: ListStorageVolumes
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: true
        in: query
        name: content
        required: false
        schema:
          type: string
        style: form
      - description: The id of the virtual machine as a string
        explode: true
        in: query
        name: vmid
        required: false
        schema:
          description: The id of the virtual machine as a string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStorageVolumesResponseContent'
          description: ListStorageVolumes 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreateStorageVolume
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStorageVolumeRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStorageVolumeResponseContent'
          description: CreateStorageVolume 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/storage/{storage}/content/{volume}:
    delete:
      operationId: DeleteStorageVolume
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: volume
        required: true
        schema:
          type: string
        style: simple
      - description: Delay in seconds to wait for task to finish.
        explode: true
        in: query
        name: delay
        required: false
        schema:
          description: Delay in seconds to wait for task to finish.
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStorageVolumeResponseContent'
          description: DeleteStorageVolume 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: UpdateStorageVolume
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: volume
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorageVolumeRequestContent'
        required: true
      responses:
        "200":
          description: UpdateStorageVolume 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/storage/{storage}/download-url:
    post:
      description: Download a file from a URL to the specified storage.
      operationId: DownloadFromUrlToStorage
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadFromUrlToStorageRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadFromUrlToStorageResponseContent'
          description: DownloadFromUrlToStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/storage/{storage}/status:
    get:
      operationId: GetStorageStatus
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStorageStatusResponseContent'
          description: GetStorageStatus 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /nodes/{node}/storage/{storage}/upload:
    post:
      operationId: UploadToStorage
      parameters:
      - explode: false
        in: path
        name: node
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadToStorageRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadToStorageResponseContent'
          description: UploadToStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /pools:
    get:
      operationId: ListPools
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPoolsResponseContent'
          description: ListPools 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreatePool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePoolRequestContent'
        required: true
      responses:
        "200":
          description: CreatePool 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /pools/{poolId}:
    delete:
      operationId: DeletePool
      parameters:
      - explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: DeletePool 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: GetPool
      parameters:
      - explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/PoolMemberType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPoolResponseContent'
          description: GetPool 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: ModifyPool
      parameters:
      - explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPoolRequestContent'
      responses:
        "200":
          description: ModifyPool 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /storage:
    get:
      operationId: ListStorage
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/StorageType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStorageResponseContent'
          description: ListStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    post:
      operationId: CreateStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStorageRequestContent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStorageResponseContent'
          description: CreateStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /storage/{storage}:
    delete:
      operationId: DeleteStorage
      parameters:
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          description: DeleteStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    get:
      operationId: GetStorage
      parameters:
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStorageResponseContent'
          description: GetStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
    put:
      operationId: ModifyStorage
      parameters:
      - explode: false
        in: path
        name: storage
        required: true
        schema:
          pattern: "^[A-Za-z]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyStorageRequestContent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyStorageResponseContent'
          description: ModifyStorage 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
  /version:
    get:
      operationId: GetVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVersionResponseContent'
          description: GetVersion 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputErrorResponseContent'
          description: InvalidInputError 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
          description: InternalServerError 500 response
components:
  schemas:
    AccessControlSummary:
      example:
        path: path
        roleid: roleid
        propagate: 0.8008281904610115
        ugid: ugid
        type: null
      properties:
        path:
          type: string
        roleid:
          description: The role id
          type: string
        ugid:
          description: The user group id
          type: string
        type:
          $ref: '#/components/schemas/AccessControlType'
        propagate:
          description: Allow permission propegation
          type: number
      required:
      - path
      - propagate
      - roleid
      - type
      - ugid
      type: object
    AccessControlType:
      enum:
      - user
      - group
      - token
      type: string
    AddCorosyncNodeRequestContent:
      example:
        new_node_ip: new_node_ip
        apiversion: 0.8008281904610115
        link1: link1
        link0: link0
        link5: link5
        link4: link4
        force: true
        link3: link3
        votes: 1.4658129805029452
        link2: link2
        nodeid: 6.027456183070403
        link7: link7
        link6: link6
      properties:
        apiversion:
          description: The api version on the new node
          type: number
        force:
          description: Do not throw an error if the node is already in the cluster
          type: boolean
        link0:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link1:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link2:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link3:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link4:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link5:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link6:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        link7:
          description: "Address and priority of the link. Input as string with format\
            \ address=<ip>,priority=<int>"
          type: string
        new_node_ip:
          description: The IP address of the node to add
          type: string
        nodeid:
          description: NodeID of the node to add
          type: number
        votes:
          description: Votes thew new node should have
          type: number
      type: object
    AddCorosyncNodeResponseContent:
      example:
        data:
          warnings: warnings
          corosync_conf: corosync_conf
          corosync_authkey: corosync_authkey
      properties:
        data:
          $ref: '#/components/schemas/CorosyncSettings'
      required:
      - data
      type: object
    AddCustomNodeCertificateRequestContent:
      example:
        certificates: certificates
        restart: 0.6027456183070403
        force: 0.08008281904610115
        key: key
      properties:
        certificates:
          description: PEM encoded certificate.
          type: string
        force:
          description: Overwrite existing custom or ACME certificate.
          maximum: 1
          minimum: 0
          type: number
        key:
          description: PEM encoded private key.
          type: string
        restart:
          description: Restart the PVE proxy.
          maximum: 1
          minimum: 0
          type: number
      required:
      - certificates
      type: object
    AddCustomNodeCertificateResponseContent:
      example:
        data:
          notAfter: 0.8008281904610115
          filename: filename
          public-key-type: public-key-type
          sans:
          - sans
          - sans
          subject: subject
          fingerprint: fingerprint
          pem: pem
          issuer: issuer
          notBefore: 6.027456183070403
          public-key-bits: public-key-bits
      properties:
        data:
          $ref: '#/components/schemas/NodeCertificate'
      required:
      - data
      type: object
    AgentInfoSummary:
      example:
        supported-commands:
        - success-response: true
          name: name
          enabled: true
        - success-response: true
          name: name
          enabled: true
        version: version
      properties:
        supported-commands:
          items:
            $ref: '#/components/schemas/CommandSummary'
          type: array
        version:
          type: string
      required:
      - supported-commands
      - version
      type: object
    ApplyNetworkInterfaceConfigurationResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    ApplyVirtualMachineConfigurationAsyncRequestContent:
      example:
        net0: net0
        usb13: usb13
        usb14: usb14
        usb8: usb8
        usb11: usb11
        cipassword: cipassword
        usb9: usb9
        usb12: usb12
        net4: net4
        usb6: usb6
        net3: net3
        usb7: usb7
        usb10: usb10
        net2: net2
        usb4: usb4
        net1: net1
        usb5: usb5
        net7: net7
        net6: net6
        net5: net5
        autostart: 0.6027456183070403
        startdate: startdate
        smbios1: smbios1
        tablet: 0.4965218492984954
        cores: 5.962133916683182
        freeze: true
        usb2: usb2
        lock: null
        usb3: usb3
        usb0: usb0
        sockets: 1.1730742509559433
        usb1: usb1
        ivshmem: ivshmem
        virtio13: virtio13
        virtio12: virtio12
        tpmstate0: tpmstate0
        virtio15: virtio15
        keephugepages: 0.7061401241503109
        virtio14: virtio14
        virtio11: virtio11
        tags: tags
        virtio10: virtio10
        efidisk0: efidisk0
        affinity: affinity
        audio0: audio0
        template: 0.5025004791520294
        bios: null
        protection: 0.14894159098541704
        citype: null
        cicustom: cicustom
        shares: 7.457744773683766
        digest: digest
        ipconfig0: ipconfig0
        spice_enhancements: spice_enhancements
        kvm: 0.9301444243932576
        migrate_speed: 7.386281948385884
        scsi30: scsi30
        ipconfig7: ipconfig7
        sshkeys: sshkeys
        ipconfig5: ipconfig5
        ipconfig6: ipconfig6
        ipconfig3: ipconfig3
        cdrom: cdrom
        ipconfig4: ipconfig4
        ipconfig1: ipconfig1
        ipconfig2: ipconfig2
        watchdog: watchdog
        machine: machine
        parallel2: parallel2
        parallel1: parallel1
        parallel0: parallel0
        arch: null
        localtime: 0.3616076749251911
        scsi22: scsi22
        serial1: serial1
        scsi23: scsi23
        serial0: serial0
        agent: agent
        scsi20: scsi20
        serial3: serial3
        scsi21: scsi21
        serial2: serial2
        searchdomain: searchdomain
        scsi28: scsi28
        cpulimit: 5.637376656633329
        scsi29: scsi29
        scsi26: scsi26
        bootdisk: bootdisk
        scsi27: scsi27
        scsi24: scsi24
        scsi25: scsi25
        startup: startup
        migrate_downtime: 4.145608
        scsi11: scsi11
        scsi12: scsi12
        scsi10: scsi10
        numa: 0.12315135367772556
        scsi19: scsi19
        cpu: cpu
        scsi17: scsi17
        scsi18: scsi18
        scsi15: scsi15
        scsi16: scsi16
        scsi13: scsi13
        scsi14: scsi14
        virtio3: virtio3
        numa0: numa0
        virtio4: virtio4
        numa1: numa1
        virtio5: virtio5
        numa2: numa2
        virtio6: virtio6
        virtio7: virtio7
        virtio8: virtio8
        acpi: 0.08008281904610115
        virtio9: virtio9
        name: name
        numa7: numa7
        nameserver: nameserver
        numa3: numa3
        numa4: numa4
        virtio0: virtio0
        numa5: numa5
        virtio1: virtio1
        numa6: numa6
        virtio2: virtio2
        memory: 2.027123023002322
        scsi1: scsi1
        description: description
        scsi0: scsi0
        scsi5: scsi5
        delete: delete
        scsi4: scsi4
        scsi3: scsi3
        scsi2: scsi2
        rng0: rng0
        scsi9: scsi9
        scsi8: scsi8
        vga: vga
        vmstatestorage: vmstatestorage
        scsi7: scsi7
        hotplug: hotplug
        scsi6: scsi6
        scsihw: null
        sata1: sata1
        sata2: sata2
        sata0: sata0
        sata5: sata5
        ballon: 1.4658129805029452
        sata3: sata3
        sata4: sata4
        boot: boot
        cpuunits: 2.3021358869347655
        ciuser: ciuser
        hostpci0: hostpci0
        reboot: 0.684685269835264
        hostpci1: hostpci1
        keyboard: null
        hostpci4: hostpci4
        hostpci5: hostpci5
        hostpci2: hostpci2
        hostpci3: hostpci3
        hostpci8: hostpci8
        hostpci9: hostpci9
        hostpci6: hostpci6
        hookscript: hookscript
        hostpci7: hostpci7
        ostype: null
        vcpus: 9.965781217890562
        vmgenid: vmgenid
        args: args
        hugepages: null
        ide1: ide1
        ide0: ide0
        onboot: 0.10246457001441578
        ide3: ide3
        ide2: ide2
      properties:
        acpi:
          description: Enable ACPI support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        affinity:
          description: "List of cores to execute processes. Example value: 1,5,8-11."
          type: string
        agent:
          description: The QEMU agent and its configuration.
          type: string
        arch:
          $ref: '#/components/schemas/VirtualMachineArchitecture'
        args:
          description: Additional command line arguments passed to the kvm.
          type: string
        audio0:
          description: The audio device and its configuration.
          type: string
        autostart:
          description: Start the virtual machine on crash.
          maximum: 1
          minimum: 0
          type: number
        ballon:
          description: Amount of RAM for the VM in MB.
          type: number
        boot:
          description: The boot order of the virtual machine.
          type: string
        bios:
          $ref: '#/components/schemas/VirtualMachineBios'
        bootdisk:
          description: The boot disk of the virtual machine.
          type: string
        cdrom:
          description: The CD-ROM device and its configuration. An alias for option
            ide2
          type: string
        cicustom:
          description: Specify custom cloud-init files to be used at start.
          type: string
        cipassword:
          description: The password for the cloud-init user.
          type: string
        citype:
          $ref: '#/components/schemas/VirtualMachineCloudInitType'
        ciuser:
          description: The cloud-init user.
          type: string
        cores:
          description: Number of cores per socket.
          type: number
        cpu:
          description: The CPU type.
          type: string
        cpulimit:
          description: CPU usage limit.
          type: number
        cpuunits:
          description: "CPU weight for a VM. The higher the value, the more CPU time\
            \ the VM gets."
          type: number
        description:
          description: The description of the virtual machine.
          type: string
        digest:
          description: The SHA1 digest of the virtual machine configuration. This
            can prevent concurrent modifications of the virtual machine configuration.
          type: string
        delete:
          description: A list of settings to delete from the configuration.
          type: string
        efidisk0:
          description: The EFI disk device and its configuration.
          type: string
        freeze:
          description: Freeze the CPU at virtual machine start.
          type: boolean
        hookscript:
          description: The hook script that is used at various point in the virtual
            machines lifecycle.
          type: string
        hostpci0:
          description: The host PCI device and its configuration.
          type: string
        hostpci1:
          description: The host PCI device and its configuration.
          type: string
        hostpci2:
          description: The host PCI device and its configuration.
          type: string
        hostpci3:
          description: The host PCI device and its configuration.
          type: string
        hostpci4:
          description: The host PCI device and its configuration.
          type: string
        hostpci5:
          description: The host PCI device and its configuration.
          type: string
        hostpci6:
          description: The host PCI device and its configuration.
          type: string
        hostpci7:
          description: The host PCI device and its configuration.
          type: string
        hostpci8:
          description: The host PCI device and its configuration.
          type: string
        hostpci9:
          description: The host PCI device and its configuration.
          type: string
        hugepages:
          $ref: '#/components/schemas/VirtualMachineHugePages'
        ide0:
          description: Volume used as IDE or harddisk.
          type: string
        ide1:
          description: Volume used as IDE or harddisk.
          type: string
        ide2:
          description: Volume used as IDE or harddisk.
          type: string
        ide3:
          description: Volume used as IDE or harddisk.
          type: string
        ipconfig0:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig1:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig2:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig3:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig4:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig5:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig6:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig7:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ivshmem:
          description: Inter VM-shared memory.
          type: string
        keephugepages:
          description: Keep hugepages after shutdown.
          maximum: 1
          minimum: 0
          type: number
        keyboard:
          $ref: '#/components/schemas/VirtualMachineKeyboard'
        kvm:
          description: Enable KVM support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        localtime:
          description: Set the real time clock to local time.
          maximum: 1
          minimum: 0
          type: number
        lock:
          $ref: '#/components/schemas/VirtualMachineConfigLock'
        machine:
          description: The machine type.
          type: string
        memory:
          description: The amount of memory in MB.
          type: number
        migrate_downtime:
          description: The maximum tolerated downtime in seconds during migration.
          format: float
          type: number
        migrate_speed:
          description: The maximum speed in MB/s during migration. 0 is no limit
          type: number
        name:
          description: The name of the virtual machine.
          type: string
        nameserver:
          description: The nameserver for the virtual machine.
          type: string
        net0:
          description: The network interface and its configuration.
          type: string
        net1:
          description: The network interface and its configuration.
          type: string
        net2:
          description: The network interface and its configuration.
          type: string
        net3:
          description: The network interface and its configuration.
          type: string
        net4:
          description: The network interface and its configuration.
          type: string
        net5:
          description: The network interface and its configuration.
          type: string
        net6:
          description: The network interface and its configuration.
          type: string
        net7:
          description: The network interface and its configuration.
          type: string
        numa:
          description: Enable NUMA support. Default to disabled.
          maximum: 1
          minimum: 0
          type: number
        numa0:
          description: NUMA topology.
          type: string
        numa1:
          description: NUMA topology.
          type: string
        numa2:
          description: NUMA topology.
          type: string
        numa3:
          description: NUMA topology.
          type: string
        numa4:
          description: NUMA topology.
          type: string
        numa5:
          description: NUMA topology.
          type: string
        numa6:
          description: NUMA topology.
          type: string
        numa7:
          description: NUMA topology.
          type: string
        onboot:
          description: Start the virtual machine on boot.
          maximum: 1
          minimum: 0
          type: number
        ostype:
          $ref: '#/components/schemas/VirtualMachineOperatingSystem'
        parallel0:
          description: Host parallel device.
          type: string
        parallel1:
          description: Host parallel device.
          type: string
        parallel2:
          description: Host parallel device.
          type: string
        protection:
          description: The protection flag on the virtual machine. Disables remove
            VM and disk operations.
          maximum: 1
          minimum: 0
          type: number
        reboot:
          description: Allows reboot. False will have the virtual machine exit on
            reboot.
          maximum: 1
          minimum: 0
          type: number
        rng0:
          description: Virtio based random number generator.
          type: string
        sata0:
          description: Uses the volume as a sata disk.
          type: string
        sata1:
          description: Uses the volume as a sata disk.
          type: string
        sata2:
          description: Uses the volume as a sata disk.
          type: string
        sata3:
          description: Uses the volume as a sata disk.
          type: string
        sata4:
          description: Uses the volume as a sata disk.
          type: string
        sata5:
          description: Uses the volume as a sata disk.
          type: string
        scsi0:
          description: Uses the volume as a scsi disk.
          type: string
        scsi1:
          description: Uses the volume as a scsi disk.
          type: string
        scsi2:
          description: Uses the volume as a scsi disk.
          type: string
        scsi3:
          description: Uses the volume as a scsi disk.
          type: string
        scsi4:
          description: Uses the volume as a scsi disk.
          type: string
        scsi5:
          description: Uses the volume as a scsi disk.
          type: string
        scsi6:
          description: Uses the volume as a scsi disk.
          type: string
        scsi7:
          description: Uses the volume as a scsi disk.
          type: string
        scsi8:
          description: Uses the volume as a scsi disk.
          type: string
        scsi9:
          description: Uses the volume as a scsi disk.
          type: string
        scsi10:
          description: Uses the volume as a scsi disk.
          type: string
        scsi11:
          description: Uses the volume as a scsi disk.
          type: string
        scsi12:
          description: Uses the volume as a scsi disk.
          type: string
        scsi13:
          description: Uses the volume as a scsi disk.
          type: string
        scsi14:
          description: Uses the volume as a scsi disk.
          type: string
        scsi15:
          description: Uses the volume as a scsi disk.
          type: string
        scsi16:
          description: Uses the volume as a scsi disk.
          type: string
        scsi17:
          description: Uses the volume as a scsi disk.
          type: string
        scsi18:
          description: Uses the volume as a scsi disk.
          type: string
        scsi19:
          description: Uses the volume as a scsi disk.
          type: string
        scsi20:
          description: Uses the volume as a scsi disk.
          type: string
        scsi21:
          description: Uses the volume as a scsi disk.
          type: string
        scsi22:
          description: Uses the volume as a scsi disk.
          type: string
        scsi23:
          description: Uses the volume as a scsi disk.
          type: string
        scsi24:
          description: Uses the volume as a scsi disk.
          type: string
        scsi25:
          description: Uses the volume as a scsi disk.
          type: string
        scsi26:
          description: Uses the volume as a scsi disk.
          type: string
        scsi27:
          description: Uses the volume as a scsi disk.
          type: string
        scsi28:
          description: Uses the volume as a scsi disk.
          type: string
        scsi29:
          description: Uses the volume as a scsi disk.
          type: string
        scsi30:
          description: Uses the volume as a scsi disk.
          type: string
        scsihw:
          $ref: '#/components/schemas/VirtualMachineScsiControllerType'
        searchdomain:
          description: Cloudinit search domain.
          type: string
        serial0:
          description: A serial device on the virtual machine.
          type: string
        serial1:
          description: A serial device on the virtual machine.
          type: string
        serial2:
          description: A serial device on the virtual machine.
          type: string
        serial3:
          description: A serial device on the virtual machine.
          type: string
        shares:
          description: The amount of memory shares for autoballooning.
          type: number
        smbios1:
          description: SMBIOS type 1 field.
          type: string
        sockets:
          description: The number of cpu sockets.
          type: number
        spice_enhancements:
          description: Enable spice enhancements.
          type: string
        sshkeys:
          description: Cloud init SSH public keys. One per line.
          type: string
        startdate:
          description: The start date for the virtual machine real time clock.
          type: string
        startup:
          description: The startup policy for the virtual machine.
          type: string
        tablet:
          description: Enable tablet device.
          maximum: 1
          minimum: 0
          type: number
        tags:
          description: The tags for the virtual machine.
          type: string
        template:
          description: If the virtual machine is a template or not.
          maximum: 1
          minimum: 0
          type: number
        tpmstate0:
          description: Configure a disk for storing TPM state.
          type: string
        usb0:
          description: A usb device on the virtual machine.
          type: string
        usb1:
          description: A usb device on the virtual machine.
          type: string
        usb2:
          description: A usb device on the virtual machine.
          type: string
        usb3:
          description: A usb device on the virtual machine.
          type: string
        usb4:
          description: A usb device on the virtual machine.
          type: string
        usb5:
          description: A usb device on the virtual machine.
          type: string
        usb6:
          description: A usb device on the virtual machine.
          type: string
        usb7:
          description: A usb device on the virtual machine.
          type: string
        usb8:
          description: A usb device on the virtual machine.
          type: string
        usb9:
          description: A usb device on the virtual machine.
          type: string
        usb10:
          description: A usb device on the virtual machine.
          type: string
        usb11:
          description: A usb device on the virtual machine.
          type: string
        usb12:
          description: A usb device on the virtual machine.
          type: string
        usb13:
          description: A usb device on the virtual machine.
          type: string
        usb14:
          description: A usb device on the virtual machine.
          type: string
        hotplug:
          description: Hotplug devices.
          type: string
        vcpus:
          description: The number of hotplugged virtual cpus.
          type: number
        vga:
          description: Configuration for the VGA hardware.
          type: string
        virtio0:
          description: Uses the volume as a virtio disk.
          type: string
        virtio1:
          description: Uses the volume as a virtio disk.
          type: string
        virtio2:
          description: Uses the volume as a virtio disk.
          type: string
        virtio3:
          description: Uses the volume as a virtio disk.
          type: string
        virtio4:
          description: Uses the volume as a virtio disk.
          type: string
        virtio5:
          description: Uses the volume as a virtio disk.
          type: string
        virtio6:
          description: Uses the volume as a virtio disk.
          type: string
        virtio7:
          description: Uses the volume as a virtio disk.
          type: string
        virtio8:
          description: Uses the volume as a virtio disk.
          type: string
        virtio9:
          description: Uses the volume as a virtio disk.
          type: string
        virtio10:
          description: Uses the volume as a virtio disk.
          type: string
        virtio11:
          description: Uses the volume as a virtio disk.
          type: string
        virtio12:
          description: Uses the volume as a virtio disk.
          type: string
        virtio13:
          description: Uses the volume as a virtio disk.
          type: string
        virtio14:
          description: Uses the volume as a virtio disk.
          type: string
        virtio15:
          description: Uses the volume as a virtio disk.
          type: string
        vmgenid:
          description: Enable VM generation id seed.
          type: string
        vmstatestorage:
          description: Default location for storing VM state.
          type: string
        watchdog:
          description: The watchdog device for the virtual machine.
          type: string
      type: object
    ApplyVirtualMachineConfigurationAsyncResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    ApplyVirtualMachineConfigurationSyncRequestContent:
      example:
        net0: net0
        usb13: usb13
        usb14: usb14
        usb8: usb8
        usb11: usb11
        cipassword: cipassword
        usb9: usb9
        usb12: usb12
        net4: net4
        usb6: usb6
        net3: net3
        usb7: usb7
        usb10: usb10
        net2: net2
        usb4: usb4
        net1: net1
        usb5: usb5
        net7: net7
        net6: net6
        net5: net5
        autostart: 0.6027456183070403
        startdate: startdate
        smbios1: smbios1
        tablet: 0.4965218492984954
        cores: 5.962133916683182
        freeze: true
        usb2: usb2
        lock: null
        usb3: usb3
        usb0: usb0
        sockets: 1.1730742509559433
        usb1: usb1
        ivshmem: ivshmem
        virtio13: virtio13
        virtio12: virtio12
        tpmstate0: tpmstate0
        virtio15: virtio15
        keephugepages: 0.7061401241503109
        virtio14: virtio14
        virtio11: virtio11
        tags: tags
        virtio10: virtio10
        efidisk0: efidisk0
        affinity: affinity
        audio0: audio0
        template: 0.5025004791520294
        bios: null
        protection: 0.14894159098541704
        citype: null
        cicustom: cicustom
        shares: 7.457744773683766
        digest: digest
        ipconfig0: ipconfig0
        spice_enhancements: spice_enhancements
        kvm: 0.9301444243932576
        migrate_speed: 7.386281948385884
        scsi30: scsi30
        ipconfig7: ipconfig7
        sshkeys: sshkeys
        ipconfig5: ipconfig5
        ipconfig6: ipconfig6
        ipconfig3: ipconfig3
        cdrom: cdrom
        ipconfig4: ipconfig4
        ipconfig1: ipconfig1
        ipconfig2: ipconfig2
        watchdog: watchdog
        machine: machine
        parallel2: parallel2
        parallel1: parallel1
        parallel0: parallel0
        arch: null
        localtime: 0.3616076749251911
        scsi22: scsi22
        serial1: serial1
        scsi23: scsi23
        serial0: serial0
        agent: agent
        scsi20: scsi20
        serial3: serial3
        scsi21: scsi21
        serial2: serial2
        searchdomain: searchdomain
        scsi28: scsi28
        cpulimit: 5.637376656633329
        scsi29: scsi29
        scsi26: scsi26
        bootdisk: bootdisk
        scsi27: scsi27
        scsi24: scsi24
        scsi25: scsi25
        startup: startup
        migrate_downtime: 4.145608
        scsi11: scsi11
        scsi12: scsi12
        scsi10: scsi10
        numa: 0.12315135367772556
        scsi19: scsi19
        cpu: cpu
        scsi17: scsi17
        scsi18: scsi18
        scsi15: scsi15
        scsi16: scsi16
        scsi13: scsi13
        scsi14: scsi14
        virtio3: virtio3
        numa0: numa0
        virtio4: virtio4
        numa1: numa1
        virtio5: virtio5
        numa2: numa2
        virtio6: virtio6
        virtio7: virtio7
        virtio8: virtio8
        acpi: 0.08008281904610115
        virtio9: virtio9
        name: name
        numa7: numa7
        nameserver: nameserver
        numa3: numa3
        numa4: numa4
        virtio0: virtio0
        numa5: numa5
        virtio1: virtio1
        numa6: numa6
        virtio2: virtio2
        memory: 2.027123023002322
        scsi1: scsi1
        description: description
        scsi0: scsi0
        scsi5: scsi5
        delete: delete
        scsi4: scsi4
        scsi3: scsi3
        scsi2: scsi2
        rng0: rng0
        scsi9: scsi9
        scsi8: scsi8
        vga: vga
        vmstatestorage: vmstatestorage
        scsi7: scsi7
        hotplug: hotplug
        scsi6: scsi6
        scsihw: null
        sata1: sata1
        sata2: sata2
        sata0: sata0
        sata5: sata5
        ballon: 1.4658129805029452
        sata3: sata3
        sata4: sata4
        boot: boot
        cpuunits: 2.3021358869347655
        ciuser: ciuser
        hostpci0: hostpci0
        reboot: 0.684685269835264
        hostpci1: hostpci1
        keyboard: null
        hostpci4: hostpci4
        hostpci5: hostpci5
        hostpci2: hostpci2
        hostpci3: hostpci3
        hostpci8: hostpci8
        hostpci9: hostpci9
        hostpci6: hostpci6
        hookscript: hookscript
        hostpci7: hostpci7
        ostype: null
        vcpus: 9.965781217890562
        vmgenid: vmgenid
        args: args
        hugepages: null
        ide1: ide1
        ide0: ide0
        onboot: 0.10246457001441578
        ide3: ide3
        ide2: ide2
      properties:
        acpi:
          description: Enable ACPI support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        affinity:
          description: "List of cores to execute processes. Example value: 1,5,8-11."
          type: string
        agent:
          description: The QEMU agent and its configuration.
          type: string
        arch:
          $ref: '#/components/schemas/VirtualMachineArchitecture'
        args:
          description: Additional command line arguments passed to the kvm.
          type: string
        audio0:
          description: The audio device and its configuration.
          type: string
        autostart:
          description: Start the virtual machine on crash.
          maximum: 1
          minimum: 0
          type: number
        ballon:
          description: Amount of RAM for the VM in MB.
          type: number
        boot:
          description: The boot order of the virtual machine.
          type: string
        bootdisk:
          description: The boot disk of the virtual machine.
          type: string
        cdrom:
          description: The CD-ROM device and its configuration. An alias for option
            ide2
          type: string
        cicustom:
          description: Specify custom cloud-init files to be used at start.
          type: string
        cipassword:
          description: The password for the cloud-init user.
          type: string
        citype:
          $ref: '#/components/schemas/VirtualMachineCloudInitType'
        ciuser:
          description: The cloud-init user.
          type: string
        cores:
          description: Number of cores per socket.
          type: number
        bios:
          $ref: '#/components/schemas/VirtualMachineBios'
        cpu:
          description: The CPU type.
          type: string
        cpulimit:
          description: CPU usage limit.
          type: number
        cpuunits:
          description: "CPU weight for a VM. The higher the value, the more CPU time\
            \ the VM gets."
          type: number
        description:
          description: The description of the virtual machine.
          type: string
        digest:
          description: The SHA1 digest of the virtual machine configuration. This
            can prevent concurrent modifications of the virtual machine configuration.
          type: string
        delete:
          description: A list of settings to delete from the configuration.
          type: string
        efidisk0:
          description: The EFI disk device and its configuration.
          type: string
        freeze:
          description: Freeze the CPU at virtual machine start.
          type: boolean
        hookscript:
          description: The hook script that is used at various point in the virtual
            machines lifecycle.
          type: string
        hostpci0:
          description: The host PCI device and its configuration.
          type: string
        hostpci1:
          description: The host PCI device and its configuration.
          type: string
        hostpci2:
          description: The host PCI device and its configuration.
          type: string
        hostpci3:
          description: The host PCI device and its configuration.
          type: string
        hostpci4:
          description: The host PCI device and its configuration.
          type: string
        hostpci5:
          description: The host PCI device and its configuration.
          type: string
        hostpci6:
          description: The host PCI device and its configuration.
          type: string
        hostpci7:
          description: The host PCI device and its configuration.
          type: string
        hostpci8:
          description: The host PCI device and its configuration.
          type: string
        hostpci9:
          description: The host PCI device and its configuration.
          type: string
        hugepages:
          $ref: '#/components/schemas/VirtualMachineHugePages'
        ide0:
          description: Volume used as IDE or harddisk.
          type: string
        ide1:
          description: Volume used as IDE or harddisk.
          type: string
        ide2:
          description: Volume used as IDE or harddisk.
          type: string
        ide3:
          description: Volume used as IDE or harddisk.
          type: string
        ipconfig0:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig1:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig2:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig3:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig4:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig5:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig6:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig7:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ivshmem:
          description: Inter VM-shared memory.
          type: string
        keephugepages:
          description: Keep hugepages after shutdown.
          maximum: 1
          minimum: 0
          type: number
        keyboard:
          $ref: '#/components/schemas/VirtualMachineKeyboard'
        kvm:
          description: Enable KVM support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        localtime:
          description: Set the real time clock to local time.
          maximum: 1
          minimum: 0
          type: number
        lock:
          $ref: '#/components/schemas/VirtualMachineConfigLock'
        machine:
          description: The machine type.
          type: string
        memory:
          description: The amount of memory in MB.
          type: number
        migrate_downtime:
          description: The maximum tolerated downtime in seconds during migration.
          format: float
          type: number
        migrate_speed:
          description: The maximum speed in MB/s during migration. 0 is no limit
          type: number
        name:
          description: The name of the virtual machine.
          type: string
        nameserver:
          description: The nameserver for the virtual machine.
          type: string
        net0:
          description: The network interface and its configuration.
          type: string
        net1:
          description: The network interface and its configuration.
          type: string
        net2:
          description: The network interface and its configuration.
          type: string
        net3:
          description: The network interface and its configuration.
          type: string
        net4:
          description: The network interface and its configuration.
          type: string
        net5:
          description: The network interface and its configuration.
          type: string
        net6:
          description: The network interface and its configuration.
          type: string
        net7:
          description: The network interface and its configuration.
          type: string
        numa:
          description: Enable NUMA support. Default to disabled.
          maximum: 1
          minimum: 0
          type: number
        numa0:
          description: NUMA topology.
          type: string
        numa1:
          description: NUMA topology.
          type: string
        numa2:
          description: NUMA topology.
          type: string
        numa3:
          description: NUMA topology.
          type: string
        numa4:
          description: NUMA topology.
          type: string
        numa5:
          description: NUMA topology.
          type: string
        numa6:
          description: NUMA topology.
          type: string
        numa7:
          description: NUMA topology.
          type: string
        onboot:
          description: Start the virtual machine on boot.
          maximum: 1
          minimum: 0
          type: number
        ostype:
          $ref: '#/components/schemas/VirtualMachineOperatingSystem'
        parallel0:
          description: Host parallel device.
          type: string
        parallel1:
          description: Host parallel device.
          type: string
        parallel2:
          description: Host parallel device.
          type: string
        protection:
          description: The protection flag on the virtual machine. Disables remove
            VM and disk operations.
          maximum: 1
          minimum: 0
          type: number
        reboot:
          description: Allows reboot. False will have the virtual machine exit on
            reboot.
          maximum: 1
          minimum: 0
          type: number
        rng0:
          description: Virtio based random number generator.
          type: string
        sata0:
          description: Uses the volume as a sata disk.
          type: string
        sata1:
          description: Uses the volume as a sata disk.
          type: string
        sata2:
          description: Uses the volume as a sata disk.
          type: string
        sata3:
          description: Uses the volume as a sata disk.
          type: string
        sata4:
          description: Uses the volume as a sata disk.
          type: string
        sata5:
          description: Uses the volume as a sata disk.
          type: string
        scsi0:
          description: Uses the volume as a scsi disk.
          type: string
        scsi1:
          description: Uses the volume as a scsi disk.
          type: string
        scsi2:
          description: Uses the volume as a scsi disk.
          type: string
        scsi3:
          description: Uses the volume as a scsi disk.
          type: string
        scsi4:
          description: Uses the volume as a scsi disk.
          type: string
        scsi5:
          description: Uses the volume as a scsi disk.
          type: string
        scsi6:
          description: Uses the volume as a scsi disk.
          type: string
        scsi7:
          description: Uses the volume as a scsi disk.
          type: string
        scsi8:
          description: Uses the volume as a scsi disk.
          type: string
        scsi9:
          description: Uses the volume as a scsi disk.
          type: string
        scsi10:
          description: Uses the volume as a scsi disk.
          type: string
        scsi11:
          description: Uses the volume as a scsi disk.
          type: string
        scsi12:
          description: Uses the volume as a scsi disk.
          type: string
        scsi13:
          description: Uses the volume as a scsi disk.
          type: string
        scsi14:
          description: Uses the volume as a scsi disk.
          type: string
        scsi15:
          description: Uses the volume as a scsi disk.
          type: string
        scsi16:
          description: Uses the volume as a scsi disk.
          type: string
        scsi17:
          description: Uses the volume as a scsi disk.
          type: string
        scsi18:
          description: Uses the volume as a scsi disk.
          type: string
        scsi19:
          description: Uses the volume as a scsi disk.
          type: string
        scsi20:
          description: Uses the volume as a scsi disk.
          type: string
        scsi21:
          description: Uses the volume as a scsi disk.
          type: string
        scsi22:
          description: Uses the volume as a scsi disk.
          type: string
        scsi23:
          description: Uses the volume as a scsi disk.
          type: string
        scsi24:
          description: Uses the volume as a scsi disk.
          type: string
        scsi25:
          description: Uses the volume as a scsi disk.
          type: string
        scsi26:
          description: Uses the volume as a scsi disk.
          type: string
        scsi27:
          description: Uses the volume as a scsi disk.
          type: string
        scsi28:
          description: Uses the volume as a scsi disk.
          type: string
        scsi29:
          description: Uses the volume as a scsi disk.
          type: string
        scsi30:
          description: Uses the volume as a scsi disk.
          type: string
        scsihw:
          $ref: '#/components/schemas/VirtualMachineScsiControllerType'
        searchdomain:
          description: Cloudinit search domain.
          type: string
        serial0:
          description: A serial device on the virtual machine.
          type: string
        serial1:
          description: A serial device on the virtual machine.
          type: string
        serial2:
          description: A serial device on the virtual machine.
          type: string
        serial3:
          description: A serial device on the virtual machine.
          type: string
        shares:
          description: The amount of memory shares for autoballooning.
          type: number
        smbios1:
          description: SMBIOS type 1 field.
          type: string
        sockets:
          description: The number of cpu sockets.
          type: number
        spice_enhancements:
          description: Enable spice enhancements.
          type: string
        sshkeys:
          description: Cloud init SSH public keys. One per line.
          type: string
        startdate:
          description: The start date for the virtual machine real time clock.
          type: string
        startup:
          description: The startup policy for the virtual machine.
          type: string
        tablet:
          description: Enable tablet device.
          maximum: 1
          minimum: 0
          type: number
        tags:
          description: The tags for the virtual machine.
          type: string
        template:
          description: If the virtual machine is a template or not.
          maximum: 1
          minimum: 0
          type: number
        tpmstate0:
          description: Configure a disk for storing TPM state.
          type: string
        usb0:
          description: A usb device on the virtual machine.
          type: string
        usb1:
          description: A usb device on the virtual machine.
          type: string
        usb2:
          description: A usb device on the virtual machine.
          type: string
        usb3:
          description: A usb device on the virtual machine.
          type: string
        usb4:
          description: A usb device on the virtual machine.
          type: string
        usb5:
          description: A usb device on the virtual machine.
          type: string
        usb6:
          description: A usb device on the virtual machine.
          type: string
        usb7:
          description: A usb device on the virtual machine.
          type: string
        usb8:
          description: A usb device on the virtual machine.
          type: string
        usb9:
          description: A usb device on the virtual machine.
          type: string
        usb10:
          description: A usb device on the virtual machine.
          type: string
        usb11:
          description: A usb device on the virtual machine.
          type: string
        usb12:
          description: A usb device on the virtual machine.
          type: string
        usb13:
          description: A usb device on the virtual machine.
          type: string
        usb14:
          description: A usb device on the virtual machine.
          type: string
        hotplug:
          description: Hotplug devices.
          type: string
        vcpus:
          description: The number of hotplugged virtual cpus.
          type: number
        vga:
          description: Configuration for the VGA hardware.
          type: string
        virtio0:
          description: Uses the volume as a virtio disk.
          type: string
        virtio1:
          description: Uses the volume as a virtio disk.
          type: string
        virtio2:
          description: Uses the volume as a virtio disk.
          type: string
        virtio3:
          description: Uses the volume as a virtio disk.
          type: string
        virtio4:
          description: Uses the volume as a virtio disk.
          type: string
        virtio5:
          description: Uses the volume as a virtio disk.
          type: string
        virtio6:
          description: Uses the volume as a virtio disk.
          type: string
        virtio7:
          description: Uses the volume as a virtio disk.
          type: string
        virtio8:
          description: Uses the volume as a virtio disk.
          type: string
        virtio9:
          description: Uses the volume as a virtio disk.
          type: string
        virtio10:
          description: Uses the volume as a virtio disk.
          type: string
        virtio11:
          description: Uses the volume as a virtio disk.
          type: string
        virtio12:
          description: Uses the volume as a virtio disk.
          type: string
        virtio13:
          description: Uses the volume as a virtio disk.
          type: string
        virtio14:
          description: Uses the volume as a virtio disk.
          type: string
        virtio15:
          description: Uses the volume as a virtio disk.
          type: string
        vmgenid:
          description: Enable VM generation id seed.
          type: string
        vmstatestorage:
          description: Default location for storing VM state.
          type: string
        watchdog:
          description: The watchdog device for the virtual machine.
          type: string
      type: object
    CapabilityCategoryMap:
      additionalProperties:
        type: number
      type: object
    CapabilityMap:
      additionalProperties:
        $ref: '#/components/schemas/CapabilityCategoryMap'
      type: object
    ChangePasswordRequestContent:
      example:
        password: password
        userid: userid
      properties:
        userid:
          type: string
        password:
          type: string
      required:
      - password
      - userid
      type: object
    ChecksumAlgorithm:
      enum:
      - md5
      - sha1
      - sha224
      - sha256
      - sha384
      - sha512
      type: string
    CloneVirtualMachineDiskFormat:
      enum:
      - raw
      - qcow2
      - vmdk
      type: string
    CloneVirtualMachineRequestContent:
      example:
        bwlimit: 6.027456183070403
        newid: 0.8008281904610115
        name: name
        format: null
        pool: pool
        description: description
        storage: storage
        snapname: snapname
        full: true
        target: target
      properties:
        newid:
          description: The id of the virtual machine as an integer
          type: number
        bwlimit:
          description: Override deafult bandwidth limit in KiB/s
          type: number
        description:
          description: Set a description for the new VM
          type: string
        full:
          description: Create a full clone with all copy of disks.
          type: boolean
        name:
          description: Set a name for the new VM
          type: string
        format:
          $ref: '#/components/schemas/CloneVirtualMachineDiskFormat'
        storage:
          description: Set the storage for the new VM. Only valid for full clones.
          pattern: "^[A-Za-z]+$"
          type: string
        target:
          description: Set the target node for the new VM. Only valid if the original
            VM is on shared storage.
          pattern: "^[A-Za-z]+$"
          type: string
        snapname:
          description: Set the snapshot name for the new VM.
          type: string
        pool:
          description: Add the VM to a resource pool.
          type: string
      required:
      - newid
      type: object
    CloneVirtualMachineResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CloudInitType:
      enum:
      - user
      - network
      - meta
      type: string
    CommandStatusSummary:
      example:
        err-truncated: true
        exited: true
        exitcode: 0.8008281904610115
        err-data: err-data
        signal: 6.027456183070403
        out-truncated: true
        out-data: out-data
      properties:
        exited:
          type: boolean
        err-data:
          type: string
        err-truncated:
          type: boolean
        exitcode:
          type: number
        out-data:
          type: string
        out-truncated:
          type: boolean
        signal:
          type: number
      required:
      - exited
      type: object
    CommandSummary:
      example:
        success-response: true
        name: name
        enabled: true
      properties:
        name:
          type: string
        enabled:
          type: boolean
        success-response:
          type: boolean
      required:
      - enabled
      - name
      - success-response
      type: object
    CorosyncNodeSummary:
      example:
        ring1_addr: ring1_addr
        ring4_addr: ring4_addr
        ring7_addr: ring7_addr
        ring3_addr: ring3_addr
        pve_addr: pve_addr
        quorum_votes: quorum_votes
        name: name
        ring0_addr: ring0_addr
        ring5_addr: ring5_addr
        nodeid: nodeid
        ring2_addr: ring2_addr
        ring6_addr: ring6_addr
      properties:
        nodeid:
          type: string
        quorum_votes:
          type: string
        ring0_addr:
          type: string
        ring1_addr:
          type: string
        ring2_addr:
          type: string
        ring3_addr:
          type: string
        ring4_addr:
          type: string
        ring5_addr:
          type: string
        ring6_addr:
          type: string
        ring7_addr:
          type: string
        name:
          pattern: "^[A-Za-z]+$"
          type: string
        pve_addr:
          type: string
      required:
      - name
      - nodeid
      - quorum_votes
      - ring0_addr
      type: object
    CorosyncSettings:
      example:
        warnings: warnings
        corosync_conf: corosync_conf
        corosync_authkey: corosync_authkey
      properties:
        corosync_authkey:
          type: string
        corosync_conf:
          type: string
        warnings:
          type: string
      required:
      - corosync_authkey
      - corosync_conf
      - warnings
      type: object
    CpuCapabilitySummary:
      example:
        vendor: vendor
        custom: 0.8008281904610115
        name: name
      properties:
        custom:
          type: number
        vendor:
          type: string
        name:
          type: string
      required:
      - custom
      - name
      - vendor
      type: object
    CreateClusterConfigRequestContent:
      example:
        link1: link1
        clustername: clustername
        link0: link0
        link5: link5
        link4: link4
        link3: link3
        votes: 6.027456183070403
        link2: link2
        nodeid: 0.8008281904610115
        link7: link7
        link6: link6
      properties:
        clustername:
          description: Cluster name
          type: string
        link0:
          type: string
        link1:
          type: string
        link2:
          type: string
        link3:
          type: string
        link4:
          type: string
        link5:
          type: string
        link6:
          type: string
        link7:
          type: string
        nodeid:
          description: Node ID for the node
          type: number
        votes:
          description: Votes for the node
          type: number
      required:
      - clustername
      type: object
    CreateClusterConfigResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreateDirectoryRequestContent:
      example:
        name: name
        device: device
        add_storage: 0.8008281904610115
        filesystem: null
      properties:
        device:
          description: The device to create the directory on.
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        name:
          description: The storage identifier.
          type: string
        add_storage:
          description: "Configure storage using the directory. Takes a boolean integer\
            \ value (0 false, 1 true)."
          type: number
        filesystem:
          $ref: '#/components/schemas/DirectoryFileSystem'
      required:
      - device
      - name
      type: object
    CreateDirectoryResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreateGroupRequestContent:
      example:
        groupid: groupid
        comment: comment
      properties:
        groupid:
          type: string
        comment:
          type: string
      required:
      - groupid
      type: object
    CreateLVMRequestContent:
      example:
        name: name
        device: device
        add_storage: 0.8008281904610115
      properties:
        device:
          description: The device to create the lvm on.
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        name:
          description: The storage identifier.
          type: string
        add_storage:
          description: "Configure storage using the lvm. Takes a boolean integer value\
            \ (0 false, 1 true)."
          type: number
      required:
      - device
      - name
      type: object
    CreateLVMResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreateLVMThinRequestContent:
      example:
        name: name
        device: device
        add_storage: 0.8008281904610115
      properties:
        device:
          description: The device to create the lvm thinpool on.
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        name:
          description: The storage identifier.
          type: string
        add_storage:
          description: "Configure storage using the lvm thinpool. Takes a boolean\
            \ integer value (0 false, 1 true)."
          type: number
      required:
      - device
      - name
      type: object
    CreateLVMThinResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreateNetworkInterfaceRequestContent:
      example:
        bridge_ports: bridge_ports
        bond_primary: bond_primary
        bond_mode: null
        type: null
        autostart: true
        ovs_bridge: ovs_bridge
        bridge_vlan_aware: true
        netmask: netmask
        vlan-raw-device: vlan-raw-device
        address6: address6
        cidr: cidr
        ovs_options: ovs_options
        comments6: comments6
        ovs_ports: ovs_ports
        slaves: slaves
        address: address
        comments: comments
        ovs_bonds: ovs_bonds
        cidr6: cidr6
        mtu: 0.8008281904610115
        iface: iface
        vlan-id: 1.4658129805029452
        ovs_tag: 6.027456183070403
        bond_xmit_hash_policy: null
        netmask6: netmask6
        gateway6: gateway6
        gateway: gateway
      properties:
        iface:
          type: string
        type:
          $ref: '#/components/schemas/NetworkInterfaceType'
        address:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        address6:
          pattern: "^([a-f0-9:]+:+)+[a-f0-9]+$"
          type: string
        autostart:
          type: boolean
        bond_primary:
          type: string
        bond_mode:
          $ref: '#/components/schemas/NetworkInterfaceBondMode'
        bond_xmit_hash_policy:
          $ref: '#/components/schemas/NetworkInterfaceBondHashPolicy'
        bridge_ports:
          type: string
        bridge_vlan_aware:
          type: boolean
        cidr:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/(3[0-2]|[1-2][0-9]|[0-9])$"
          type: string
        cidr6:
          type: string
        comments:
          type: string
        comments6:
          type: string
        gateway:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        gateway6:
          pattern: "^([a-f0-9:]+:+)+[a-f0-9]+$"
          type: string
        mtu:
          type: number
        netmask:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        netmask6:
          type: string
        ovs_bonds:
          type: string
        ovs_options:
          type: string
        ovs_ports:
          type: string
        ovs_tag:
          type: number
        ovs_bridge:
          type: string
        slaves:
          type: string
        vlan-id:
          type: number
        vlan-raw-device:
          type: string
      required:
      - iface
      - type
      type: object
    CreatePoolRequestContent:
      example:
        poolid: poolid
        comment: comment
      properties:
        poolid:
          type: string
        comment:
          type: string
      required:
      - poolid
      type: object
    CreateRealmRequestContent:
      example:
        bind_dn: bind_dn
        group_classes: group_classes
        cert: cert
        sync_attributes: sync_attributes
        type: null
        secure: 0.5637376656633328
        server2: server2
        server1: server1
        username-claim: username-claim
        mode: null
        acr-values: acr-values
        user_attr: user_attr
        default: 0.14658129805029452
        password: password
        base_dn: base_dn
        group_filter: group_filter
        sync-defaults-options: sync-defaults-options
        verify: 0.23021358869347652
        client-id: client-id
        case-sensitive: 0.6027456183070403
        user_classes: user_classes
        sslversion: null
        certkey: certkey
        group_dn: group_dn
        issuer-url: issuer-url
        tfa: tfa
        filter: filter
        port: 5.962133916683182
        autocreate: 0.08008281904610115
        domain: domain
        capath: capath
        client-key: client-key
        realm: realm
        comment: comment
        group_name_attr: group_name_attr
        scopes: scopes
        prompt: prompt
      properties:
        realm:
          type: string
        type:
          $ref: '#/components/schemas/RealmType'
        acr-values:
          type: string
        autocreate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        base_dn:
          type: string
        bind_dn:
          type: string
        capath:
          type: string
        case-sensitive:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        cert:
          type: string
        certkey:
          type: string
        client-id:
          type: string
        client-key:
          type: string
        comment:
          type: string
        default:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        domain:
          type: string
        filter:
          type: string
        group_classes:
          type: string
        group_filter:
          type: string
        group_dn:
          type: string
        group_name_attr:
          type: string
        issuer-url:
          type: string
        mode:
          $ref: '#/components/schemas/RealmMode'
        password:
          type: string
        port:
          type: number
        prompt:
          type: string
        scopes:
          type: string
        secure:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        server1:
          type: string
        server2:
          type: string
        sslversion:
          $ref: '#/components/schemas/RealmSslVersion'
        sync-defaults-options:
          type: string
        sync_attributes:
          type: string
        tfa:
          type: string
        user_attr:
          type: string
        user_classes:
          type: string
        username-claim:
          type: string
        verify:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      required:
      - realm
      - type
      type: object
    CreateRoleRequestContent:
      example:
        roleid: roleid
        privs: privs
      properties:
        roleid:
          type: string
        privs:
          type: string
      required:
      - roleid
      type: object
    CreateStorageRequestContent:
      example:
        blocksize: blocksize
        comstar_tg: comstar_tg
        monhost: monhost
        vgname: vgname
        saferemove-throughput: saferemove-throughput
        type: null
        server2: server2
        mountpoint: mountpoint
        path: path
        subdir: subdir
        password: password
        master-pubkey: master-pubkey
        saferemove: true
        encryption-key: encryption-key
        authsupported: authsupported
        fingerprint: fingerprint
        options: options
        portal: portal
        export: export
        mkdir: true
        format: format
        lio_tpg: lio_tpg
        pool: pool
        prune-backups: prune-backups
        fs-name: fs-name
        iscsiprovider: iscsiprovider
        volume: volume
        port: 1.4658129805029452
        sparse: true
        comstar_hg: comstar_hg
        domain: domain
        server: server
        shared: true
        nowritecache: true
        data-pool: data-pool
        thinpool: thinpool
        storage: storage
        content: content
        is_mountpoint: is_mountpoint
        bwlimit: bwlimit
        fuse: true
        max-protected-backups: 0.8008281904610115
        smbversion: null
        share: share
        krbd: true
        tagged_only: true
        nocow: 6.027456183070403
        preallocation: null
        transport: null
        nodes: nodes
        disable: true
        namespace: namespace
        keyring: keyring
        base: base
        username: username
      properties:
        storage:
          pattern: "^[A-Za-z]+$"
          type: string
        type:
          $ref: '#/components/schemas/StorageType'
        authsupported:
          type: string
        base:
          description: 'The base volume to use. '
          type: string
        blocksize:
          type: string
        bwlimit:
          type: string
        comstar_hg:
          type: string
        comstar_tg:
          type: string
        content:
          description: Allowed content types.
          type: string
        data-pool:
          description: "Data pool, only for erasure coding"
          type: string
        disable:
          description: Disable the storage
          type: boolean
        domain:
          description: CIFS domain
          type: string
        encryption-key:
          description: Encryption key for storage. Use 'autogen' to generate one automatically
            without passphrase.
          type: string
        export:
          description: NFS export path
          type: string
        fingerprint:
          description: Certificate SHA256 fingerprint
          type: string
        format:
          description: Default image format
          type: string
        fs-name:
          description: The ceph filesystem name
          type: string
        fuse:
          description: Mount CephFS through FUSE
          type: boolean
        is_mountpoint:
          description: "Assume the given path is an externally managed mountpoint.\
            \ This is a string boolean, using 'yes' or 'no'"
          type: string
        iscsiprovider:
          description: iSCSI provider
          type: string
        keyring:
          description: Client keyring contents
          type: string
        krbd:
          description: Always access rbd through krbd kernel module
          type: boolean
        lio_tpg:
          description: Target portal group for Linux LIO targets
          type: string
        master-pubkey:
          description: "Base64 encoded, PEM formatted public RSA key"
          type: string
        max-protected-backups:
          description: Mac number of protected backups. Defaults to unlimited
          type: number
        mkdir:
          description: Create the directory if doesnt exist. Defaults to true.
          type: boolean
        monhost:
          description: IP addresses of monitors.
          type: string
        mountpoint:
          description: The mount point
          type: string
        namespace:
          description: The namespace
          type: string
        nocow:
          description: "Set the NOCOW flag on files. This is a boolean integer, using\
            \ 0 for false or 1 for true."
          type: number
        nodes:
          description: Comma seperated list of node names
          type: string
        nowritecache:
          description: Disable write caching on the target.
          type: boolean
        options:
          description: NFS mount options.
          type: string
        password:
          description: Password for accessing the datastore
          type: string
        path:
          description: The filesystem path
          type: string
        pool:
          description: The pool name
          type: string
        port:
          description: For non default port
          type: number
        portal:
          description: iSCSI portal (IP or DNS name with optional port).
          type: string
        preallocation:
          $ref: '#/components/schemas/StoragePreallocation'
        prune-backups:
          description: The retention options.
          type: string
        saferemove:
          description: Zero out data when removing LVs
          type: boolean
        saferemove-throughput:
          description: Wipe throughput.
          type: string
        server:
          description: Server IP or DNS name
          type: string
        server2:
          description: Backup server IP or DNS name
          type: string
        share:
          description: The CIFS share.
          type: string
        shared:
          description: Indicates if the storage is shared.
          type: boolean
        smbversion:
          $ref: '#/components/schemas/StorageSMBVersion'
        sparse:
          description: Use sparse volumes.
          type: boolean
        subdir:
          description: The subdir to mount.
          type: string
        tagged_only:
          description: Only use logical volumes tagged with 'pve-vm-ID'.
          type: boolean
        thinpool:
          description: LVM thin pool name.
          type: string
        transport:
          $ref: '#/components/schemas/StorageTransport'
        username:
          description: The username to use.
          type: string
        vgname:
          description: The volume group name.
          type: string
        volume:
          description: The glusterfs volume.
          type: string
      required:
      - storage
      - type
      type: object
    CreateStorageResponseContent:
      example:
        data:
          storage: storage
          type: null
      properties:
        data:
          $ref: '#/components/schemas/StorageConfiguration'
      required:
      - data
      type: object
    CreateStorageVolumeRequestContent:
      example:
        filename: filename
        size: 0.8008281904610115
        vmid: vmid
        format: null
      properties:
        filename:
          description: The filename of the new file
          type: string
        size:
          description: The new size in byte string
          type: number
        vmid:
          description: The id of the virtual machine as a string
          type: string
        format:
          $ref: '#/components/schemas/StorageVolumeType'
      required:
      - filename
      - size
      - vmid
      type: object
    CreateStorageVolumeResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreateTicketRequestContent:
      example:
        password: password
        realm: realm
        username: username
      properties:
        username:
          type: string
        password:
          type: string
        realm:
          type: string
      required:
      - password
      - username
      type: object
    CreateTicketResponseContent:
      example:
        data:
          cap:
            key: null
          ticket: ticket
          clustername: clustername
          CSRFPreventionToken: CSRFPreventionToken
          username: username
      properties:
        data:
          $ref: '#/components/schemas/Ticket'
      required:
      - data
      type: object
    CreateUserRequestContent:
      example:
        firstname: firstname
        enable: 0.08008281904610115
        keys: keys
        expire: 6.027456183070403
        groups: groups
        comment: comment
        userid: userid
        email: email
        lastname: lastname
      properties:
        userid:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        enable:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        comment:
          type: string
        groups:
          type: string
        keys:
          type: string
        expire:
          type: number
      required:
      - userid
      type: object
    CreateUserTokenRequestContent:
      example:
        expire: 6.027456183070403
        comment: comment
        privsep: 0.08008281904610115
      properties:
        privsep:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        expire:
          type: number
        comment:
          type: string
      type: object
    CreateUserTokenResponseContent:
      example:
        data:
          full-tokenid: full-tokenid
          value: value
          info:
            expire: 5.962133916683182
            comment: comment
            privsep: 0.14658129805029452
      properties:
        data:
          $ref: '#/components/schemas/CreatedTokenSummary'
      required:
      - data
      type: object
    CreateVirtualMachineRequestContent:
      example:
        net0: net0
        usb13: usb13
        usb14: usb14
        usb8: usb8
        usb11: usb11
        cipassword: cipassword
        usb9: usb9
        usb12: usb12
        net4: net4
        usb6: usb6
        net3: net3
        usb7: usb7
        usb10: usb10
        net2: net2
        usb4: usb4
        net1: net1
        usb5: usb5
        net7: net7
        net6: net6
        net5: net5
        autostart: 0.6027456183070403
        startdate: startdate
        smbios1: smbios1
        tablet: 0.5025004791520294
        cores: 5.962133916683182
        freeze: true
        usb2: usb2
        lock: null
        usb3: usb3
        usb0: usb0
        sockets: 4.965218492984954
        usb1: usb1
        ivshmem: ivshmem
        vmid: vmid
        pool: pool
        virtio13: virtio13
        virtio12: virtio12
        tpmstate0: tpmstate0
        virtio15: virtio15
        keephugepages: 0.7061401241503109
        unqiue: 0.9369310271410669
        virtio14: virtio14
        virtio11: virtio11
        tags: tags
        virtio10: virtio10
        live-restore: 0.20271230230023218
        efidisk0: efidisk0
        affinity: affinity
        audio0: audio0
        template: 0.9965781217890561
        bios: null
        protection: 0.684685269835264
        citype: null
        cicustom: cicustom
        shares: 1.1730742509559433
        digest: digest
        ipconfig0: ipconfig0
        spice_enhancements: spice_enhancements
        kvm: 0.9301444243932576
        migrate_speed: 1.2315135367772556
        scsi30: scsi30
        ipconfig7: ipconfig7
        sshkeys: sshkeys
        ipconfig5: ipconfig5
        ipconfig6: ipconfig6
        ipconfig3: ipconfig3
        cdrom: cdrom
        ipconfig4: ipconfig4
        ipconfig1: ipconfig1
        ipconfig2: ipconfig2
        watchdog: watchdog
        machine: machine
        parallel2: parallel2
        parallel1: parallel1
        parallel0: parallel0
        arch: null
        localtime: 0.3616076749251911
        scsi22: scsi22
        serial1: serial1
        scsi23: scsi23
        serial0: serial0
        agent: agent
        scsi20: scsi20
        serial3: serial3
        scsi21: scsi21
        serial2: serial2
        searchdomain: searchdomain
        scsi28: scsi28
        cpulimit: 5.637376656633329
        scsi29: scsi29
        scsi26: scsi26
        bootdisk: bootdisk
        scsi27: scsi27
        scsi24: scsi24
        scsi25: scsi25
        startup: startup
        migrate_downtime: 7.386282
        scsi11: scsi11
        scsi12: scsi12
        scsi10: scsi10
        numa: 0.10246457001441578
        scsi19: scsi19
        cpu: cpu
        archive: archive
        scsi17: scsi17
        scsi18: scsi18
        scsi15: scsi15
        scsi16: scsi16
        scsi13: scsi13
        scsi14: scsi14
        virtio3: virtio3
        numa0: numa0
        virtio4: virtio4
        numa1: numa1
        virtio5: virtio5
        numa2: numa2
        virtio6: virtio6
        virtio7: virtio7
        virtio8: virtio8
        acpi: 0.08008281904610115
        virtio9: virtio9
        name: name
        numa7: numa7
        nameserver: nameserver
        numa3: numa3
        numa4: numa4
        virtio0: virtio0
        numa5: numa5
        virtio1: virtio1
        numa6: numa6
        virtio2: virtio2
        memory: 4.145608029883936
        scsi1: scsi1
        description: description
        scsi0: scsi0
        scsi5: scsi5
        scsi4: scsi4
        scsi3: scsi3
        scsi2: scsi2
        rng0: rng0
        scsi9: scsi9
        scsi8: scsi8
        vga: vga
        vmstatestorage: vmstatestorage
        scsi7: scsi7
        hotplug: hotplug
        scsi6: scsi6
        scsihw: null
        sata1: sata1
        sata2: sata2
        sata0: sata0
        sata5: sata5
        ballon: 1.4658129805029452
        sata3: sata3
        sata4: sata4
        boot: boot
        cpuunits: 2.3021358869347655
        ciuser: ciuser
        hostpci0: hostpci0
        reboot: 0.7457744773683765
        hostpci1: hostpci1
        keyboard: null
        hostpci4: hostpci4
        hostpci5: hostpci5
        hostpci2: hostpci2
        hostpci3: hostpci3
        hostpci8: hostpci8
        hostpci9: hostpci9
        hostpci6: hostpci6
        hookscript: hookscript
        hostpci7: hostpci7
        ostype: null
        vcpus: 6.683562403749608
        vmgenid: vmgenid
        args: args
        hugepages: null
        ide1: ide1
        ide0: ide0
        onboot: 0.14894159098541704
        ide3: ide3
        ide2: ide2
      properties:
        vmid:
          description: The id of the virtual machine as a string
          type: string
        acpi:
          description: Enable ACPI support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        affinity:
          description: "List of cores to execute processes. Example value: 1,5,8-11."
          type: string
        agent:
          description: The QEMU agent and its configuration.
          type: string
        archive:
          description: The archive of the virtual machine.
          type: string
        arch:
          $ref: '#/components/schemas/VirtualMachineArchitecture'
        args:
          description: Additional command line arguments passed to the kvm.
          type: string
        audio0:
          description: The audio device and its configuration.
          type: string
        autostart:
          description: Start the virtual machine on crash.
          maximum: 1
          minimum: 0
          type: number
        ballon:
          description: Amount of RAM for the VM in MB.
          type: number
        bios:
          $ref: '#/components/schemas/VirtualMachineBios'
        boot:
          description: The boot order of the virtual machine.
          type: string
        bootdisk:
          description: The boot disk of the virtual machine.
          type: string
        cdrom:
          description: The CD-ROM device and its configuration. An alias for option
            ide2
          type: string
        cicustom:
          description: Specify custom cloud-init files to be used at start.
          type: string
        cipassword:
          description: The password for the cloud-init user.
          type: string
        citype:
          $ref: '#/components/schemas/VirtualMachineCloudInitType'
        ciuser:
          description: The cloud-init user.
          type: string
        cores:
          description: Number of cores per socket.
          type: number
        cpu:
          description: The CPU type.
          type: string
        cpulimit:
          description: CPU usage limit.
          type: number
        cpuunits:
          description: "CPU weight for a VM. The higher the value, the more CPU time\
            \ the VM gets."
          type: number
        description:
          description: The description of the virtual machine.
          type: string
        digest:
          description: The SHA1 digest of the virtual machine configuration. This
            can prevent concurrent modifications of the virtual machine configuration.
          type: string
        efidisk0:
          description: The EFI disk device and its configuration.
          type: string
        freeze:
          description: Freeze the CPU at virtual machine start.
          type: boolean
        hookscript:
          description: The hook script that is used at various point in the virtual
            machines lifecycle.
          type: string
        hostpci0:
          description: The host PCI device and its configuration.
          type: string
        hostpci1:
          description: The host PCI device and its configuration.
          type: string
        hostpci2:
          description: The host PCI device and its configuration.
          type: string
        hostpci3:
          description: The host PCI device and its configuration.
          type: string
        hostpci4:
          description: The host PCI device and its configuration.
          type: string
        hostpci5:
          description: The host PCI device and its configuration.
          type: string
        hostpci6:
          description: The host PCI device and its configuration.
          type: string
        hostpci7:
          description: The host PCI device and its configuration.
          type: string
        hostpci8:
          description: The host PCI device and its configuration.
          type: string
        hostpci9:
          description: The host PCI device and its configuration.
          type: string
        hugepages:
          $ref: '#/components/schemas/VirtualMachineHugePages'
        ide0:
          description: Volume used as IDE or harddisk.
          type: string
        ide1:
          description: Volume used as IDE or harddisk.
          type: string
        ide2:
          description: Volume used as IDE or harddisk.
          type: string
        ide3:
          description: Volume used as IDE or harddisk.
          type: string
        ipconfig0:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig1:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig2:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig3:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig4:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig5:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig6:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig7:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ivshmem:
          description: Inter VM-shared memory.
          type: string
        keephugepages:
          description: Keep hugepages after shutdown.
          maximum: 1
          minimum: 0
          type: number
        keyboard:
          $ref: '#/components/schemas/VirtualMachineKeyboard'
        kvm:
          description: Enable KVM support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        localtime:
          description: Set the real time clock to local time.
          maximum: 1
          minimum: 0
          type: number
        live-restore:
          description: Start VM immediatly from backup and start in the background.
          maximum: 1
          minimum: 0
          type: number
        lock:
          $ref: '#/components/schemas/VirtualMachineConfigLock'
        machine:
          description: The machine type.
          type: string
        memory:
          description: The amount of memory in MB.
          type: number
        migrate_downtime:
          description: The maximum tolerated downtime in seconds during migration.
          format: float
          type: number
        migrate_speed:
          description: The maximum speed in MB/s during migration. 0 is no limit
          type: number
        name:
          description: The name of the virtual machine.
          type: string
        nameserver:
          description: The nameserver for the virtual machine.
          type: string
        net0:
          description: The network interface and its configuration.
          type: string
        net1:
          description: The network interface and its configuration.
          type: string
        net2:
          description: The network interface and its configuration.
          type: string
        net3:
          description: The network interface and its configuration.
          type: string
        net4:
          description: The network interface and its configuration.
          type: string
        net5:
          description: The network interface and its configuration.
          type: string
        net6:
          description: The network interface and its configuration.
          type: string
        net7:
          description: The network interface and its configuration.
          type: string
        numa:
          description: Enable NUMA support. Default to disabled.
          maximum: 1
          minimum: 0
          type: number
        numa0:
          description: NUMA topology.
          type: string
        numa1:
          description: NUMA topology.
          type: string
        numa2:
          description: NUMA topology.
          type: string
        numa3:
          description: NUMA topology.
          type: string
        numa4:
          description: NUMA topology.
          type: string
        numa5:
          description: NUMA topology.
          type: string
        numa6:
          description: NUMA topology.
          type: string
        numa7:
          description: NUMA topology.
          type: string
        onboot:
          description: Start the virtual machine on boot.
          maximum: 1
          minimum: 0
          type: number
        ostype:
          $ref: '#/components/schemas/VirtualMachineOperatingSystem'
        parallel0:
          description: Host parallel device.
          type: string
        parallel1:
          description: Host parallel device.
          type: string
        parallel2:
          description: Host parallel device.
          type: string
        pool:
          type: string
        protection:
          description: The protection flag on the virtual machine. Disables remove
            VM and disk operations.
          maximum: 1
          minimum: 0
          type: number
        reboot:
          description: Allows reboot. False will have the virtual machine exit on
            reboot.
          maximum: 1
          minimum: 0
          type: number
        rng0:
          description: Virtio based random number generator.
          type: string
        sata0:
          description: Uses the volume as a sata disk.
          type: string
        sata1:
          description: Uses the volume as a sata disk.
          type: string
        sata2:
          description: Uses the volume as a sata disk.
          type: string
        sata3:
          description: Uses the volume as a sata disk.
          type: string
        sata4:
          description: Uses the volume as a sata disk.
          type: string
        sata5:
          description: Uses the volume as a sata disk.
          type: string
        scsi0:
          description: Uses the volume as a scsi disk.
          type: string
        scsi1:
          description: Uses the volume as a scsi disk.
          type: string
        scsi2:
          description: Uses the volume as a scsi disk.
          type: string
        scsi3:
          description: Uses the volume as a scsi disk.
          type: string
        scsi4:
          description: Uses the volume as a scsi disk.
          type: string
        scsi5:
          description: Uses the volume as a scsi disk.
          type: string
        scsi6:
          description: Uses the volume as a scsi disk.
          type: string
        scsi7:
          description: Uses the volume as a scsi disk.
          type: string
        scsi8:
          description: Uses the volume as a scsi disk.
          type: string
        scsi9:
          description: Uses the volume as a scsi disk.
          type: string
        scsi10:
          description: Uses the volume as a scsi disk.
          type: string
        scsi11:
          description: Uses the volume as a scsi disk.
          type: string
        scsi12:
          description: Uses the volume as a scsi disk.
          type: string
        scsi13:
          description: Uses the volume as a scsi disk.
          type: string
        scsi14:
          description: Uses the volume as a scsi disk.
          type: string
        scsi15:
          description: Uses the volume as a scsi disk.
          type: string
        scsi16:
          description: Uses the volume as a scsi disk.
          type: string
        scsi17:
          description: Uses the volume as a scsi disk.
          type: string
        scsi18:
          description: Uses the volume as a scsi disk.
          type: string
        scsi19:
          description: Uses the volume as a scsi disk.
          type: string
        scsi20:
          description: Uses the volume as a scsi disk.
          type: string
        scsi21:
          description: Uses the volume as a scsi disk.
          type: string
        scsi22:
          description: Uses the volume as a scsi disk.
          type: string
        scsi23:
          description: Uses the volume as a scsi disk.
          type: string
        scsi24:
          description: Uses the volume as a scsi disk.
          type: string
        scsi25:
          description: Uses the volume as a scsi disk.
          type: string
        scsi26:
          description: Uses the volume as a scsi disk.
          type: string
        scsi27:
          description: Uses the volume as a scsi disk.
          type: string
        scsi28:
          description: Uses the volume as a scsi disk.
          type: string
        scsi29:
          description: Uses the volume as a scsi disk.
          type: string
        scsi30:
          description: Uses the volume as a scsi disk.
          type: string
        scsihw:
          $ref: '#/components/schemas/VirtualMachineScsiControllerType'
        searchdomain:
          description: Cloudinit search domain.
          type: string
        serial0:
          description: A serial device on the virtual machine.
          type: string
        serial1:
          description: A serial device on the virtual machine.
          type: string
        serial2:
          description: A serial device on the virtual machine.
          type: string
        serial3:
          description: A serial device on the virtual machine.
          type: string
        shares:
          description: The amount of memory shares for autoballooning.
          type: number
        smbios1:
          description: SMBIOS type 1 field.
          type: string
        sockets:
          description: The number of cpu sockets.
          type: number
        spice_enhancements:
          description: Enable spice enhancements.
          type: string
        sshkeys:
          description: Cloud init SSH public keys. One per line.
          type: string
        startdate:
          description: The start date for the virtual machine real time clock.
          type: string
        startup:
          description: The startup policy for the virtual machine.
          type: string
        tablet:
          description: Enable tablet device.
          maximum: 1
          minimum: 0
          type: number
        tags:
          description: The tags for the virtual machine.
          type: string
        template:
          description: If the virtual machine is a template or not.
          maximum: 1
          minimum: 0
          type: number
        tpmstate0:
          description: Configure a disk for storing TPM state.
          type: string
        unqiue:
          description: Assign a unique random ehternet address.
          maximum: 1
          minimum: 0
          type: number
        usb0:
          description: A usb device on the virtual machine.
          type: string
        usb1:
          description: A usb device on the virtual machine.
          type: string
        usb2:
          description: A usb device on the virtual machine.
          type: string
        usb3:
          description: A usb device on the virtual machine.
          type: string
        usb4:
          description: A usb device on the virtual machine.
          type: string
        usb5:
          description: A usb device on the virtual machine.
          type: string
        usb6:
          description: A usb device on the virtual machine.
          type: string
        usb7:
          description: A usb device on the virtual machine.
          type: string
        usb8:
          description: A usb device on the virtual machine.
          type: string
        usb9:
          description: A usb device on the virtual machine.
          type: string
        usb10:
          description: A usb device on the virtual machine.
          type: string
        usb11:
          description: A usb device on the virtual machine.
          type: string
        usb12:
          description: A usb device on the virtual machine.
          type: string
        usb13:
          description: A usb device on the virtual machine.
          type: string
        usb14:
          description: A usb device on the virtual machine.
          type: string
        hotplug:
          description: Hotplug devices.
          type: string
        vcpus:
          description: The number of hotplugged virtual cpus.
          type: number
        vga:
          description: Configuration for the VGA hardware.
          type: string
        virtio0:
          description: Uses the volume as a virtio disk.
          type: string
        virtio1:
          description: Uses the volume as a virtio disk.
          type: string
        virtio2:
          description: Uses the volume as a virtio disk.
          type: string
        virtio3:
          description: Uses the volume as a virtio disk.
          type: string
        virtio4:
          description: Uses the volume as a virtio disk.
          type: string
        virtio5:
          description: Uses the volume as a virtio disk.
          type: string
        virtio6:
          description: Uses the volume as a virtio disk.
          type: string
        virtio7:
          description: Uses the volume as a virtio disk.
          type: string
        virtio8:
          description: Uses the volume as a virtio disk.
          type: string
        virtio9:
          description: Uses the volume as a virtio disk.
          type: string
        virtio10:
          description: Uses the volume as a virtio disk.
          type: string
        virtio11:
          description: Uses the volume as a virtio disk.
          type: string
        virtio12:
          description: Uses the volume as a virtio disk.
          type: string
        virtio13:
          description: Uses the volume as a virtio disk.
          type: string
        virtio14:
          description: Uses the volume as a virtio disk.
          type: string
        virtio15:
          description: Uses the volume as a virtio disk.
          type: string
        vmgenid:
          description: Enable VM generation id seed.
          type: string
        vmstatestorage:
          description: Default location for storing VM state.
          type: string
        watchdog:
          description: The watchdog device for the virtual machine.
          type: string
      required:
      - vmid
      type: object
    CreateVirtualMachineResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreateVirtualMachineTemplateRequestContent:
      example:
        disk: null
      properties:
        disk:
          $ref: '#/components/schemas/VirtualMachineDiskTarget'
      type: object
    CreateVirtualMachineTemplateResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      type: object
    CreateZFSPoolRequestContent:
      example:
        devices: devices
        raidlevel: null
        name: name
        ashift: 6.027456183070403
        compression: null
        add_storage: 0.8008281904610115
        draid-config: draid-config
      properties:
        devices:
          description: The devices to create the zfs pool on. This is a comma seperated
            list sent as a string.
          type: string
        name:
          description: The storage identifier.
          type: string
        raidlevel:
          $ref: '#/components/schemas/ZFSRaidLevel'
        add_storage:
          description: "Configure storage using the directory. Takes a boolean integer\
            \ value (0 false, 1 true)."
          type: number
        ashift:
          description: The pool vector size exponent.
          type: number
        compression:
          $ref: '#/components/schemas/ZFSCompression'
        draid-config:
          description: "Draid config. Set as string like 'data=<int>,spares=<int>"
          type: string
      required:
      - devices
      - name
      - raidlevel
      type: object
    CreateZFSPoolResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    CreatedTokenSummary:
      example:
        full-tokenid: full-tokenid
        value: value
        info:
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
      properties:
        full-tokenid:
          type: string
        value:
          type: string
        info:
          $ref: '#/components/schemas/UserConfigurationTokenSummary'
      required:
      - full-tokenid
      - info
      - value
      type: object
    DeleteDirectoryResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DeleteLVMResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DeleteLVMThinResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DeleteNodeCertificateResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DeleteStorageVolumeResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DeleteVirtualMachineResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DeleteZFSPoolResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    DirectoryFileSystem:
      enum:
      - ext4
      - xfs
      type: string
    DirectorySummary:
      example:
        path: path
        unitfile: unitfile
        options: options
        type: type
        device: device
      properties:
        device:
          description: The mounted device
          type: string
        options:
          description: The mount options
          type: string
        path:
          description: The mount path
          type: string
        type:
          description: The mount type
          type: string
        unitfile:
          description: The path of the mount unit
          type: string
      required:
      - device
      - options
      - path
      - type
      - unitfile
      type: object
    DiskInformationSummary:
      example:
        bus: 6.027456183070403
        pci-controller:
          bus: 1.4658129805029452
          domain: 5.962133916683182
          function: 5.637376656633329
          slot: 2.3021358869347655
        unit: 7.061401241503109
        dev: dev
        serial: serial
        bus-type: bus-type
        target: 0.8008281904610115
      properties:
        target:
          type: number
        bus:
          type: number
        pci-controller:
          $ref: '#/components/schemas/PciControllerSummary'
        unit:
          type: number
        dev:
          type: string
        bus-type:
          type: string
        serial:
          type: string
      type: object
    DiskSummary:
      example:
        devpath: devpath
        parent: parent
        wearout: ""
        health: health
        gpt: 0.8008281904610115
        osdid: 6.027456183070403
        type: null
        mounted: 5.962133916683182
        rpm: ""
        wwn: wwn
        by_id_link: by_id_link
        size: 1.4658129805029452
        serial: serial
        vendor: vendor
        model: model
      properties:
        devpath:
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        gpt:
          type: number
        osdid:
          type: number
        size:
          description: The size of the disk in bytes
          type: number
        by_id_link:
          type: string
        model:
          type: string
        parent:
          type: string
        health:
          type: string
        serial:
          type: string
        rpm: {}
        wwn:
          type: string
        vendor:
          type: string
        wearout: {}
        type:
          $ref: '#/components/schemas/DiskType'
        mounted:
          type: number
      required:
      - devpath
      - gpt
      - osdid
      - size
      type: object
    DiskType:
      enum:
      - nvme
      - ssd
      - hdd
      - partition
      type: string
    DiskTypeFilter:
      enum:
      - unused
      - journal_disks
      type: string
    DownloadFromUrlToStorageRequestContent:
      example:
        filename: filename
        tmpfilename: tmpfilename
        checksum: checksum
        checksum-algorithm: null
        content: null
        url: url
      properties:
        content:
          $ref: '#/components/schemas/UploadContentType'
        filename:
          description: The name of the file to create.
          type: string
        url:
          description: The URL to download from.
          type: string
        checksum:
          description: The expceted checksum of the file.
          type: string
        checksum-algorithm:
          $ref: '#/components/schemas/ChecksumAlgorithm'
        tmpfilename:
          description: The source filename.
          type: string
      required:
      - content
      - filename
      - url
      type: object
    DownloadFromUrlToStorageResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    ExecuteCommandResponse:
      example:
        pid: 0.8008281904610115
      properties:
        pid:
          type: number
      required:
      - pid
      type: object
    FileInfoSummary:
      example:
        path: path
        kind: kind
        index: 5.962133916683182
        message: message
      properties:
        path:
          type: string
        index:
          type: number
        message:
          type: string
        kind:
          type: string
      required:
      - index
      - kind
      - message
      - path
      type: object
    FileReadSummary:
      example:
        truncated: 0.08008281904610115
        content: content
      properties:
        content:
          type: string
        truncated:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      required:
      - content
      type: object
    FileRepositorySummary:
      example:
        Components:
        - Components
        - Components
        URIs:
        - URIs
        - URIs
        Types:
        - Types
        - Types
        Comment: Comment
        FileType: FileType
        Enabled: 6.027456183070403
        Suites:
        - Suites
        - Suites
      properties:
        Enabled:
          type: number
        Components:
          items:
            type: string
          type: array
        FileType:
          type: string
        URIs:
          items:
            type: string
          type: array
        Types:
          items:
            type: string
          type: array
        Suites:
          items:
            type: string
          type: array
        Comment:
          type: string
      type: object
    FileSummary:
      example:
        path: path
        file-type: file-type
        repositories:
        - Components:
          - Components
          - Components
          URIs:
          - URIs
          - URIs
          Types:
          - Types
          - Types
          Comment: Comment
          FileType: FileType
          Enabled: 6.027456183070403
          Suites:
          - Suites
          - Suites
        - Components:
          - Components
          - Components
          URIs:
          - URIs
          - URIs
          Types:
          - Types
          - Types
          Comment: Comment
          FileType: FileType
          Enabled: 6.027456183070403
          Suites:
          - Suites
          - Suites
        digest:
        - 1.4658129805029452
        - 1.4658129805029452
        content: content
      properties:
        path:
          type: string
        content:
          type: string
        repositories:
          items:
            $ref: '#/components/schemas/FileRepositorySummary'
          type: array
        digest:
          items:
            type: number
          type: array
        file-type:
          type: string
      type: object
    FileSystemInformationSummary:
      example:
        disk:
        - bus: 6.027456183070403
          pci-controller:
            bus: 1.4658129805029452
            domain: 5.962133916683182
            function: 5.637376656633329
            slot: 2.3021358869347655
          unit: 7.061401241503109
          dev: dev
          serial: serial
          bus-type: bus-type
          target: 0.8008281904610115
        - bus: 6.027456183070403
          pci-controller:
            bus: 1.4658129805029452
            domain: 5.962133916683182
            function: 5.637376656633329
            slot: 2.3021358869347655
          unit: 7.061401241503109
          dev: dev
          serial: serial
          bus-type: bus-type
          target: 0.8008281904610115
        total-bytes: 3.616076749251911
        used-bytes: 9.301444243932576
        name: name
        type: type
        mountpoint: mountpoint
      properties:
        disk:
          items:
            $ref: '#/components/schemas/DiskInformationSummary'
          type: array
        name:
          type: string
        mountpoint:
          type: string
        type:
          type: string
        used-bytes:
          type: number
        total-bytes:
          type: number
      type: object
    GetAccessControlListResponseContent:
      example:
        data:
        - path: path
          roleid: roleid
          propagate: 0.8008281904610115
          ugid: ugid
          type: null
        - path: path
          roleid: roleid
          propagate: 0.8008281904610115
          ugid: ugid
          type: null
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccessControlSummary'
          type: array
      required:
      - data
      type: object
    GetClusterApiVersionResponseContent:
      example:
        data: data
      properties:
        data:
          description: API version
          type: string
      type: object
    GetClusterJoinInformationResponseContent:
      example:
        data:
          config_digest: config_digest
          totem:
            cluster_name: cluster_name
            link_mode: link_mode
            ip_version: ip_version
            interface:
              key:
                linknumber: linknumber
            version: version
            secauth: secauth
            config_version: config_version
          preferred_node: preferred_node
          nodelist:
          - ring1_addr: ring1_addr
            ring4_addr: ring4_addr
            ring7_addr: ring7_addr
            ring3_addr: ring3_addr
            pve_addr: pve_addr
            quorum_votes: quorum_votes
            name: name
            ring0_addr: ring0_addr
            ring5_addr: ring5_addr
            nodeid: nodeid
            ring2_addr: ring2_addr
            ring6_addr: ring6_addr
          - ring1_addr: ring1_addr
            ring4_addr: ring4_addr
            ring7_addr: ring7_addr
            ring3_addr: ring3_addr
            pve_addr: pve_addr
            quorum_votes: quorum_votes
            name: name
            ring0_addr: ring0_addr
            ring5_addr: ring5_addr
            nodeid: nodeid
            ring2_addr: ring2_addr
            ring6_addr: ring6_addr
      properties:
        data:
          $ref: '#/components/schemas/JoinInformation'
      required:
      - data
      type: object
    GetClusterTotemSettingsResponseContent:
      example:
        data:
          cluster_name: cluster_name
          link_mode: link_mode
          ip_version: ip_version
          interface:
            key:
              linknumber: linknumber
          version: version
          secauth: secauth
          config_version: config_version
      properties:
        data:
          $ref: '#/components/schemas/TotemSummary'
      type: object
    GetFsInfoResult:
      example:
        result:
        - disk:
          - bus: 6.027456183070403
            pci-controller:
              bus: 1.4658129805029452
              domain: 5.962133916683182
              function: 5.637376656633329
              slot: 2.3021358869347655
            unit: 7.061401241503109
            dev: dev
            serial: serial
            bus-type: bus-type
            target: 0.8008281904610115
          - bus: 6.027456183070403
            pci-controller:
              bus: 1.4658129805029452
              domain: 5.962133916683182
              function: 5.637376656633329
              slot: 2.3021358869347655
            unit: 7.061401241503109
            dev: dev
            serial: serial
            bus-type: bus-type
            target: 0.8008281904610115
          total-bytes: 3.616076749251911
          used-bytes: 9.301444243932576
          name: name
          type: type
          mountpoint: mountpoint
        - disk:
          - bus: 6.027456183070403
            pci-controller:
              bus: 1.4658129805029452
              domain: 5.962133916683182
              function: 5.637376656633329
              slot: 2.3021358869347655
            unit: 7.061401241503109
            dev: dev
            serial: serial
            bus-type: bus-type
            target: 0.8008281904610115
          - bus: 6.027456183070403
            pci-controller:
              bus: 1.4658129805029452
              domain: 5.962133916683182
              function: 5.637376656633329
              slot: 2.3021358869347655
            unit: 7.061401241503109
            dev: dev
            serial: serial
            bus-type: bus-type
            target: 0.8008281904610115
          total-bytes: 3.616076749251911
          used-bytes: 9.301444243932576
          name: name
          type: type
          mountpoint: mountpoint
      properties:
        result:
          items:
            $ref: '#/components/schemas/FileSystemInformationSummary'
          type: array
      type: object
    GetGroupDetailsResponseContent:
      example:
        data:
          comment: comment
          users:
          - users
          - users
      properties:
        data:
          $ref: '#/components/schemas/GroupDetailsSummary'
      required:
      - data
      type: object
    GetHostnameResult:
      example:
        host-name: host-name
      properties:
        host-name:
          type: string
      type: object
    GetInfoResult:
      example:
        result:
          supported-commands:
          - success-response: true
            name: name
            enabled: true
          - success-response: true
            name: name
            enabled: true
          version: version
      properties:
        result:
          $ref: '#/components/schemas/AgentInfoSummary'
      type: object
    GetMemoryBlockInformationResult:
      example:
        size: 0.8008281904610115
      properties:
        size:
          type: number
      type: object
    GetMemoryBlocksResult:
      example:
        result:
        - can-offline: true
          online: true
          phys-index: 0.8008281904610115
        - can-offline: true
          online: true
          phys-index: 0.8008281904610115
      properties:
        result:
          items:
            $ref: '#/components/schemas/MemoryBlockSummary'
          type: array
      type: object
    GetNetworkInterfaceResponseContent:
      example:
        data:
          bridge_ports: bridge_ports
          method6: null
          bond_primary: bond_primary
          bond_mode: null
          type: null
          autostart: 6.027456183070403
          bridge_vids: bridge_vids
          bridge_fd: bridge_fd
          bridge_vlan_aware: 5.637376656633329
          netmask: netmask
          bridge_stp: bridge_stp
          address6: address6
          cidr: cidr
          slaves: slaves
          comments: comments
          address: address
          method: null
          cidr6: cidr6
          active: 1.4658129805029452
          priority: 0.8008281904610115
          families:
          - families
          - families
          iface: iface
          bond_miimon: bond_miimon
          bond_xmit_hash_policy: null
          exists: 5.962133916683182
          netmask6: netmask6
          gateway6: gateway6
          gateway: gateway
      properties:
        data:
          $ref: '#/components/schemas/NetworkInterfaceSummary'
      required:
      - data
      type: object
    GetOsInfoResult:
      example:
        result:
          kernel-release: kernel-release
          machine: machine
          pretty-name: pretty-name
          name: name
          version-id: version-id
          id: id
          version: version
          kernel-version: kernel-version
      properties:
        result:
          $ref: '#/components/schemas/OperatingSystemInformationSummary'
      type: object
    GetPackageChangelogResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    GetPendingVirtualMachineCloudInitChangesResponseContent:
      example:
        data:
        - new: new
          old: old
          key: key
        - new: new
          old: old
          key: key
      properties:
        data:
          items:
            $ref: '#/components/schemas/PendingVirtualMachineCloudInitField'
          type: array
      required:
      - data
      type: object
    GetPermissionsResponseContent:
      example:
        data:
          key: null
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/PermissionsDetailMap'
          type: object
      required:
      - data
      type: object
    GetPoolResponseContent:
      example:
        data:
          members:
          - template: 1.2315135367772556
            shared: 0.10246457001441578
            vmid: 4.145608029883936
            diskread: 7.061401241503109
            cpu: 3.6160767
            netout: 5.637376656633329
            maxcpu: 2.027123023002322
            storage: storage
            type: null
            content: content
            uptime: 6.027456183070403
            plugintype: plugintype
            node: node
            disk: 0.8008281904610115
            mem: 7.386281948385884
            maxdisk: 9.301444243932576
            name: name
            id: id
            maxmem: 1.4658129805029452
            diskwrite: 2.3021358869347655
            netin: 5.962133916683182
            status: status
          - template: 1.2315135367772556
            shared: 0.10246457001441578
            vmid: 4.145608029883936
            diskread: 7.061401241503109
            cpu: 3.6160767
            netout: 5.637376656633329
            maxcpu: 2.027123023002322
            storage: storage
            type: null
            content: content
            uptime: 6.027456183070403
            plugintype: plugintype
            node: node
            disk: 0.8008281904610115
            mem: 7.386281948385884
            maxdisk: 9.301444243932576
            name: name
            id: id
            maxmem: 1.4658129805029452
            diskwrite: 2.3021358869347655
            netin: 5.962133916683182
            status: status
          comment: comment
      properties:
        data:
          $ref: '#/components/schemas/PoolConfigurationSummary'
      required:
      - data
      type: object
    GetRealmResponseContent:
      example:
        data:
          digest: digest
          comment: comment
          type: type
      properties:
        data:
          $ref: '#/components/schemas/RealmConfigurationSummary'
      required:
      - data
      type: object
    GetRoleResponseContent:
      example:
        data:
          VM.Clone: 0.6683562403749608
          Pool.Allocate: 0.7061401241503109
          VM.Backup: 0.9369310271410669
          VM.Config.Options: 0.6778324963048014
          SDN.Audit: 0.7386281948385884
          Realm.Allocate: 0.3616076749251911
          VM.Config.CDROM: 0.8762042012749002
          Sys.Console: 0.14894159098541704
          VM.Config.CPU: 0.9018348186070783
          Permission.Modify: 0.23021358869347652
          VM.Migrate: 0.5944895607614016
          VM.Config.Disk: 0.35571952270680973
          Datastore.AllocateTemplate: 0.5962133916683182
          VM.Config.Memory: 0.1284659006116532
          Realm.AllocateUser: 0.20271230230023218
          VM.Monitor: 0.6704019297950036
          Pool.Audit: 0.9301444243932576
          Sys.Modify: 0.10246457001441578
          VM.Console: 0.6878052220127876
          SDN.Allocate: 0.4145608029883936
          VM.Audit: 0.9965781217890561
          VM.Config.Cloudinit: 0.6438423552598547
          Sys.Audit: 0.12315135367772556
          VM.Allocate: 0.5025004791520294
          Datastore.Audit: 0.14658129805029452
          Datastore.Allocate: 0.08008281904610115
          VM.Snapshot.Rollback: 0.7143538047012307
          Group.Allocate: 0.5637376656633328
          Sys.PowerMgmt: 0.7457744773683765
          VM.Config.HWType: 0.6965117697638845
          Sys.Syslog: 0.11730742509559433
          VM.PowerMgmt: 0.3353193347011243
          VM.Snapshot: 0.30937452626664474
          Datastore.AllocateSpace: 0.6027456183070403
          Sys.Incoming: 0.684685269835264
          User.Modify: 0.4965218492984954
          VM.Config.Network: 0.288416212666878
      properties:
        data:
          $ref: '#/components/schemas/RolePermissionSummary'
      required:
      - data
      type: object
    GetSmartHealthResponseContent:
      example:
        data:
        - devpath: devpath
          parent: parent
          wearout: ""
          health: health
          gpt: 0.8008281904610115
          osdid: 6.027456183070403
          type: null
          mounted: 5.962133916683182
          rpm: ""
          wwn: wwn
          by_id_link: by_id_link
          size: 1.4658129805029452
          serial: serial
          vendor: vendor
          model: model
        - devpath: devpath
          parent: parent
          wearout: ""
          health: health
          gpt: 0.8008281904610115
          osdid: 6.027456183070403
          type: null
          mounted: 5.962133916683182
          rpm: ""
          wwn: wwn
          by_id_link: by_id_link
          size: 1.4658129805029452
          serial: serial
          vendor: vendor
          model: model
      properties:
        data:
          items:
            $ref: '#/components/schemas/DiskSummary'
          type: array
      required:
      - data
      type: object
    GetStorageResponseContent:
      example:
        data:
          server: server
          shared: 0.08008281904610115
          vgname: vgname
          pool: pool
          thinpool: thinpool
          storage: storage
          type: null
          content: content
          mountpoint: mountpoint
          path: path
          nodes: nodes
          digest: digest
          export: export
      properties:
        data:
          $ref: '#/components/schemas/StorageSummary'
      required:
      - data
      type: object
    GetStorageStatusResponseContent:
      example:
        data:
          shared: 0.08008281904610115
          avail: 2.3021358869347655
          total: 5.962133916683182
          active: 0.6027456183070403
          used: 5.637376656633329
          type: null
          content: content
          enabled: 0.14658129805029452
      properties:
        data:
          $ref: '#/components/schemas/StorageStatusSummary'
      required:
      - data
      type: object
    GetTimeResult:
      example:
        result: 0.8008281904610115
      properties:
        result:
          type: number
      type: object
    GetTimeZoneResult:
      example:
        result:
          offset: 0.8008281904610115
          zone: zone
      properties:
        result:
          $ref: '#/components/schemas/TimeZoneSummary'
      type: object
    GetUserConfigurationResponseContent:
      example:
        data:
          firstname: firstname
          enable: 0.08008281904610115
          keys: keys
          expire: 6.027456183070403
          groups:
          - groups
          - groups
          comment: comment
          tokens:
            key:
              expire: 5.962133916683182
              comment: comment
              privsep: 0.14658129805029452
          email: email
          lastname: lastname
      properties:
        data:
          $ref: '#/components/schemas/UserConfigurationSummary'
      required:
      - data
      type: object
    GetUserTokenResponseContent:
      example:
        data:
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
      properties:
        data:
          $ref: '#/components/schemas/UserConfigurationTokenSummary'
      required:
      - data
      type: object
    GetVcpusResult:
      example:
        result:
        - can-offline: true
          logical-id: 0.8008281904610115
          online: true
        - can-offline: true
          logical-id: 0.8008281904610115
          online: true
      properties:
        result:
          items:
            $ref: '#/components/schemas/VcpuSummary'
          type: array
      type: object
    GetVersionResponseContent:
      example:
        data:
          repoid: repoid
          release: release
          version: version
      properties:
        data:
          $ref: '#/components/schemas/VersionSummary'
      required:
      - data
      type: object
    GetVirtualMachineAgentInfoResponseContent:
      example:
        data:
          result:
            supported-commands:
            - success-response: true
              name: name
              enabled: true
            - success-response: true
              name: name
              enabled: true
            version: version
      properties:
        data:
          $ref: '#/components/schemas/GetInfoResult'
      required:
      - data
      type: object
    GetVirtualMachineCloudInitResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    GetVirtualMachineCommandStatusResponseContent:
      example:
        data:
          err-truncated: true
          exited: true
          exitcode: 0.8008281904610115
          err-data: err-data
          signal: 6.027456183070403
          out-truncated: true
          out-data: out-data
      properties:
        data:
          $ref: '#/components/schemas/CommandStatusSummary'
      required:
      - data
      type: object
    GetVirtualMachineConfigurationResponseContent:
      example:
        data:
          net0: net0
          usb13: usb13
          usb14: usb14
          usb8: usb8
          usb11: usb11
          cipassword: cipassword
          usb9: usb9
          usb12: usb12
          net4: net4
          usb6: usb6
          net3: net3
          usb7: usb7
          usb10: usb10
          net2: net2
          usb4: usb4
          net1: net1
          usb5: usb5
          net7: net7
          net6: net6
          net5: net5
          autostart: 0.6027456183070403
          startdate: startdate
          smbios1: smbios1
          tablet: 0.4965218492984954
          cores: 5.962133916683182
          freeze: true
          usb2: usb2
          lock: null
          usb3: usb3
          usb0: usb0
          sockets: 1.1730742509559433
          usb1: usb1
          ivshmem: ivshmem
          virtio13: virtio13
          virtio12: virtio12
          tpmstate0: tpmstate0
          virtio15: virtio15
          keephugepages: 0.7061401241503109
          virtio14: virtio14
          virtio11: virtio11
          tags: tags
          virtio10: virtio10
          meta: meta
          efidisk0: efidisk0
          affinity: affinity
          audio0: audio0
          template: 0.5025004791520294
          bios: null
          protection: 0.14894159098541704
          citype: null
          cicustom: cicustom
          shares: 7.457744773683766
          digest: digest
          ipconfig0: ipconfig0
          spice_enhancements: spice_enhancements
          kvm: 0.9301444243932576
          migrate_speed: 7.386281948385884
          scsi30: scsi30
          ipconfig7: ipconfig7
          sshkeys: sshkeys
          ipconfig5: ipconfig5
          ipconfig6: ipconfig6
          ipconfig3: ipconfig3
          cdrom: cdrom
          ipconfig4: ipconfig4
          ipconfig1: ipconfig1
          ipconfig2: ipconfig2
          watchdog: watchdog
          machine: machine
          parallel2: parallel2
          parallel1: parallel1
          parallel0: parallel0
          arch: null
          localtime: 0.3616076749251911
          scsi22: scsi22
          serial1: serial1
          scsi23: scsi23
          serial0: serial0
          agent: agent
          scsi20: scsi20
          serial3: serial3
          scsi21: scsi21
          serial2: serial2
          searchdomain: searchdomain
          scsi28: scsi28
          cpulimit: 5.637376656633329
          scsi29: scsi29
          scsi26: scsi26
          bootdisk: bootdisk
          scsi27: scsi27
          scsi24: scsi24
          scsi25: scsi25
          startup: startup
          migrate_downtime: 4.145608
          scsi11: scsi11
          scsi12: scsi12
          scsi10: scsi10
          numa: 0.12315135367772556
          scsi19: scsi19
          cpu: cpu
          scsi17: scsi17
          scsi18: scsi18
          scsi15: scsi15
          scsi16: scsi16
          scsi13: scsi13
          scsi14: scsi14
          virtio3: virtio3
          numa0: numa0
          virtio4: virtio4
          numa1: numa1
          virtio5: virtio5
          numa2: numa2
          virtio6: virtio6
          virtio7: virtio7
          virtio8: virtio8
          acpi: 0.08008281904610115
          virtio9: virtio9
          name: name
          numa7: numa7
          nameserver: nameserver
          numa3: numa3
          numa4: numa4
          virtio0: virtio0
          numa5: numa5
          virtio1: virtio1
          numa6: numa6
          virtio2: virtio2
          memory: 2.027123023002322
          scsi1: scsi1
          description: description
          scsi0: scsi0
          scsi5: scsi5
          scsi4: scsi4
          scsi3: scsi3
          scsi2: scsi2
          rng0: rng0
          scsi9: scsi9
          scsi8: scsi8
          vga: vga
          vmstatestorage: vmstatestorage
          scsi7: scsi7
          hotplug: hotplug
          scsi6: scsi6
          scsihw: null
          sata1: sata1
          sata2: sata2
          sata0: sata0
          sata5: sata5
          ballon: 1.4658129805029452
          sata3: sata3
          sata4: sata4
          boot: boot
          cpuunits: 2.3021358869347655
          ciuser: ciuser
          hostpci0: hostpci0
          reboot: 0.684685269835264
          hostpci1: hostpci1
          keyboard: null
          hostpci4: hostpci4
          hostpci5: hostpci5
          hostpci2: hostpci2
          hostpci3: hostpci3
          hostpci8: hostpci8
          hostpci9: hostpci9
          hostpci6: hostpci6
          hookscript: hookscript
          hostpci7: hostpci7
          ostype: null
          vcpus: 9.965781217890562
          vmgenid: vmgenid
          args: args
          hugepages: null
          ide1: ide1
          ide0: ide0
          onboot: 0.10246457001441578
          ide3: ide3
          ide2: ide2
      properties:
        data:
          $ref: '#/components/schemas/VirtualMachineConfigurationSummary'
      required:
      - data
      type: object
    GetVirtualMachineFeatureSupportResponseContent:
      example:
        data:
          nodes:
          - nodes
          - nodes
          hasFeature: 0.08008281904610115
      properties:
        data:
          $ref: '#/components/schemas/VirtualMachineFeatureSupportSummary'
      required:
      - data
      type: object
    GetVirtualMachineFileSystemInformationResponseContent:
      example:
        data:
          result:
          - disk:
            - bus: 6.027456183070403
              pci-controller:
                bus: 1.4658129805029452
                domain: 5.962133916683182
                function: 5.637376656633329
                slot: 2.3021358869347655
              unit: 7.061401241503109
              dev: dev
              serial: serial
              bus-type: bus-type
              target: 0.8008281904610115
            - bus: 6.027456183070403
              pci-controller:
                bus: 1.4658129805029452
                domain: 5.962133916683182
                function: 5.637376656633329
                slot: 2.3021358869347655
              unit: 7.061401241503109
              dev: dev
              serial: serial
              bus-type: bus-type
              target: 0.8008281904610115
            total-bytes: 3.616076749251911
            used-bytes: 9.301444243932576
            name: name
            type: type
            mountpoint: mountpoint
          - disk:
            - bus: 6.027456183070403
              pci-controller:
                bus: 1.4658129805029452
                domain: 5.962133916683182
                function: 5.637376656633329
                slot: 2.3021358869347655
              unit: 7.061401241503109
              dev: dev
              serial: serial
              bus-type: bus-type
              target: 0.8008281904610115
            - bus: 6.027456183070403
              pci-controller:
                bus: 1.4658129805029452
                domain: 5.962133916683182
                function: 5.637376656633329
                slot: 2.3021358869347655
              unit: 7.061401241503109
              dev: dev
              serial: serial
              bus-type: bus-type
              target: 0.8008281904610115
            total-bytes: 3.616076749251911
            used-bytes: 9.301444243932576
            name: name
            type: type
            mountpoint: mountpoint
      properties:
        data:
          $ref: '#/components/schemas/GetFsInfoResult'
      required:
      - data
      type: object
    GetVirtualMachineHostnameResponseContent:
      example:
        data:
          host-name: host-name
      properties:
        data:
          $ref: '#/components/schemas/GetHostnameResult'
      required:
      - data
      type: object
    GetVirtualMachineMemoryBlockInformationResponseContent:
      example:
        data:
          size: 0.8008281904610115
      properties:
        data:
          $ref: '#/components/schemas/GetMemoryBlockInformationResult'
      required:
      - data
      type: object
    GetVirtualMachineMemoryBlocksResponseContent:
      example:
        data:
          result:
          - can-offline: true
            online: true
            phys-index: 0.8008281904610115
          - can-offline: true
            online: true
            phys-index: 0.8008281904610115
      properties:
        data:
          $ref: '#/components/schemas/GetMemoryBlocksResult'
      required:
      - data
      type: object
    GetVirtualMachineNetworkInterfacesResponseContent:
      example:
        data:
          result:
          - name: name
            ip-addresses:
            - ip-address: ip-address
              ip-address-type: ip-address-type
              prefix: 3.616076749251911
            - ip-address: ip-address
              ip-address-type: ip-address-type
              prefix: 3.616076749251911
            hardware-address: hardware-address
            statistics:
              rx-errs: 1.4658129805029452
              tx-errs: 7.061401241503109
              rx-packets: 5.962133916683182
              tx-packets: 9.301444243932576
              tx-bytes: 5.637376656633329
              rx-dropped: 6.027456183070403
              rx-bytes: 0.8008281904610115
              tx-dropped: 2.3021358869347655
          - name: name
            ip-addresses:
            - ip-address: ip-address
              ip-address-type: ip-address-type
              prefix: 3.616076749251911
            - ip-address: ip-address
              ip-address-type: ip-address-type
              prefix: 3.616076749251911
            hardware-address: hardware-address
            statistics:
              rx-errs: 1.4658129805029452
              tx-errs: 7.061401241503109
              rx-packets: 5.962133916683182
              tx-packets: 9.301444243932576
              tx-bytes: 5.637376656633329
              rx-dropped: 6.027456183070403
              rx-bytes: 0.8008281904610115
              tx-dropped: 2.3021358869347655
      properties:
        data:
          $ref: '#/components/schemas/GetVirtualNetworkInterfacesResult'
      required:
      - data
      type: object
    GetVirtualMachineOperatingSystemInformationResponseContent:
      example:
        data:
          result:
            kernel-release: kernel-release
            machine: machine
            pretty-name: pretty-name
            name: name
            version-id: version-id
            id: id
            version: version
            kernel-version: kernel-version
      properties:
        data:
          $ref: '#/components/schemas/GetOsInfoResult'
      required:
      - data
      type: object
    GetVirtualMachineStatusResponseContent:
      example:
        data:
          agent: 0.14658129805029452
          spice: 0.9301444243932576
          diskread: 7.457744773683766
          pid: 7.061401241503109
          mem: 4.145608029883936
          maxdisk: 5.637376656633329
          running-qemu: running-qemu
          nics:
            key:
              netout: 5.025004791520295
              netin: 4.965218492984954
          lock: lock
          qmpstatus: qmpstatus
          balloon: 7.386281948385884
          vmid: 6.027456183070403
          cpus: 5.962133916683182
          running-machine: running-machine
          ballooninfo:
            free_mem: 9.369310271410669
            actual: 6.438423552598547
            mem_swapped_out: 6.683562403749608
            major_page_faults: 1.284659006116532
            total_mem: 9.018348186070783
            last_update: 3.5571952270680973
            mem_swapped_in: 8.762042012749001
            minor_page_faults: 6.965117697638846
            max_mem: 9.965781217890562
          proxmox-support:
            pbs-dirty-bitmap-migration: true
            query-bitmap-info: true
            pbs-masterkey: true
            backup-max-workers: true
            pbs-dirty-bitmap: true
            pbs-dirty-bitmap-savevm: true
            pbs-library-version: pbs-library-version
          cpu: 2.027123
          netout: 1.4894159098541704
          freemem: 1.1730742509559433
          tags: tags
          uptime: 3.616076749251911
          blockstat:
            key:
              flush_total_time_ns: 2.8841621266687802
              rd_operations: 3.2588565619047607
              timed_stats:
              - timed_stats
              - timed_stats
              invalid_unmap_operations: 0.2025324113236393
              failed_unmap_operations: 4.258773108174356
              wr_highest_offset: 6.878052220127876
              unmap_total_time_ns: 4.078845849666752
              wr_total_time_ns: 3.0205796992916243
              unmap_operations: 7.740351818741173
              account_failed: true
              wr_merged: 7.143538047012306
              rd_total_time_ns: 5.944895607614016
              idle_time_ns: 3.0937452626664474
              invalid_rd_operations: 0.8851374739011653
              failed_rd_operations: 0.10263654006109402
              invalid_flush_operations: 8.969578798196912
              failed_flush_operations: 7.058770351582356
              unmap_merged: 7.04836565559697
              wr_bytes: 4.652396432933246
              rd_bytes: 6.778324963048013
              wr_operations: 3.353193347011243
              invalid_wr_operations: 5.533258397034986
              unmap_bytes: 6.519180951018382
              failed_wr_operations: 3.0576100241049344
              account_invalid: true
              flush_operations: 6.704019297950036
              rd_merged: 6.628464275087742
          disk: 1.2315135367772556
          name: name
          ha:
            managed: 0.08008281904610115
          maxmem: 2.3021358869347655
          diskwrite: 6.84685269835264
          status: null
          netin: 1.0246457001441578
      properties:
        data:
          $ref: '#/components/schemas/VirtualMachineStatusSummary'
      required:
      - data
      type: object
    GetVirtualMachineTimeResponseContent:
      example:
        data:
          result: 0.8008281904610115
      properties:
        data:
          $ref: '#/components/schemas/GetTimeResult'
      required:
      - data
      type: object
    GetVirtualMachineTimeZoneResponseContent:
      example:
        data:
          result:
            offset: 0.8008281904610115
            zone: zone
      properties:
        data:
          $ref: '#/components/schemas/GetTimeZoneResult'
      required:
      - data
      type: object
    GetVirtualMachineVcpusResponseContent:
      example:
        data:
          result:
          - can-offline: true
            logical-id: 0.8008281904610115
            online: true
          - can-offline: true
            logical-id: 0.8008281904610115
            online: true
      properties:
        data:
          $ref: '#/components/schemas/GetVcpusResult'
      required:
      - data
      type: object
    GetVirtualNetworkInterfacesResult:
      example:
        result:
        - name: name
          ip-addresses:
          - ip-address: ip-address
            ip-address-type: ip-address-type
            prefix: 3.616076749251911
          - ip-address: ip-address
            ip-address-type: ip-address-type
            prefix: 3.616076749251911
          hardware-address: hardware-address
          statistics:
            rx-errs: 1.4658129805029452
            tx-errs: 7.061401241503109
            rx-packets: 5.962133916683182
            tx-packets: 9.301444243932576
            tx-bytes: 5.637376656633329
            rx-dropped: 6.027456183070403
            rx-bytes: 0.8008281904610115
            tx-dropped: 2.3021358869347655
        - name: name
          ip-addresses:
          - ip-address: ip-address
            ip-address-type: ip-address-type
            prefix: 3.616076749251911
          - ip-address: ip-address
            ip-address-type: ip-address-type
            prefix: 3.616076749251911
          hardware-address: hardware-address
          statistics:
            rx-errs: 1.4658129805029452
            tx-errs: 7.061401241503109
            rx-packets: 5.962133916683182
            tx-packets: 9.301444243932576
            tx-bytes: 5.637376656633329
            rx-dropped: 6.027456183070403
            rx-bytes: 0.8008281904610115
            tx-dropped: 2.3021358869347655
      properties:
        result:
          items:
            $ref: '#/components/schemas/VirtualNetworkInterfaceSummary'
          type: array
      type: object
    GetZFSPoolStatusResponseContent:
      example:
        data:
          children:
          - msg: msg
            read: 6.027456183070403
            children:
            - null
            - null
            cksum: 0.8008281904610115
            name: name
            state: state
            write: 1.4658129805029452
          - msg: msg
            read: 6.027456183070403
            children:
            - null
            - null
            cksum: 0.8008281904610115
            name: name
            state: state
            write: 1.4658129805029452
          name: name
          scan: scan
          action: action
          state: state
          errors: errors
          status: status
      properties:
        data:
          $ref: '#/components/schemas/ZFSPoolStatusSummary'
      required:
      - data
      type: object
    GroupDetailsSummary:
      example:
        comment: comment
        users:
        - users
        - users
      properties:
        users:
          items:
            type: string
          type: array
        comment:
          type: string
      required:
      - users
      type: object
    GroupSummary:
      example:
        groupid: groupid
        comment: comment
        users: users
      properties:
        groupid:
          type: string
        users:
          type: string
        comment:
          type: string
      required:
      - groupid
      type: object
    InitializeGPTRequestContent:
      example:
        disk: disk
        uuid: uuid
      properties:
        disk:
          description: Disk to initialize.
          pattern: "^/dev/[a-zA-Z0-9/]+$"
          type: string
        uuid:
          pattern: "^[a-fA-F0-9-]+$"
          type: string
      type: object
    InitializeGPTResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    InternalServerErrorResponseContent:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    InvalidInputErrorResponseContent:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    JoinClusterRequestContent:
      example:
        hostname: hostname
        password: password
        link1: link1
        link0: link0
        fingerprint: fingerprint
        link5: link5
        link4: link4
        force: true
        link3: link3
        votes: 6.027456183070403
        link2: link2
        nodeid: 0.8008281904610115
        link7: link7
        link6: link6
      properties:
        fingerprint:
          description: The fingerprint of the cluster certificate
          type: string
        hostname:
          description: The hostname or IP address an existing cluster node
          type: string
        password:
          description: Password for the node root user
          type: string
        force:
          type: boolean
        link0:
          type: string
        link1:
          type: string
        link2:
          type: string
        link3:
          type: string
        link4:
          type: string
        link5:
          type: string
        link6:
          type: string
        link7:
          type: string
        nodeid:
          description: The node ID to use for the joining node
          type: number
        votes:
          description: Votes for the node
          type: number
      required:
      - fingerprint
      - hostname
      - password
      type: object
    JoinClusterResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    JoinInformation:
      example:
        config_digest: config_digest
        totem:
          cluster_name: cluster_name
          link_mode: link_mode
          ip_version: ip_version
          interface:
            key:
              linknumber: linknumber
          version: version
          secauth: secauth
          config_version: config_version
        preferred_node: preferred_node
        nodelist:
        - ring1_addr: ring1_addr
          ring4_addr: ring4_addr
          ring7_addr: ring7_addr
          ring3_addr: ring3_addr
          pve_addr: pve_addr
          quorum_votes: quorum_votes
          name: name
          ring0_addr: ring0_addr
          ring5_addr: ring5_addr
          nodeid: nodeid
          ring2_addr: ring2_addr
          ring6_addr: ring6_addr
        - ring1_addr: ring1_addr
          ring4_addr: ring4_addr
          ring7_addr: ring7_addr
          ring3_addr: ring3_addr
          pve_addr: pve_addr
          quorum_votes: quorum_votes
          name: name
          ring0_addr: ring0_addr
          ring5_addr: ring5_addr
          nodeid: nodeid
          ring2_addr: ring2_addr
          ring6_addr: ring6_addr
      properties:
        totem:
          $ref: '#/components/schemas/TotemSummary'
        preferred_node:
          type: string
        config_digest:
          type: string
        nodelist:
          items:
            $ref: '#/components/schemas/CorosyncNodeSummary'
          type: array
      required:
      - config_digest
      - nodelist
      - preferred_node
      - totem
      type: object
    LVMChild:
      example:
        lvcount: 5.637376656633329
        size: 5.962133916683182
        children:
        - null
        - null
        name: name
        leaf: 0.6027456183070403
        free: 1.4658129805029452
      properties:
        children:
          items:
            $ref: '#/components/schemas/LVMChild'
          type: array
        leaf:
          description: "Is leaf. This is a boolean intergar, 1 is true, 0 is false"
          maximum: 1
          minimum: 0
          type: number
        name:
          type: string
        free:
          description: The free space on lvm in bytes
          type: number
        size:
          description: The total size of lvm in bytes
          type: number
        lvcount:
          description: The number of logical volumes
          type: number
      required:
      - leaf
      type: object
    LVMThinSummary:
      example:
        metadata_used: 5.962133916683182
        vg: vg
        lv: lv
        metadata_size: 1.4658129805029452
        lv_size: 0.8008281904610115
        used: 6.027456183070403
      properties:
        lv:
          type: string
        lv_size:
          description: The size of the lvm thin pool in bytes
          type: number
        used:
          description: The used size of the lvm thin pool in bytes
          type: number
        metadata_size:
          description: The size of the metadata lv in bytes
          type: number
        metadata_used:
          description: The used size of the metadata lv in bytes
          type: number
        vg:
          description: The associated volume group.
          type: string
      required:
      - lv
      - lv_size
      - metadata_size
      - metadata_used
      - used
      - vg
      type: object
    LinkMap:
      additionalProperties:
        $ref: '#/components/schemas/LinkSummary'
      type: object
    LinkSummary:
      example:
        linknumber: linknumber
      properties:
        linknumber:
          type: string
      type: object
    ListCorosyncNodesResponseContent:
      example:
        data:
        - ring1_addr: ring1_addr
          ring4_addr: ring4_addr
          ring7_addr: ring7_addr
          ring3_addr: ring3_addr
          pve_addr: pve_addr
          quorum_votes: quorum_votes
          name: name
          ring0_addr: ring0_addr
          ring5_addr: ring5_addr
          nodeid: nodeid
          ring2_addr: ring2_addr
          ring6_addr: ring6_addr
        - ring1_addr: ring1_addr
          ring4_addr: ring4_addr
          ring7_addr: ring7_addr
          ring3_addr: ring3_addr
          pve_addr: pve_addr
          quorum_votes: quorum_votes
          name: name
          ring0_addr: ring0_addr
          ring5_addr: ring5_addr
          nodeid: nodeid
          ring2_addr: ring2_addr
          ring6_addr: ring6_addr
      properties:
        data:
          items:
            $ref: '#/components/schemas/CorosyncNodeSummary'
          type: array
      required:
      - data
      type: object
    ListCpuCapabilitiesResponseContent:
      example:
        data:
        - vendor: vendor
          custom: 0.8008281904610115
          name: name
        - vendor: vendor
          custom: 0.8008281904610115
          name: name
      properties:
        data:
          items:
            $ref: '#/components/schemas/CpuCapabilitySummary'
          type: array
      required:
      - data
      type: object
    ListDirectoriesResponseContent:
      example:
        data:
        - path: path
          unitfile: unitfile
          options: options
          type: type
          device: device
        - path: path
          unitfile: unitfile
          options: options
          type: type
          device: device
      properties:
        data:
          items:
            $ref: '#/components/schemas/DirectorySummary'
          type: array
      required:
      - data
      type: object
    ListDisksResponseContent:
      example:
        data:
        - devpath: devpath
          parent: parent
          wearout: ""
          health: health
          gpt: 0.8008281904610115
          osdid: 6.027456183070403
          type: null
          mounted: 5.962133916683182
          rpm: ""
          wwn: wwn
          by_id_link: by_id_link
          size: 1.4658129805029452
          serial: serial
          vendor: vendor
          model: model
        - devpath: devpath
          parent: parent
          wearout: ""
          health: health
          gpt: 0.8008281904610115
          osdid: 6.027456183070403
          type: null
          mounted: 5.962133916683182
          rpm: ""
          wwn: wwn
          by_id_link: by_id_link
          size: 1.4658129805029452
          serial: serial
          vendor: vendor
          model: model
      properties:
        data:
          items:
            $ref: '#/components/schemas/DiskSummary'
          type: array
      required:
      - data
      type: object
    ListGroupsResponseContent:
      example:
        data:
        - groupid: groupid
          comment: comment
          users: users
        - groupid: groupid
          comment: comment
          users: users
      properties:
        data:
          items:
            $ref: '#/components/schemas/GroupSummary'
          type: array
      required:
      - data
      type: object
    ListLVMThinsResponseContent:
      example:
        data:
        - metadata_used: 5.962133916683182
          vg: vg
          lv: lv
          metadata_size: 1.4658129805029452
          lv_size: 0.8008281904610115
          used: 6.027456183070403
        - metadata_used: 5.962133916683182
          vg: vg
          lv: lv
          metadata_size: 1.4658129805029452
          lv_size: 0.8008281904610115
          used: 6.027456183070403
      properties:
        data:
          items:
            $ref: '#/components/schemas/LVMThinSummary'
          type: array
      required:
      - data
      type: object
    ListLVMsData:
      example:
        children:
        - lvcount: 5.637376656633329
          size: 5.962133916683182
          children:
          - null
          - null
          name: name
          leaf: 0.6027456183070403
          free: 1.4658129805029452
        - lvcount: 5.637376656633329
          size: 5.962133916683182
          children:
          - null
          - null
          name: name
          leaf: 0.6027456183070403
          free: 1.4658129805029452
        leaf: 0.08008281904610115
      properties:
        leaf:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        children:
          items:
            $ref: '#/components/schemas/LVMChild'
          type: array
      required:
      - children
      - leaf
      type: object
    ListLVMsResponseContent:
      example:
        data:
          children:
          - lvcount: 5.637376656633329
            size: 5.962133916683182
            children:
            - null
            - null
            name: name
            leaf: 0.6027456183070403
            free: 1.4658129805029452
          - lvcount: 5.637376656633329
            size: 5.962133916683182
            children:
            - null
            - null
            name: name
            leaf: 0.6027456183070403
            free: 1.4658129805029452
          leaf: 0.08008281904610115
      properties:
        data:
          $ref: '#/components/schemas/ListLVMsData'
      required:
      - data
      type: object
    ListMachineCapabilitiesResponseContent:
      example:
        data:
        - id: id
          type: null
          version: version
        - id: id
          type: null
          version: version
      properties:
        data:
          items:
            $ref: '#/components/schemas/MachineCapabilitySummary'
          type: array
      required:
      - data
      type: object
    ListNetworkInterfacesResponseContent:
      example:
        data:
        - bridge_ports: bridge_ports
          method6: null
          bond_primary: bond_primary
          bond_mode: null
          type: null
          autostart: 6.027456183070403
          bridge_vids: bridge_vids
          bridge_fd: bridge_fd
          bridge_vlan_aware: 5.637376656633329
          netmask: netmask
          bridge_stp: bridge_stp
          address6: address6
          cidr: cidr
          slaves: slaves
          comments: comments
          address: address
          method: null
          cidr6: cidr6
          active: 1.4658129805029452
          priority: 0.8008281904610115
          families:
          - families
          - families
          iface: iface
          bond_miimon: bond_miimon
          bond_xmit_hash_policy: null
          exists: 5.962133916683182
          netmask6: netmask6
          gateway6: gateway6
          gateway: gateway
        - bridge_ports: bridge_ports
          method6: null
          bond_primary: bond_primary
          bond_mode: null
          type: null
          autostart: 6.027456183070403
          bridge_vids: bridge_vids
          bridge_fd: bridge_fd
          bridge_vlan_aware: 5.637376656633329
          netmask: netmask
          bridge_stp: bridge_stp
          address6: address6
          cidr: cidr
          slaves: slaves
          comments: comments
          address: address
          method: null
          cidr6: cidr6
          active: 1.4658129805029452
          priority: 0.8008281904610115
          families:
          - families
          - families
          iface: iface
          bond_miimon: bond_miimon
          bond_xmit_hash_policy: null
          exists: 5.962133916683182
          netmask6: netmask6
          gateway6: gateway6
          gateway: gateway
      properties:
        data:
          items:
            $ref: '#/components/schemas/NetworkInterfaceSummary'
          type: array
      required:
      - data
      type: object
    ListNodeCertificatesResponseContent:
      example:
        data:
        - notAfter: 0.8008281904610115
          filename: filename
          public-key-type: public-key-type
          sans:
          - sans
          - sans
          subject: subject
          fingerprint: fingerprint
          pem: pem
          issuer: issuer
          notBefore: 6.027456183070403
          public-key-bits: public-key-bits
        - notAfter: 0.8008281904610115
          filename: filename
          public-key-type: public-key-type
          sans:
          - sans
          - sans
          subject: subject
          fingerprint: fingerprint
          pem: pem
          issuer: issuer
          notBefore: 6.027456183070403
          public-key-bits: public-key-bits
      properties:
        data:
          items:
            $ref: '#/components/schemas/NodeCertificate'
          type: array
      required:
      - data
      type: object
    ListNodeStorageResponseContent:
      example:
        data:
        - shared: 0.14658129805029452
          avail: 7.061401241503109
          total: 5.962133916683182
          used_fraction: 2.302136
          active: 0.08008281904610115
          storage: storage
          used: 5.637376656633329
          type: null
          content: content
          enabled: 0.6027456183070403
        - shared: 0.14658129805029452
          avail: 7.061401241503109
          total: 5.962133916683182
          used_fraction: 2.302136
          active: 0.08008281904610115
          storage: storage
          used: 5.637376656633329
          type: null
          content: content
          enabled: 0.6027456183070403
      properties:
        data:
          items:
            $ref: '#/components/schemas/NodeStorageSummary'
          type: array
      required:
      - data
      type: object
    ListNodesResponseContent:
      example:
        data:
        - level: level
          cpu: 2.302136
          maxcpu: 5.637376656633329
          type: type
          uptime: 7.061401241503109
          node: node
          disk: 1.4658129805029452
          ssl_fingerprint: ssl_fingerprint
          mem: 6.027456183070403
          maxdisk: 5.962133916683182
          id: id
          maxmem: 0.8008281904610115
          status: null
        - level: level
          cpu: 2.302136
          maxcpu: 5.637376656633329
          type: type
          uptime: 7.061401241503109
          node: node
          disk: 1.4658129805029452
          ssl_fingerprint: ssl_fingerprint
          mem: 6.027456183070403
          maxdisk: 5.962133916683182
          id: id
          maxmem: 0.8008281904610115
          status: null
      properties:
        data:
          items:
            $ref: '#/components/schemas/NodeSummary'
          type: array
      required:
      - data
      type: object
    ListPackagesResponseContent:
      example:
        data:
        - Origin: Origin
          Description: Description
          Version: Version
          Priority: Priority
          CurrentState: CurrentState
          Title: Title
          Arch: Arch
          OldVersion: OldVersion
          Package: Package
          RunningKernel: RunningKernel
          Section: Section
        - Origin: Origin
          Description: Description
          Version: Version
          Priority: Priority
          CurrentState: CurrentState
          Title: Title
          Arch: Arch
          OldVersion: OldVersion
          Package: Package
          RunningKernel: RunningKernel
          Section: Section
      properties:
        data:
          items:
            $ref: '#/components/schemas/PackageSummary'
          type: array
      required:
      - data
      type: object
    ListPciDeviceMediatedDevicesResponseContent:
      example:
        data:
        - available: 0.8008281904610115
          description: description
          type: type
        - available: 0.8008281904610115
          description: description
          type: type
      properties:
        data:
          items:
            $ref: '#/components/schemas/PciMediatedDeviceSummary'
          type: array
      required:
      - data
      type: object
    ListPciDevicesResponseContent:
      example:
        data:
        - product: product
          level: 1.4658129805029452
          port: 5.962133916683182
          serial: serial
          usbpath: usbpath
          busnum: 0.8008281904610115
          devnum: 6.027456183070403
          prodid: prodid
          vendid: vendid
          speed: speed
          manufacturer: manufacturer
        - product: product
          level: 1.4658129805029452
          port: 5.962133916683182
          serial: serial
          usbpath: usbpath
          busnum: 0.8008281904610115
          devnum: 6.027456183070403
          prodid: prodid
          vendid: vendid
          speed: speed
          manufacturer: manufacturer
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsbDeviceSummary'
          type: array
      required:
      - data
      type: object
    ListPendingVirtualMachineConfigurationChangesResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    ListPoolsResponseContent:
      example:
        data:
        - poolid: poolid
          comment: comment
        - poolid: poolid
          comment: comment
      properties:
        data:
          items:
            $ref: '#/components/schemas/PoolSummary'
          type: array
      required:
      - data
      type: object
    ListRealmsResponseContent:
      example:
        data:
        - realm: realm
          comment: comment
          type: type
          tfa: null
        - realm: realm
          comment: comment
          type: type
          tfa: null
      properties:
        data:
          items:
            $ref: '#/components/schemas/RealmSummary'
          type: array
      required:
      - data
      type: object
    ListRepositoriesInformationResponseContent:
      example:
        data:
          digest: digest
          standard-repos:
          - name: name
            description: description
            handle: handle
            status: 0.8008281904610115
          - name: name
            description: description
            handle: handle
            status: 0.8008281904610115
          files:
          - path: path
            file-type: file-type
            repositories:
            - Components:
              - Components
              - Components
              URIs:
              - URIs
              - URIs
              Types:
              - Types
              - Types
              Comment: Comment
              FileType: FileType
              Enabled: 6.027456183070403
              Suites:
              - Suites
              - Suites
            - Components:
              - Components
              - Components
              URIs:
              - URIs
              - URIs
              Types:
              - Types
              - Types
              Comment: Comment
              FileType: FileType
              Enabled: 6.027456183070403
              Suites:
              - Suites
              - Suites
            digest:
            - 1.4658129805029452
            - 1.4658129805029452
            content: content
          - path: path
            file-type: file-type
            repositories:
            - Components:
              - Components
              - Components
              URIs:
              - URIs
              - URIs
              Types:
              - Types
              - Types
              Comment: Comment
              FileType: FileType
              Enabled: 6.027456183070403
              Suites:
              - Suites
              - Suites
            - Components:
              - Components
              - Components
              URIs:
              - URIs
              - URIs
              Types:
              - Types
              - Types
              Comment: Comment
              FileType: FileType
              Enabled: 6.027456183070403
              Suites:
              - Suites
              - Suites
            digest:
            - 1.4658129805029452
            - 1.4658129805029452
            content: content
          errors:
          - errors
          - errors
          infos:
          - path: path
            kind: kind
            index: 5.962133916683182
            message: message
          - path: path
            kind: kind
            index: 5.962133916683182
            message: message
      properties:
        data:
          $ref: '#/components/schemas/RepositoriesReport'
      required:
      - data
      type: object
    ListRolesResponseContent:
      example:
        data:
        - special: 0.08008281904610115
          roleid: roleid
          privs: privs
        - special: 0.08008281904610115
          roleid: roleid
          privs: privs
      properties:
        data:
          items:
            $ref: '#/components/schemas/RoleSummary'
          type: array
      required:
      - data
      type: object
    ListStorageResponseContent:
      example:
        data:
        - server: server
          shared: 0.08008281904610115
          vgname: vgname
          pool: pool
          thinpool: thinpool
          storage: storage
          type: null
          content: content
          mountpoint: mountpoint
          path: path
          nodes: nodes
          digest: digest
          export: export
        - server: server
          shared: 0.08008281904610115
          vgname: vgname
          pool: pool
          thinpool: thinpool
          storage: storage
          type: null
          content: content
          mountpoint: mountpoint
          path: path
          nodes: nodes
          digest: digest
          export: export
      properties:
        data:
          items:
            $ref: '#/components/schemas/StorageSummary'
          type: array
      required:
      - data
      type: object
    ListStorageVolumesResponseContent:
      example:
        data:
        - parent: parent
          notes: notes
          size: 0.8008281904610115
          encrypted: encrypted
          protected: 0.14658129805029452
          vmid: vmid
          format: format
          ctime: 6.027456183070403
          used: 5.962133916683182
          volid: volid
        - parent: parent
          notes: notes
          size: 0.8008281904610115
          encrypted: encrypted
          protected: 0.14658129805029452
          vmid: vmid
          format: format
          ctime: 6.027456183070403
          used: 5.962133916683182
          volid: volid
      properties:
        data:
          items:
            $ref: '#/components/schemas/StorageVolumeSummary'
          type: array
      required:
      - data
      type: object
    ListUpdatesResponseContent:
      example:
        data:
        - Origin: Origin
          Description: Description
          Version: Version
          ChangeLogUrl: ChangeLogUrl
          Priority: Priority
          Title: Title
          Arch: Arch
          OldVersion: OldVersion
          Package: Package
          Section: Section
        - Origin: Origin
          Description: Description
          Version: Version
          ChangeLogUrl: ChangeLogUrl
          Priority: Priority
          Title: Title
          Arch: Arch
          OldVersion: OldVersion
          Package: Package
          Section: Section
      properties:
        data:
          items:
            $ref: '#/components/schemas/UpdateSummary'
          type: array
      required:
      - data
      type: object
    ListUsbDevicesResponseContent:
      example:
        data:
        - product: product
          level: 1.4658129805029452
          port: 5.962133916683182
          serial: serial
          usbpath: usbpath
          busnum: 0.8008281904610115
          devnum: 6.027456183070403
          prodid: prodid
          vendid: vendid
          speed: speed
          manufacturer: manufacturer
        - product: product
          level: 1.4658129805029452
          port: 5.962133916683182
          serial: serial
          usbpath: usbpath
          busnum: 0.8008281904610115
          devnum: 6.027456183070403
          prodid: prodid
          vendid: vendid
          speed: speed
          manufacturer: manufacturer
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsbDeviceSummary'
          type: array
      required:
      - data
      type: object
    ListUserTokensResponseContent:
      example:
        data:
        - tokenid: tokenid
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
        - tokenid: tokenid
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserTokenSummary'
          type: array
      required:
      - data
      type: object
    ListUsersResponseContent:
      example:
        data:
        - realm-type: realm-type
          firstname: firstname
          enable: 0.08008281904610115
          expire: 6.027456183070403
          groups: groups
          comment: comment
          tokens:
          - tokenid: tokenid
            expire: 5.962133916683182
            comment: comment
            privsep: 0.14658129805029452
          - tokenid: tokenid
            expire: 5.962133916683182
            comment: comment
            privsep: 0.14658129805029452
          userid: userid
          email: email
          lastname: lastname
        - realm-type: realm-type
          firstname: firstname
          enable: 0.08008281904610115
          expire: 6.027456183070403
          groups: groups
          comment: comment
          tokens:
          - tokenid: tokenid
            expire: 5.962133916683182
            comment: comment
            privsep: 0.14658129805029452
          - tokenid: tokenid
            expire: 5.962133916683182
            comment: comment
            privsep: 0.14658129805029452
          userid: userid
          email: email
          lastname: lastname
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
      required:
      - data
      type: object
    ListVirtualMachinesResponseContent:
      example:
        data:
        - template: 0.6027456183070403
          vmid: 0.8008281904610115
          cpus: 7.386281948385884
          diskread: 3.616076749251911
          cpu: 4.145608
          pid: 1.2315135367772556
          netout: 9.301444243932576
          uptime: 2.3021358869347655
          tags: tags
          mem: 1.4658129805029452
          maxdisk: 5.637376656633329
          name: name
          lock: lock
          qmpstatus: qmpstatus
          maxmem: 5.962133916683182
          diskwrite: 2.027123023002322
          status: null
          netin: 7.061401241503109
        - template: 0.6027456183070403
          vmid: 0.8008281904610115
          cpus: 7.386281948385884
          diskread: 3.616076749251911
          cpu: 4.145608
          pid: 1.2315135367772556
          netout: 9.301444243932576
          uptime: 2.3021358869347655
          tags: tags
          mem: 1.4658129805029452
          maxdisk: 5.637376656633329
          name: name
          lock: lock
          qmpstatus: qmpstatus
          maxmem: 5.962133916683182
          diskwrite: 2.027123023002322
          status: null
          netin: 7.061401241503109
      properties:
        data:
          items:
            $ref: '#/components/schemas/VirtualMachineSummary'
          type: array
      required:
      - data
      type: object
    ListZFSPoolsResponseContent:
      example:
        data:
        - frag: 1.4658129805029452
          size: 5.637376656633329
          name: name
          health: health
          alloc: 0.8008281904610115
          free: 5.962133916683182
          dedup: 6.027456183070403
        - frag: 1.4658129805029452
          size: 5.637376656633329
          name: name
          health: health
          alloc: 0.8008281904610115
          free: 5.962133916683182
          dedup: 6.027456183070403
      properties:
        data:
          items:
            $ref: '#/components/schemas/ZFSPoolSummary'
          type: array
      required:
      - data
      type: object
    MachineCapabilitySummary:
      example:
        id: id
        type: null
        version: version
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/MachineType'
        version:
          type: string
      required:
      - id
      - type
      - version
      type: object
    MachineType:
      enum:
      - q35
      - i440fx
      type: string
    MemoryBlockSummary:
      example:
        can-offline: true
        online: true
        phys-index: 0.8008281904610115
      properties:
        online:
          type: boolean
        can-offline:
          type: boolean
        phys-index:
          type: number
      type: object
    ModifyPoolRequestContent:
      example:
        comment: comment
        storage: storage
        delete: true
        vms: vms
      properties:
        comment:
          type: string
        delete:
          description: Remove storage and vms in request rather than adding.
          type: boolean
        storage:
          description: List of storage identifiers to add to the pool.
          type: string
        vms:
          description: List of VM identifiers to add to the pool.
          type: string
      type: object
    ModifyRoleRequestContent:
      example:
        privs: privs
        append: 0.08008281904610115
      properties:
        privs:
          type: string
        append:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      type: object
    ModifyStorageRequestContent:
      example:
        blocksize: blocksize
        server: server
        shared: true
        comstar_tg: comstar_tg
        monhost: monhost
        nowritecache: true
        saferemove-throughput: saferemove-throughput
        data-pool: data-pool
        server2: server2
        delete: delete
        content: content
        is_mountpoint: is_mountpoint
        mountpoint: mountpoint
        bwlimit: bwlimit
        fuse: true
        subdir: subdir
        max-protected-backups: 0.8008281904610115
        password: password
        master-pubkey: master-pubkey
        saferemove: true
        encryption-key: encryption-key
        digest: digest
        fingerprint: fingerprint
        options: options
        smbversion: null
        krbd: true
        mkdir: true
        tagged_only: true
        maxfiles: 6.027456183070403
        format: format
        lio_tpg: lio_tpg
        nocow: 1.4658129805029452
        pool: pool
        preallocation: null
        prune-backups: prune-backups
        transport: null
        fs-name: fs-name
        nodes: nodes
        port: 5.962133916683182
        sparse: true
        comstar_hg: comstar_hg
        disable: true
        domain: domain
        namespace: namespace
        keyring: keyring
        username: username
      properties:
        blocksize:
          type: string
        bwlimit:
          type: string
        comstar_hg:
          type: string
        comstar_tg:
          type: string
        content:
          description: Allowed content types.
          type: string
        data-pool:
          description: "Data pool, only for erasure coding"
          type: string
        delete:
          description: A list of settings to delete.
          type: string
        digest:
          description: Prevent change if current configuration has a different SHA1
            digest.
          type: string
        disable:
          description: Disable the storage
          type: boolean
        domain:
          description: CIFS domain
          type: string
        encryption-key:
          description: Encryption key for storage. Use 'autogen' to generate one automatically
            without passphrase.
          type: string
        fingerprint:
          description: Certificate SHA256 fingerprint
          type: string
        format:
          description: Default image format
          type: string
        fs-name:
          description: The ceph filesystem name
          type: string
        fuse:
          description: Mount CephFS through FUSE
          type: boolean
        is_mountpoint:
          description: "Assume the given path is an externally managed mountpoint.\
            \ This is a string boolean, using 'yes' or 'no'"
          type: string
        keyring:
          description: Client keyring contents
          type: string
        krbd:
          description: Always access rbd through krbd kernel module
          type: boolean
        lio_tpg:
          description: Target portal group for Linux LIO targets
          type: string
        master-pubkey:
          description: "Base64 encoded, PEM formatted public RSA key"
          type: string
        max-protected-backups:
          description: Mac number of protected backups. Defaults to unlimited
          type: number
        maxfiles:
          description: Maximum number of files.
          type: number
        mkdir:
          description: Create the directory if doesnt exist. Defaults to true.
          type: boolean
        monhost:
          description: IP addresses of monitors.
          type: string
        mountpoint:
          description: The mount point
          type: string
        namespace:
          description: The namespace
          type: string
        nocow:
          description: "Set the NOCOW flag on files. This is a boolean integer, using\
            \ 0 for false or 1 for true."
          type: number
        nodes:
          description: Comma seperated list of node names
          type: string
        nowritecache:
          description: Disable write caching on the target.
          type: boolean
        options:
          description: NFS mount options.
          type: string
        password:
          description: Password for accessing the datastore
          type: string
        pool:
          description: The pool name
          type: string
        port:
          description: For non default port
          type: number
        preallocation:
          $ref: '#/components/schemas/StoragePreallocation'
        prune-backups:
          description: The retention options.
          type: string
        saferemove:
          description: Zero out data when removing LVs
          type: boolean
        saferemove-throughput:
          description: Wipe throughput.
          type: string
        server:
          description: Server IP or DNS name
          type: string
        server2:
          description: Backup server IP or DNS name
          type: string
        shared:
          description: Indicates if the storage is shared.
          type: boolean
        smbversion:
          $ref: '#/components/schemas/StorageSMBVersion'
        sparse:
          description: Use sparse volumes.
          type: boolean
        subdir:
          description: The subdir to mount.
          type: string
        tagged_only:
          description: Only use logical volumes tagged with 'pve-vm-ID'.
          type: boolean
        transport:
          $ref: '#/components/schemas/StorageTransport'
        username:
          description: The username to use.
          type: string
      type: object
    ModifyStorageResponseContent:
      example:
        data:
          storage: storage
          type: null
      properties:
        data:
          $ref: '#/components/schemas/StorageConfiguration'
      required:
      - data
      type: object
    ModifyUserRequestContent:
      example:
        firstname: firstname
        enable: 0.6027456183070403
        keys: keys
        expire: 1.4658129805029452
        groups: groups
        comment: comment
        append: 0.08008281904610115
        email: email
        lastname: lastname
      properties:
        comment:
          type: string
        append:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        email:
          type: string
        enable:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        firstname:
          type: string
        lastname:
          type: string
        groups:
          type: string
        keys:
          type: string
        expire:
          type: number
      type: object
    ModifyUserTokenRequestContent:
      example:
        expire: 6.027456183070403
        comment: comment
        privsep: 0.08008281904610115
      properties:
        privsep:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        expire:
          type: number
        comment:
          type: string
      type: object
    ModifyUserTokenResponseContent:
      example:
        data:
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
      properties:
        data:
          $ref: '#/components/schemas/UserConfigurationTokenSummary'
      required:
      - data
      type: object
    NetworkInterfaceBondHashPolicy:
      enum:
      - layer2
      - layer2+3
      - layer3+4
      type: string
    NetworkInterfaceBondMode:
      enum:
      - balance-rr
      - active-backup
      - balance-xor
      - broadcast
      - 802.3ad
      - balance-tlb
      - balance-alb
      - balance-slb
      - lacp-balance-slb
      - lacp-balance-tcp
      type: string
    NetworkInterfaceIpAddressSummary:
      example:
        ip-address: ip-address
        ip-address-type: ip-address-type
        prefix: 3.616076749251911
      properties:
        ip-address:
          type: string
        ip-address-type:
          type: string
        prefix:
          type: number
      type: object
    NetworkInterfaceMethod:
      enum:
      - manual
      - static
      - none
      - dhcp
      - ipv6_autoconf
      type: string
    NetworkInterfaceStatisticsSummary:
      example:
        rx-errs: 1.4658129805029452
        tx-errs: 7.061401241503109
        rx-packets: 5.962133916683182
        tx-packets: 9.301444243932576
        tx-bytes: 5.637376656633329
        rx-dropped: 6.027456183070403
        rx-bytes: 0.8008281904610115
        tx-dropped: 2.3021358869347655
      properties:
        rx-bytes:
          type: number
        rx-dropped:
          type: number
        rx-errs:
          type: number
        rx-packets:
          type: number
        tx-bytes:
          type: number
        tx-dropped:
          type: number
        tx-errs:
          type: number
        tx-packets:
          type: number
      type: object
    NetworkInterfaceSummary:
      example:
        bridge_ports: bridge_ports
        method6: null
        bond_primary: bond_primary
        bond_mode: null
        type: null
        autostart: 6.027456183070403
        bridge_vids: bridge_vids
        bridge_fd: bridge_fd
        bridge_vlan_aware: 5.637376656633329
        netmask: netmask
        bridge_stp: bridge_stp
        address6: address6
        cidr: cidr
        slaves: slaves
        comments: comments
        address: address
        method: null
        cidr6: cidr6
        active: 1.4658129805029452
        priority: 0.8008281904610115
        families:
        - families
        - families
        iface: iface
        bond_miimon: bond_miimon
        bond_xmit_hash_policy: null
        exists: 5.962133916683182
        netmask6: netmask6
        gateway6: gateway6
        gateway: gateway
      properties:
        iface:
          type: string
        type:
          $ref: '#/components/schemas/NetworkInterfaceType'
        method:
          $ref: '#/components/schemas/NetworkInterfaceMethod'
        method6:
          $ref: '#/components/schemas/NetworkInterfaceMethod'
        priority:
          type: number
        families:
          items:
            type: string
          type: array
        bond_primary:
          type: string
        bond_mode:
          $ref: '#/components/schemas/NetworkInterfaceBondMode'
        bond_xmit_hash_policy:
          $ref: '#/components/schemas/NetworkInterfaceBondHashPolicy'
        bond_miimon:
          type: string
        slaves:
          type: string
        autostart:
          type: number
        comments:
          type: string
        active:
          type: number
        exists:
          type: number
        bridge_vids:
          type: string
        bridge_ports:
          type: string
        bridge_fd:
          type: string
        bridge_stp:
          type: string
        bridge_vlan_aware:
          type: number
        address:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        gateway:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        gateway6:
          pattern: "^([a-f0-9:]+:+)+[a-f0-9]+$"
          type: string
        netmask:
          type: string
        netmask6:
          type: string
        cidr:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/(3[0-2]|[1-2][0-9]|[0-9])$"
          type: string
        cidr6:
          type: string
        address6:
          pattern: "^([a-f0-9:]+:+)+[a-f0-9]+$"
          type: string
      required:
      - iface
      - type
      type: object
    NetworkInterfaceType:
      enum:
      - bridge
      - bond
      - eth
      - alias
      - vlan
      - OVSBridge
      - OVSBond
      - OVSPort
      - OVSIntPort
      - unknown
      type: string
    NoGuestAgentErrorResponseContent:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    NodeCertificate:
      example:
        notAfter: 0.8008281904610115
        filename: filename
        public-key-type: public-key-type
        sans:
        - sans
        - sans
        subject: subject
        fingerprint: fingerprint
        pem: pem
        issuer: issuer
        notBefore: 6.027456183070403
        public-key-bits: public-key-bits
      properties:
        filename:
          description: The certificate's filename.
          type: string
        fingerprint:
          description: The certificate's fingerprint.
          type: string
        issuer:
          description: The certificate's issuer.
          type: string
        notAfter:
          description: The certificate's notAfter timestamp.
          type: number
        notBefore:
          description: The certificate's notAfter timestamp.
          type: number
        pem:
          type: string
        public-key-bits:
          description: The certificate's key size.
          type: string
        public-key-type:
          description: The certificate's key algorithm.
          type: string
        sans:
          description: The certificate's sans
          items:
            type: string
          type: array
        subject:
          description: The certificate's subject.
          type: string
      type: object
    NodeStatus:
      enum:
      - online
      - offline
      type: string
    NodeStorageSummary:
      example:
        shared: 0.14658129805029452
        avail: 7.061401241503109
        total: 5.962133916683182
        used_fraction: 2.302136
        active: 0.08008281904610115
        storage: storage
        used: 5.637376656633329
        type: null
        content: content
        enabled: 0.6027456183070403
      properties:
        storage:
          pattern: "^[A-Za-z]+$"
          type: string
        type:
          $ref: '#/components/schemas/StorageType'
        content:
          description: The allowed storage content types.
          type: string
        active:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        enabled:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        shared:
          description: Whether the storage is shared across all nodes.
          maximum: 1
          minimum: 0
          type: number
        total:
          type: number
        used:
          type: number
        used_fraction:
          format: float
          type: number
        avail:
          type: number
      required:
      - content
      - storage
      - type
      type: object
    NodeSummary:
      example:
        level: level
        cpu: 2.302136
        maxcpu: 5.637376656633329
        type: type
        uptime: 7.061401241503109
        node: node
        disk: 1.4658129805029452
        ssl_fingerprint: ssl_fingerprint
        mem: 6.027456183070403
        maxdisk: 5.962133916683182
        id: id
        maxmem: 0.8008281904610115
        status: null
      properties:
        node:
          description: The name of the node
          pattern: "^[A-Za-z]+$"
          type: string
        maxmem:
          description: Max memory allocated in bytes
          type: number
        mem:
          description: Current memory utilization in bytes
          type: number
        disk:
          description: Current disk utilization in bytes
          type: number
        maxdisk:
          description: Max disk space available in bytes
          type: number
        maxcpu:
          description: Amount of CPU cores available on node
          type: number
        id:
          description: The node id. This is a string of 'node/<name>'
          type: string
        level:
          description: The node's support level
          type: string
        ssl_fingerprint:
          type: string
        type:
          description: The system type. Seems to be always node
          type: string
        cpu:
          description: The virtual machines cpu utilization in percent
          format: float
          type: number
        uptime:
          description: The node's uptime in seconds
          type: number
        status:
          $ref: '#/components/schemas/NodeStatus'
      required:
      - node
      type: object
    OperatingSystemInformationSummary:
      example:
        kernel-release: kernel-release
        machine: machine
        pretty-name: pretty-name
        name: name
        version-id: version-id
        id: id
        version: version
        kernel-version: kernel-version
      properties:
        pretty-name:
          type: string
        name:
          type: string
        version:
          type: string
        version-id:
          type: string
        id:
          type: string
        kernel-version:
          type: string
        kernel-release:
          type: string
        machine:
          type: string
      type: object
    OrderNodeCertificateRequestContent:
      example:
        force: 0.08008281904610115
      properties:
        force:
          description: Overwrite existing custom certificate.
          maximum: 1
          minimum: 0
          type: number
      type: object
    OrderNodeCertificateResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    PackageSummary:
      example:
        Origin: Origin
        Description: Description
        Version: Version
        Priority: Priority
        CurrentState: CurrentState
        Title: Title
        Arch: Arch
        OldVersion: OldVersion
        Package: Package
        RunningKernel: RunningKernel
        Section: Section
      properties:
        Title:
          type: string
        Priority:
          type: string
        OldVersion:
          type: string
        Description:
          type: string
        Arch:
          type: string
        Package:
          type: string
        Section:
          type: string
        Version:
          type: string
        Origin:
          type: string
        CurrentState:
          type: string
        RunningKernel:
          type: string
      required:
      - Arch
      - CurrentState
      - Description
      - OldVersion
      - Origin
      - Package
      - Priority
      - Section
      - Title
      - Version
      type: object
    PciControllerSummary:
      example:
        bus: 1.4658129805029452
        domain: 5.962133916683182
        function: 5.637376656633329
        slot: 2.3021358869347655
      properties:
        bus:
          type: number
        domain:
          type: number
        function:
          type: number
        slot:
          type: number
      type: object
    PciMediatedDeviceSummary:
      example:
        available: 0.8008281904610115
        description: description
        type: type
      properties:
        available:
          type: number
        description:
          type: string
        type:
          type: string
      required:
      - available
      - description
      - type
      type: object
    PendingVirtualMachineCloudInitField:
      example:
        new: new
        old: old
        key: key
      properties:
        key:
          type: string
        new:
          type: string
        old:
          type: string
      required:
      - key
      type: object
    PermissionsDetailMap:
      additionalProperties:
        description: "An integer used to represent a boolean. 0 is false, 1 is true."
        maximum: 1
        minimum: 0
        type: number
      type: object
    PermissionsMap:
      additionalProperties:
        $ref: '#/components/schemas/PermissionsDetailMap'
      type: object
    PingResponse:
      type: object
    PingVirtualMachineResponseContent:
      example:
        data: "{}"
      properties:
        data:
          type: object
      required:
      - data
      type: object
    PoolConfigurationSummary:
      example:
        members:
        - template: 1.2315135367772556
          shared: 0.10246457001441578
          vmid: 4.145608029883936
          diskread: 7.061401241503109
          cpu: 3.6160767
          netout: 5.637376656633329
          maxcpu: 2.027123023002322
          storage: storage
          type: null
          content: content
          uptime: 6.027456183070403
          plugintype: plugintype
          node: node
          disk: 0.8008281904610115
          mem: 7.386281948385884
          maxdisk: 9.301444243932576
          name: name
          id: id
          maxmem: 1.4658129805029452
          diskwrite: 2.3021358869347655
          netin: 5.962133916683182
          status: status
        - template: 1.2315135367772556
          shared: 0.10246457001441578
          vmid: 4.145608029883936
          diskread: 7.061401241503109
          cpu: 3.6160767
          netout: 5.637376656633329
          maxcpu: 2.027123023002322
          storage: storage
          type: null
          content: content
          uptime: 6.027456183070403
          plugintype: plugintype
          node: node
          disk: 0.8008281904610115
          mem: 7.386281948385884
          maxdisk: 9.301444243932576
          name: name
          id: id
          maxmem: 1.4658129805029452
          diskwrite: 2.3021358869347655
          netin: 5.962133916683182
          status: status
        comment: comment
      properties:
        members:
          items:
            $ref: '#/components/schemas/PoolMemberSummary'
          type: array
        comment:
          type: string
      required:
      - members
      type: object
    PoolMemberSummary:
      example:
        template: 1.2315135367772556
        shared: 0.10246457001441578
        vmid: 4.145608029883936
        diskread: 7.061401241503109
        cpu: 3.6160767
        netout: 5.637376656633329
        maxcpu: 2.027123023002322
        storage: storage
        type: null
        content: content
        uptime: 6.027456183070403
        plugintype: plugintype
        node: node
        disk: 0.8008281904610115
        mem: 7.386281948385884
        maxdisk: 9.301444243932576
        name: name
        id: id
        maxmem: 1.4658129805029452
        diskwrite: 2.3021358869347655
        netin: 5.962133916683182
        status: status
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/PoolMemberType'
        disk:
          type: number
        uptime:
          type: number
        maxmem:
          type: number
        netin:
          type: number
        netout:
          type: number
        diskwrite:
          type: number
        diskread:
          type: number
        maxdisk:
          type: number
        cpu:
          format: float
          type: number
        maxcpu:
          type: number
        vmid:
          type: number
        mem:
          type: number
        name:
          type: string
        template:
          description: "Whether the VM is a template. This is a boolean integer, where\
            \ 1 is true and 0 is false."
          type: number
        node:
          pattern: "^[A-Za-z]+$"
          type: string
        storage:
          pattern: "^[A-Za-z]+$"
          type: string
        status:
          type: string
        plugintype:
          type: string
        shared:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        content:
          type: string
      required:
      - id
      - type
      type: object
    PoolMemberType:
      enum:
      - qemu
      - lxc
      - storage
      type: string
    PoolSummary:
      example:
        poolid: poolid
        comment: comment
      properties:
        poolid:
          type: string
        comment:
          type: string
      required:
      - poolid
      type: object
    ProxmoxSupportSummary:
      example:
        pbs-dirty-bitmap-migration: true
        query-bitmap-info: true
        pbs-masterkey: true
        backup-max-workers: true
        pbs-dirty-bitmap: true
        pbs-dirty-bitmap-savevm: true
        pbs-library-version: pbs-library-version
      properties:
        pbs-library-version:
          type: string
        pbs-masterkey:
          type: boolean
        pbs-dirty-bitmap-savevm:
          type: boolean
        pbs-dirty-bitmap-migration:
          type: boolean
        pbs-dirty-bitmap:
          type: boolean
        backup-max-workers:
          type: boolean
        query-bitmap-info:
          type: boolean
      type: object
    RealmConfigurationSummary:
      example:
        digest: digest
        comment: comment
        type: type
      properties:
        type:
          type: string
        digest:
          type: string
        comment:
          type: string
      required:
      - digest
      - type
      type: object
    RealmMode:
      enum:
      - ldap
      - ldaps
      - ldap+starttls
      type: string
    RealmSslVersion:
      enum:
      - tlsv1
      - tlsv1_1
      - tlsv1_2
      - tlsv1_3
      type: string
    RealmSummary:
      example:
        realm: realm
        comment: comment
        type: type
        tfa: null
      properties:
        realm:
          type: string
        type:
          type: string
        comment:
          type: string
        tfa:
          $ref: '#/components/schemas/TFAType'
      required:
      - realm
      - type
      type: object
    RealmSyncScope:
      enum:
      - users
      - groups
      - both
      type: string
    RealmType:
      enum:
      - ad
      - ldap
      - pam
      - pve
      - openid
      type: string
    RenewNodeCertificateRequestContent:
      example:
        force: 0.08008281904610115
      properties:
        force:
          description: Force renewal even if expirary is more than 30 days away.
          maximum: 1
          minimum: 0
          type: number
      type: object
    RenewNodeCertificateResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    RepositoriesReport:
      example:
        digest: digest
        standard-repos:
        - name: name
          description: description
          handle: handle
          status: 0.8008281904610115
        - name: name
          description: description
          handle: handle
          status: 0.8008281904610115
        files:
        - path: path
          file-type: file-type
          repositories:
          - Components:
            - Components
            - Components
            URIs:
            - URIs
            - URIs
            Types:
            - Types
            - Types
            Comment: Comment
            FileType: FileType
            Enabled: 6.027456183070403
            Suites:
            - Suites
            - Suites
          - Components:
            - Components
            - Components
            URIs:
            - URIs
            - URIs
            Types:
            - Types
            - Types
            Comment: Comment
            FileType: FileType
            Enabled: 6.027456183070403
            Suites:
            - Suites
            - Suites
          digest:
          - 1.4658129805029452
          - 1.4658129805029452
          content: content
        - path: path
          file-type: file-type
          repositories:
          - Components:
            - Components
            - Components
            URIs:
            - URIs
            - URIs
            Types:
            - Types
            - Types
            Comment: Comment
            FileType: FileType
            Enabled: 6.027456183070403
            Suites:
            - Suites
            - Suites
          - Components:
            - Components
            - Components
            URIs:
            - URIs
            - URIs
            Types:
            - Types
            - Types
            Comment: Comment
            FileType: FileType
            Enabled: 6.027456183070403
            Suites:
            - Suites
            - Suites
          digest:
          - 1.4658129805029452
          - 1.4658129805029452
          content: content
        errors:
        - errors
        - errors
        infos:
        - path: path
          kind: kind
          index: 5.962133916683182
          message: message
        - path: path
          kind: kind
          index: 5.962133916683182
          message: message
      properties:
        digest:
          type: string
        standard-repos:
          items:
            $ref: '#/components/schemas/RepositorySummary'
          type: array
        errors:
          items:
            type: string
          type: array
        files:
          items:
            $ref: '#/components/schemas/FileSummary'
          type: array
        infos:
          items:
            $ref: '#/components/schemas/FileInfoSummary'
          type: array
      required:
      - digest
      - errors
      - files
      - infos
      - standard-repos
      type: object
    RepositorySummary:
      example:
        name: name
        description: description
        handle: handle
        status: 0.8008281904610115
      properties:
        description:
          type: string
        status:
          type: number
        name:
          type: string
        handle:
          type: string
      required:
      - description
      - handle
      - name
      - status
      type: object
    RolePermissionSummary:
      example:
        VM.Clone: 0.6683562403749608
        Pool.Allocate: 0.7061401241503109
        VM.Backup: 0.9369310271410669
        VM.Config.Options: 0.6778324963048014
        SDN.Audit: 0.7386281948385884
        Realm.Allocate: 0.3616076749251911
        VM.Config.CDROM: 0.8762042012749002
        Sys.Console: 0.14894159098541704
        VM.Config.CPU: 0.9018348186070783
        Permission.Modify: 0.23021358869347652
        VM.Migrate: 0.5944895607614016
        VM.Config.Disk: 0.35571952270680973
        Datastore.AllocateTemplate: 0.5962133916683182
        VM.Config.Memory: 0.1284659006116532
        Realm.AllocateUser: 0.20271230230023218
        VM.Monitor: 0.6704019297950036
        Pool.Audit: 0.9301444243932576
        Sys.Modify: 0.10246457001441578
        VM.Console: 0.6878052220127876
        SDN.Allocate: 0.4145608029883936
        VM.Audit: 0.9965781217890561
        VM.Config.Cloudinit: 0.6438423552598547
        Sys.Audit: 0.12315135367772556
        VM.Allocate: 0.5025004791520294
        Datastore.Audit: 0.14658129805029452
        Datastore.Allocate: 0.08008281904610115
        VM.Snapshot.Rollback: 0.7143538047012307
        Group.Allocate: 0.5637376656633328
        Sys.PowerMgmt: 0.7457744773683765
        VM.Config.HWType: 0.6965117697638845
        Sys.Syslog: 0.11730742509559433
        VM.PowerMgmt: 0.3353193347011243
        VM.Snapshot: 0.30937452626664474
        Datastore.AllocateSpace: 0.6027456183070403
        Sys.Incoming: 0.684685269835264
        User.Modify: 0.4965218492984954
        VM.Config.Network: 0.288416212666878
      properties:
        Datastore.Allocate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Datastore.AllocateSpace:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Datastore.Audit:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Datastore.AllocateTemplate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Group.Allocate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Permission.Modify:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Pool.Allocate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Pool.Audit:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Realm.Allocate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Realm.AllocateUser:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        SDN.Allocate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        SDN.Audit:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Sys.Audit:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Sys.Modify:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Sys.Console:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Sys.Incoming:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Sys.PowerMgmt:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        Sys.Syslog:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        User.Modify:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Allocate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Audit:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Backup:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Clone:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.CDROM:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.CPU:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.Cloudinit:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.Disk:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.HWType:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.Memory:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.Network:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Config.Options:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Console:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Migrate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Monitor:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.PowerMgmt:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Snapshot:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        VM.Snapshot.Rollback:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      type: object
    RoleSummary:
      example:
        special: 0.08008281904610115
        roleid: roleid
        privs: privs
      properties:
        roleid:
          type: string
        privs:
          type: string
        special:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      required:
      - roleid
      type: object
    StorageConfiguration:
      example:
        storage: storage
        type: null
      properties:
        storage:
          pattern: "^[A-Za-z]+$"
          type: string
        type:
          $ref: '#/components/schemas/StorageType'
      required:
      - storage
      - type
      type: object
    StoragePreallocation:
      enum:
      - "off"
      - falloc
      - full
      - metadata
      type: string
    StorageSMBVersion:
      enum:
      - default
      - "2.0"
      - "3.0"
      - "2.1"
      - "3.11"
      type: string
    StorageStatusSummary:
      example:
        shared: 0.08008281904610115
        avail: 2.3021358869347655
        total: 5.962133916683182
        active: 0.6027456183070403
        used: 5.637376656633329
        type: null
        content: content
        enabled: 0.14658129805029452
      properties:
        content:
          type: string
        type:
          $ref: '#/components/schemas/StorageType'
        shared:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        active:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        enabled:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        total:
          type: number
        used:
          type: number
        avail:
          type: number
      type: object
    StorageSummary:
      example:
        server: server
        shared: 0.08008281904610115
        vgname: vgname
        pool: pool
        thinpool: thinpool
        storage: storage
        type: null
        content: content
        mountpoint: mountpoint
        path: path
        nodes: nodes
        digest: digest
        export: export
      properties:
        storage:
          description: The storage class name
          pattern: "^[A-Za-z]+$"
          type: string
        content:
          description: Comma seperated list of content types in storage. Returned
            as a string
          type: string
        server:
          description: The storage server
          type: string
        shared:
          description: Whether the storage is shared
          maximum: 1
          minimum: 0
          type: number
        thinpool:
          type: string
        type:
          $ref: '#/components/schemas/StorageType'
        vgname:
          description: The volume group name
          type: string
        pool:
          type: string
        path:
          description: The storage path
          type: string
        export:
          description: The storage export
          type: string
        mountpoint:
          description: The storage mountpoint
          type: string
        digest:
          description: The storage digest
          type: string
        nodes:
          description: The nodes that have access to this storage
          type: string
      required:
      - storage
      type: object
    StorageTransport:
      enum:
      - tcp
      - rdma
      - unix
      type: string
    StorageType:
      enum:
      - zfspool
      - dir
      - btrfs
      - nfs
      - cifs
      - pbs
      - glusterfs
      - cephfs
      - lvmthin
      - lvm
      - iscsi
      - iscsidirect
      - rbd
      - zfs
      type: string
    StorageVolumeSummary:
      example:
        parent: parent
        notes: notes
        size: 0.8008281904610115
        encrypted: encrypted
        protected: 0.14658129805029452
        vmid: vmid
        format: format
        ctime: 6.027456183070403
        used: 5.962133916683182
        volid: volid
      properties:
        format:
          type: string
        size:
          description: The size of the storage content in bytes.
          type: number
        volid:
          type: string
        ctime:
          description: The creation time of the storage content in seconds since the
            epoch.
          type: number
        encrypted:
          type: string
        notes:
          type: string
        parent:
          type: string
        protected:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        used:
          description: The amount of storage content used in bytes.
          type: number
        vmid:
          description: The id of the virtual machine as a string
          type: string
      required:
      - format
      - size
      - volid
      type: object
    StorageVolumeType:
      enum:
      - raw
      - qcow2
      - subvol
      type: string
    SyncRealmRequestContent:
      example:
        enable-new: 0.6027456183070403
        scope: null
        remove-vanished: remove-vanished
        purge: 0.5962133916683182
        dry-run: 0.08008281904610115
        full: 0.14658129805029452
      properties:
        dry-run:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        enable-new:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        full:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        purge:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        remove-vanished:
          type: string
        scope:
          $ref: '#/components/schemas/RealmSyncScope'
      type: object
    TFAType:
      enum:
      - yubico
      - oauth
      type: string
    Ticket:
      example:
        cap:
          key: null
        ticket: ticket
        clustername: clustername
        CSRFPreventionToken: CSRFPreventionToken
        username: username
      properties:
        username:
          type: string
        cap:
          additionalProperties:
            $ref: '#/components/schemas/CapabilityCategoryMap'
          type: object
        CSRFPreventionToken:
          type: string
        ticket:
          type: string
        clustername:
          type: string
      required:
      - username
      type: object
    TimeZoneSummary:
      example:
        offset: 0.8008281904610115
        zone: zone
      properties:
        zone:
          type: string
        offset:
          type: number
      type: object
    TokenMap:
      additionalProperties:
        $ref: '#/components/schemas/UserConfigurationTokenSummary'
      type: object
    TotemSummary:
      example:
        cluster_name: cluster_name
        link_mode: link_mode
        ip_version: ip_version
        interface:
          key:
            linknumber: linknumber
        version: version
        secauth: secauth
        config_version: config_version
      properties:
        secauth:
          type: string
        version:
          type: string
        interface:
          additionalProperties:
            $ref: '#/components/schemas/LinkSummary'
          type: object
        link_mode:
          type: string
        ip_version:
          type: string
        config_version:
          type: string
        cluster_name:
          type: string
      type: object
    UpdateAccessControlListRequestContent:
      example:
        path: path
        roles: roles
        groups: groups
        propagate: true
        tokens: tokens
        delete: true
        users: users
      properties:
        path:
          type: string
        roles:
          type: string
        delete:
          description: Removed permissions specified in request
          type: boolean
        groups:
          description: Comma separated list of groups
          type: string
        propagate:
          description: Allow propegation of permissions.
          type: boolean
        tokens:
          description: Comma separated list of tokens
          type: string
        users:
          description: Comma separated list of users
          type: string
      required:
      - path
      - roles
      type: object
    UpdateGroupRequestContent:
      example:
        comment: comment
      properties:
        comment:
          type: string
      type: object
    UpdateNetworkInterfaceRequestContent:
      example:
        bridge_ports: bridge_ports
        bond_primary: bond_primary
        bond_mode: null
        type: null
        autostart: true
        delete: delete
        ovs_bridge: ovs_bridge
        bridge_vlan_aware: true
        netmask: netmask
        vlan-raw-device: vlan-raw-device
        address6: address6
        cidr: cidr
        ovs_options: ovs_options
        comments6: comments6
        ovs_ports: ovs_ports
        slaves: slaves
        address: address
        comments: comments
        ovs_bonds: ovs_bonds
        cidr6: cidr6
        mtu: 0.8008281904610115
        vlan-id: 1.4658129805029452
        ovs_tag: 6.027456183070403
        bond_xmit_hash_policy: null
        netmask6: netmask6
        gateway6: gateway6
        gateway: gateway
      properties:
        type:
          $ref: '#/components/schemas/NetworkInterfaceType'
        address:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        address6:
          pattern: "^([a-f0-9:]+:+)+[a-f0-9]+$"
          type: string
        autostart:
          type: boolean
        bond_primary:
          type: string
        bond_mode:
          $ref: '#/components/schemas/NetworkInterfaceBondMode'
        bond_xmit_hash_policy:
          $ref: '#/components/schemas/NetworkInterfaceBondHashPolicy'
        bridge_ports:
          type: string
        bridge_vlan_aware:
          type: boolean
        cidr:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/(3[0-2]|[1-2][0-9]|[0-9])$"
          type: string
        cidr6:
          type: string
        comments:
          type: string
        comments6:
          type: string
        delete:
          type: string
        gateway:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        gateway6:
          pattern: "^([a-f0-9:]+:+)+[a-f0-9]+$"
          type: string
        mtu:
          type: number
        netmask:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
        netmask6:
          type: string
        ovs_bonds:
          type: string
        ovs_options:
          type: string
        ovs_ports:
          type: string
        ovs_tag:
          type: number
        ovs_bridge:
          type: string
        slaves:
          type: string
        vlan-id:
          type: number
        vlan-raw-device:
          type: string
      required:
      - type
      type: object
    UpdateRealmRequestContent:
      example:
        bind_dn: bind_dn
        group_classes: group_classes
        cert: cert
        sync_attributes: sync_attributes
        secure: 0.23021358869347652
        server2: server2
        delete: 0.14658129805029452
        server1: server1
        mode: null
        user_attr: user_attr
        default: 0.5962133916683182
        password: password
        base_dn: base_dn
        group_filter: group_filter
        digest: digest
        sync-defaults-options: sync-defaults-options
        verify: 0.7061401241503109
        client-id: client-id
        case-sensitive: 0.6027456183070403
        user_classes: user_classes
        sslversion: null
        certkey: certkey
        group_dn: group_dn
        issuer-url: issuer-url
        tfa: tfa
        filter: filter
        port: 5.637376656633329
        autocreate: 0.08008281904610115
        domain: domain
        capath: capath
        client-key: client-key
        comment: comment
        group_name_attr: group_name_attr
        scopes: scopes
        prompt: prompt
      properties:
        autocreate:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        base_dn:
          type: string
        bind_dn:
          type: string
        capath:
          type: string
        case-sensitive:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        cert:
          type: string
        certkey:
          type: string
        client-id:
          type: string
        client-key:
          type: string
        comment:
          type: string
        delete:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        digest:
          type: string
        default:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        domain:
          type: string
        filter:
          type: string
        group_classes:
          type: string
        group_filter:
          type: string
        group_dn:
          type: string
        group_name_attr:
          type: string
        issuer-url:
          type: string
        mode:
          $ref: '#/components/schemas/RealmMode'
        password:
          type: string
        port:
          type: number
        prompt:
          type: string
        scopes:
          type: string
        secure:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        server1:
          type: string
        server2:
          type: string
        sslversion:
          $ref: '#/components/schemas/RealmSslVersion'
        sync-defaults-options:
          type: string
        sync_attributes:
          type: string
        tfa:
          type: string
        user_attr:
          type: string
        user_classes:
          type: string
        verify:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      type: object
    UpdateStorageVolumeRequestContent:
      example:
        notes: notes
        protected: 0.08008281904610115
      properties:
        notes:
          description: New notes for the volume
          type: string
        protected:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      required:
      - protected
      type: object
    UpdateSummary:
      example:
        Origin: Origin
        Description: Description
        Version: Version
        ChangeLogUrl: ChangeLogUrl
        Priority: Priority
        Title: Title
        Arch: Arch
        OldVersion: OldVersion
        Package: Package
        Section: Section
      properties:
        Title:
          type: string
        ChangeLogUrl:
          type: string
        Priority:
          type: string
        OldVersion:
          type: string
        Description:
          type: string
        Arch:
          type: string
        Package:
          type: string
        Section:
          type: string
        Version:
          type: string
        Origin:
          type: string
      required:
      - Arch
      - ChangeLogUrl
      - Description
      - OldVersion
      - Origin
      - Package
      - Priority
      - Section
      - Title
      - Version
      type: object
    UploadContentType:
      enum:
      - iso
      - vztmpl
      type: string
    UploadToStorageRequestContent:
      example:
        filename: filename
        tmpfilename: tmpfilename
        checksum: checksum
        checksum-algorithm: null
        content: null
      properties:
        content:
          $ref: '#/components/schemas/UploadContentType'
        filename:
          description: The name of the file to create.
          type: string
        checksum:
          description: The expceted checksum of the file.
          type: string
        checksum-algorithm:
          $ref: '#/components/schemas/ChecksumAlgorithm'
        tmpfilename:
          description: The source filename.
          type: string
      required:
      - content
      - filename
      type: object
    UploadToStorageResponseContent:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    UsbDeviceSummary:
      example:
        product: product
        level: 1.4658129805029452
        port: 5.962133916683182
        serial: serial
        usbpath: usbpath
        busnum: 0.8008281904610115
        devnum: 6.027456183070403
        prodid: prodid
        vendid: vendid
        speed: speed
        manufacturer: manufacturer
      properties:
        busnum:
          type: number
        devnum:
          type: number
        level:
          type: number
        port:
          type: number
        prodid:
          type: string
        vendid:
          type: string
        speed:
          type: string
        manufacturer:
          type: string
        product:
          type: string
        serial:
          type: string
        usbpath:
          type: string
      required:
      - busnum
      - devnum
      - level
      - port
      - prodid
      - speed
      - vendid
      type: object
    UserConfigurationSummary:
      example:
        firstname: firstname
        enable: 0.08008281904610115
        keys: keys
        expire: 6.027456183070403
        groups:
        - groups
        - groups
        comment: comment
        tokens:
          key:
            expire: 5.962133916683182
            comment: comment
            privsep: 0.14658129805029452
        email: email
        lastname: lastname
      properties:
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        enable:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        comment:
          type: string
        groups:
          items:
            type: string
          type: array
        keys:
          type: string
        expire:
          type: number
        tokens:
          additionalProperties:
            $ref: '#/components/schemas/UserConfigurationTokenSummary'
          type: object
      type: object
    UserConfigurationTokenSummary:
      example:
        expire: 5.962133916683182
        comment: comment
        privsep: 0.14658129805029452
      properties:
        privsep:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        expire:
          type: number
        comment:
          type: string
      type: object
    UserSummary:
      example:
        realm-type: realm-type
        firstname: firstname
        enable: 0.08008281904610115
        expire: 6.027456183070403
        groups: groups
        comment: comment
        tokens:
        - tokenid: tokenid
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
        - tokenid: tokenid
          expire: 5.962133916683182
          comment: comment
          privsep: 0.14658129805029452
        userid: userid
        email: email
        lastname: lastname
      properties:
        userid:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        enable:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        comment:
          type: string
        groups:
          type: string
        expire:
          type: number
        realm-type:
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/UserTokenSummary'
          type: array
      required:
      - userid
      type: object
    UserTokenSummary:
      example:
        tokenid: tokenid
        expire: 5.962133916683182
        comment: comment
        privsep: 0.14658129805029452
      properties:
        tokenid:
          type: string
        privsep:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        expire:
          type: number
        comment:
          type: string
      required:
      - tokenid
      type: object
    VcpuSummary:
      example:
        can-offline: true
        logical-id: 0.8008281904610115
        online: true
      properties:
        online:
          type: boolean
        can-offline:
          type: boolean
        logical-id:
          type: number
      type: object
    VersionSummary:
      example:
        repoid: repoid
        release: release
        version: version
      properties:
        version:
          type: string
        release:
          type: string
        repoid:
          type: string
      required:
      - release
      - repoid
      - version
      type: object
    VirtualMachineArchitecture:
      enum:
      - x86_64
      - aarch64
      type: string
    VirtualMachineBalloonSummary:
      example:
        free_mem: 9.369310271410669
        actual: 6.438423552598547
        mem_swapped_out: 6.683562403749608
        major_page_faults: 1.284659006116532
        total_mem: 9.018348186070783
        last_update: 3.5571952270680973
        mem_swapped_in: 8.762042012749001
        minor_page_faults: 6.965117697638846
        max_mem: 9.965781217890562
      properties:
        max_mem:
          type: number
        free_mem:
          type: number
        mem_swapped_out:
          type: number
        mem_swapped_in:
          type: number
        total_mem:
          type: number
        actual:
          type: number
        last_update:
          type: number
        minor_page_faults:
          type: number
        major_page_faults:
          type: number
      type: object
    VirtualMachineBios:
      enum:
      - seabios
      - ovmf
      type: string
    VirtualMachineCloudInitType:
      enum:
      - configdrive2
      - nocloud
      - opennebula
      type: string
    VirtualMachineConfigLock:
      enum:
      - backup
      - clone
      - create
      - migrate
      - rollback
      - snapshot
      - snapshot-delete
      - suspending
      - suspended
      type: string
    VirtualMachineConfigurationSummary:
      description: The virtual machine configuration.
      example:
        net0: net0
        usb13: usb13
        usb14: usb14
        usb8: usb8
        usb11: usb11
        cipassword: cipassword
        usb9: usb9
        usb12: usb12
        net4: net4
        usb6: usb6
        net3: net3
        usb7: usb7
        usb10: usb10
        net2: net2
        usb4: usb4
        net1: net1
        usb5: usb5
        net7: net7
        net6: net6
        net5: net5
        autostart: 0.6027456183070403
        startdate: startdate
        smbios1: smbios1
        tablet: 0.4965218492984954
        cores: 5.962133916683182
        freeze: true
        usb2: usb2
        lock: null
        usb3: usb3
        usb0: usb0
        sockets: 1.1730742509559433
        usb1: usb1
        ivshmem: ivshmem
        virtio13: virtio13
        virtio12: virtio12
        tpmstate0: tpmstate0
        virtio15: virtio15
        keephugepages: 0.7061401241503109
        virtio14: virtio14
        virtio11: virtio11
        tags: tags
        virtio10: virtio10
        meta: meta
        efidisk0: efidisk0
        affinity: affinity
        audio0: audio0
        template: 0.5025004791520294
        bios: null
        protection: 0.14894159098541704
        citype: null
        cicustom: cicustom
        shares: 7.457744773683766
        digest: digest
        ipconfig0: ipconfig0
        spice_enhancements: spice_enhancements
        kvm: 0.9301444243932576
        migrate_speed: 7.386281948385884
        scsi30: scsi30
        ipconfig7: ipconfig7
        sshkeys: sshkeys
        ipconfig5: ipconfig5
        ipconfig6: ipconfig6
        ipconfig3: ipconfig3
        cdrom: cdrom
        ipconfig4: ipconfig4
        ipconfig1: ipconfig1
        ipconfig2: ipconfig2
        watchdog: watchdog
        machine: machine
        parallel2: parallel2
        parallel1: parallel1
        parallel0: parallel0
        arch: null
        localtime: 0.3616076749251911
        scsi22: scsi22
        serial1: serial1
        scsi23: scsi23
        serial0: serial0
        agent: agent
        scsi20: scsi20
        serial3: serial3
        scsi21: scsi21
        serial2: serial2
        searchdomain: searchdomain
        scsi28: scsi28
        cpulimit: 5.637376656633329
        scsi29: scsi29
        scsi26: scsi26
        bootdisk: bootdisk
        scsi27: scsi27
        scsi24: scsi24
        scsi25: scsi25
        startup: startup
        migrate_downtime: 4.145608
        scsi11: scsi11
        scsi12: scsi12
        scsi10: scsi10
        numa: 0.12315135367772556
        scsi19: scsi19
        cpu: cpu
        scsi17: scsi17
        scsi18: scsi18
        scsi15: scsi15
        scsi16: scsi16
        scsi13: scsi13
        scsi14: scsi14
        virtio3: virtio3
        numa0: numa0
        virtio4: virtio4
        numa1: numa1
        virtio5: virtio5
        numa2: numa2
        virtio6: virtio6
        virtio7: virtio7
        virtio8: virtio8
        acpi: 0.08008281904610115
        virtio9: virtio9
        name: name
        numa7: numa7
        nameserver: nameserver
        numa3: numa3
        numa4: numa4
        virtio0: virtio0
        numa5: numa5
        virtio1: virtio1
        numa6: numa6
        virtio2: virtio2
        memory: 2.027123023002322
        scsi1: scsi1
        description: description
        scsi0: scsi0
        scsi5: scsi5
        scsi4: scsi4
        scsi3: scsi3
        scsi2: scsi2
        rng0: rng0
        scsi9: scsi9
        scsi8: scsi8
        vga: vga
        vmstatestorage: vmstatestorage
        scsi7: scsi7
        hotplug: hotplug
        scsi6: scsi6
        scsihw: null
        sata1: sata1
        sata2: sata2
        sata0: sata0
        sata5: sata5
        ballon: 1.4658129805029452
        sata3: sata3
        sata4: sata4
        boot: boot
        cpuunits: 2.3021358869347655
        ciuser: ciuser
        hostpci0: hostpci0
        reboot: 0.684685269835264
        hostpci1: hostpci1
        keyboard: null
        hostpci4: hostpci4
        hostpci5: hostpci5
        hostpci2: hostpci2
        hostpci3: hostpci3
        hostpci8: hostpci8
        hostpci9: hostpci9
        hostpci6: hostpci6
        hookscript: hookscript
        hostpci7: hostpci7
        ostype: null
        vcpus: 9.965781217890562
        vmgenid: vmgenid
        args: args
        hugepages: null
        ide1: ide1
        ide0: ide0
        onboot: 0.10246457001441578
        ide3: ide3
        ide2: ide2
      properties:
        digest:
          description: SHA1 digest of the current configuration.
          type: string
        acpi:
          description: Enable ACPI support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        affinity:
          description: "List of cores to execute processes. Example value: 1,5,8-11."
          type: string
        agent:
          description: The QEMU agent and its configuration.
          type: string
        arch:
          $ref: '#/components/schemas/VirtualMachineArchitecture'
        args:
          description: Additional command line arguments passed to the kvm.
          type: string
        audio0:
          description: The audio device and its configuration.
          type: string
        autostart:
          description: Start the virtual machine on node boot.
          maximum: 1
          minimum: 0
          type: number
        ballon:
          description: Amount of RAM for the VM in MB.
          type: number
        boot:
          description: The boot order of the virtual machine.
          type: string
        bootdisk:
          description: The boot disk of the virtual machine.
          type: string
        meta:
          description: The meta data of the virtual machine.
          type: string
        cdrom:
          description: The CD-ROM device and its configuration. An alias for option
            ide2
          type: string
        cicustom:
          description: Specify custom cloud-init files to be used at start.
          type: string
        cipassword:
          description: The password for the cloud-init user.
          type: string
        citype:
          $ref: '#/components/schemas/VirtualMachineCloudInitType'
        ciuser:
          description: The cloud-init user.
          type: string
        cores:
          description: Number of cores per socket.
          type: number
        bios:
          $ref: '#/components/schemas/VirtualMachineBios'
        cpu:
          description: The CPU type.
          type: string
        cpulimit:
          description: CPU usage limit.
          type: number
        cpuunits:
          description: "CPU weight for a VM. The higher the value, the more CPU time\
            \ the VM gets."
          type: number
        description:
          description: The description of the virtual machine.
          type: string
        efidisk0:
          description: The EFI disk device and its configuration.
          type: string
        freeze:
          description: Freeze the CPU at virtual machine start.
          type: boolean
        hookscript:
          description: The hook script that is used at various point in the virtual
            machines lifecycle.
          type: string
        hostpci0:
          description: The host PCI device and its configuration.
          type: string
        hostpci1:
          description: The host PCI device and its configuration.
          type: string
        hostpci2:
          description: The host PCI device and its configuration.
          type: string
        hostpci3:
          description: The host PCI device and its configuration.
          type: string
        hostpci4:
          description: The host PCI device and its configuration.
          type: string
        hostpci5:
          description: The host PCI device and its configuration.
          type: string
        hostpci6:
          description: The host PCI device and its configuration.
          type: string
        hostpci7:
          description: The host PCI device and its configuration.
          type: string
        hostpci8:
          description: The host PCI device and its configuration.
          type: string
        hostpci9:
          description: The host PCI device and its configuration.
          type: string
        hugepages:
          $ref: '#/components/schemas/VirtualMachineHugePages'
        ide0:
          description: Volume used as IDE or harddisk.
          type: string
        ide1:
          description: Volume used as IDE or harddisk.
          type: string
        ide2:
          description: Volume used as IDE or harddisk.
          type: string
        ide3:
          description: Volume used as IDE or harddisk.
          type: string
        ipconfig0:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig1:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig2:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig3:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig4:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig5:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig6:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ipconfig7:
          description: "The ip address and gateways for the interface. Ip addresses\
            \ are in CIDR format. Example value: ip=10.0.100.101/24,gw=10.0.100.1"
          type: string
        ivshmem:
          description: Inter VM-shared memory.
          type: string
        keephugepages:
          description: Keep hugepages after shutdown.
          maximum: 1
          minimum: 0
          type: number
        keyboard:
          $ref: '#/components/schemas/VirtualMachineKeyboard'
        kvm:
          description: Enable KVM support. Default to enabled.
          maximum: 1
          minimum: 0
          type: number
        localtime:
          description: Set the real time clock to local time.
          maximum: 1
          minimum: 0
          type: number
        lock:
          $ref: '#/components/schemas/VirtualMachineConfigLock'
        machine:
          description: The machine type.
          type: string
        memory:
          description: The amount of memory in MB.
          type: number
        migrate_downtime:
          description: The maximum tolerated downtime in seconds during migration.
          format: float
          type: number
        migrate_speed:
          description: The maximum speed in MB/s during migration. 0 is no limit
          type: number
        name:
          description: The name of the virtual machine.
          type: string
        nameserver:
          description: The nameserver for the virtual machine.
          type: string
        net0:
          description: The network interface and its configuration.
          type: string
        net1:
          description: The network interface and its configuration.
          type: string
        net2:
          description: The network interface and its configuration.
          type: string
        net3:
          description: The network interface and its configuration.
          type: string
        net4:
          description: The network interface and its configuration.
          type: string
        net5:
          description: The network interface and its configuration.
          type: string
        net6:
          description: The network interface and its configuration.
          type: string
        net7:
          description: The network interface and its configuration.
          type: string
        numa:
          description: Enable NUMA support. Default to disabled.
          maximum: 1
          minimum: 0
          type: number
        numa0:
          description: NUMA topology.
          type: string
        numa1:
          description: NUMA topology.
          type: string
        numa2:
          description: NUMA topology.
          type: string
        numa3:
          description: NUMA topology.
          type: string
        numa4:
          description: NUMA topology.
          type: string
        numa5:
          description: NUMA topology.
          type: string
        numa6:
          description: NUMA topology.
          type: string
        numa7:
          description: NUMA topology.
          type: string
        onboot:
          description: Start the virtual machine on boot.
          maximum: 1
          minimum: 0
          type: number
        ostype:
          $ref: '#/components/schemas/VirtualMachineOperatingSystem'
        parallel0:
          description: Host parallel device.
          type: string
        parallel1:
          description: Host parallel device.
          type: string
        parallel2:
          description: Host parallel device.
          type: string
        protection:
          description: The protection flag on the virtual machine. Disables remove
            VM and disk operations.
          maximum: 1
          minimum: 0
          type: number
        reboot:
          description: Allows reboot. False will have the virtual machine exit on
            reboot.
          maximum: 1
          minimum: 0
          type: number
        rng0:
          description: Virtio based random number generator.
          type: string
        sata0:
          description: Uses the volume as a sata disk.
          type: string
        sata1:
          description: Uses the volume as a sata disk.
          type: string
        sata2:
          description: Uses the volume as a sata disk.
          type: string
        sata3:
          description: Uses the volume as a sata disk.
          type: string
        sata4:
          description: Uses the volume as a sata disk.
          type: string
        sata5:
          description: Uses the volume as a sata disk.
          type: string
        scsi0:
          description: Uses the volume as a scsi disk.
          type: string
        scsi1:
          description: Uses the volume as a scsi disk.
          type: string
        scsi2:
          description: Uses the volume as a scsi disk.
          type: string
        scsi3:
          description: Uses the volume as a scsi disk.
          type: string
        scsi4:
          description: Uses the volume as a scsi disk.
          type: string
        scsi5:
          description: Uses the volume as a scsi disk.
          type: string
        scsi6:
          description: Uses the volume as a scsi disk.
          type: string
        scsi7:
          description: Uses the volume as a scsi disk.
          type: string
        scsi8:
          description: Uses the volume as a scsi disk.
          type: string
        scsi9:
          description: Uses the volume as a scsi disk.
          type: string
        scsi10:
          description: Uses the volume as a scsi disk.
          type: string
        scsi11:
          description: Uses the volume as a scsi disk.
          type: string
        scsi12:
          description: Uses the volume as a scsi disk.
          type: string
        scsi13:
          description: Uses the volume as a scsi disk.
          type: string
        scsi14:
          description: Uses the volume as a scsi disk.
          type: string
        scsi15:
          description: Uses the volume as a scsi disk.
          type: string
        scsi16:
          description: Uses the volume as a scsi disk.
          type: string
        scsi17:
          description: Uses the volume as a scsi disk.
          type: string
        scsi18:
          description: Uses the volume as a scsi disk.
          type: string
        scsi19:
          description: Uses the volume as a scsi disk.
          type: string
        scsi20:
          description: Uses the volume as a scsi disk.
          type: string
        scsi21:
          description: Uses the volume as a scsi disk.
          type: string
        scsi22:
          description: Uses the volume as a scsi disk.
          type: string
        scsi23:
          description: Uses the volume as a scsi disk.
          type: string
        scsi24:
          description: Uses the volume as a scsi disk.
          type: string
        scsi25:
          description: Uses the volume as a scsi disk.
          type: string
        scsi26:
          description: Uses the volume as a scsi disk.
          type: string
        scsi27:
          description: Uses the volume as a scsi disk.
          type: string
        scsi28:
          description: Uses the volume as a scsi disk.
          type: string
        scsi29:
          description: Uses the volume as a scsi disk.
          type: string
        scsi30:
          description: Uses the volume as a scsi disk.
          type: string
        scsihw:
          $ref: '#/components/schemas/VirtualMachineScsiControllerType'
        searchdomain:
          description: Cloudinit search domain.
          type: string
        serial0:
          description: A serial device on the virtual machine.
          type: string
        serial1:
          description: A serial device on the virtual machine.
          type: string
        serial2:
          description: A serial device on the virtual machine.
          type: string
        serial3:
          description: A serial device on the virtual machine.
          type: string
        shares:
          description: The amount of memory shares for autoballooning.
          type: number
        smbios1:
          description: SMBIOS type 1 field.
          type: string
        sockets:
          description: The number of cpu sockets.
          type: number
        spice_enhancements:
          description: Enable spice enhancements.
          type: string
        sshkeys:
          description: Cloud init SSH public keys. One per line.
          type: string
        startdate:
          description: The start date for the virtual machine real time clock.
          type: string
        startup:
          description: The startup policy for the virtual machine.
          type: string
        tablet:
          description: Enable tablet device.
          maximum: 1
          minimum: 0
          type: number
        tags:
          description: The tags for the virtual machine.
          type: string
        template:
          description: If the virtual machine is a template or not.
          maximum: 1
          minimum: 0
          type: number
        tpmstate0:
          description: Configure a disk for storing TPM state.
          type: string
        usb0:
          description: A usb device on the virtual machine.
          type: string
        usb1:
          description: A usb device on the virtual machine.
          type: string
        usb2:
          description: A usb device on the virtual machine.
          type: string
        usb3:
          description: A usb device on the virtual machine.
          type: string
        usb4:
          description: A usb device on the virtual machine.
          type: string
        usb5:
          description: A usb device on the virtual machine.
          type: string
        usb6:
          description: A usb device on the virtual machine.
          type: string
        usb7:
          description: A usb device on the virtual machine.
          type: string
        usb8:
          description: A usb device on the virtual machine.
          type: string
        usb9:
          description: A usb device on the virtual machine.
          type: string
        usb10:
          description: A usb device on the virtual machine.
          type: string
        usb11:
          description: A usb device on the virtual machine.
          type: string
        usb12:
          description: A usb device on the virtual machine.
          type: string
        usb13:
          description: A usb device on the virtual machine.
          type: string
        usb14:
          description: A usb device on the virtual machine.
          type: string
        hotplug:
          description: Hotplug devices.
          type: string
        vcpus:
          description: The number of hotplugged virtual cpus.
          type: number
        vga:
          description: Configuration for the VGA hardware.
          type: string
        virtio0:
          description: Uses the volume as a virtio disk.
          type: string
        virtio1:
          description: Uses the volume as a virtio disk.
          type: string
        virtio2:
          description: Uses the volume as a virtio disk.
          type: string
        virtio3:
          description: Uses the volume as a virtio disk.
          type: string
        virtio4:
          description: Uses the volume as a virtio disk.
          type: string
        virtio5:
          description: Uses the volume as a virtio disk.
          type: string
        virtio6:
          description: Uses the volume as a virtio disk.
          type: string
        virtio7:
          description: Uses the volume as a virtio disk.
          type: string
        virtio8:
          description: Uses the volume as a virtio disk.
          type: string
        virtio9:
          description: Uses the volume as a virtio disk.
          type: string
        virtio10:
          description: Uses the volume as a virtio disk.
          type: string
        virtio11:
          description: Uses the volume as a virtio disk.
          type: string
        virtio12:
          description: Uses the volume as a virtio disk.
          type: string
        virtio13:
          description: Uses the volume as a virtio disk.
          type: string
        virtio14:
          description: Uses the volume as a virtio disk.
          type: string
        virtio15:
          description: Uses the volume as a virtio disk.
          type: string
        vmgenid:
          description: Enable VM generation id seed.
          type: string
        vmstatestorage:
          description: Default location for storing VM state.
          type: string
        watchdog:
          description: The watchdog device for the virtual machine.
          type: string
      required:
      - digest
      type: object
    VirtualMachineDiskTarget:
      enum:
      - ide0
      - ide1
      - ide2
      - ide3
      - scsi0
      - scsi1
      - scsi2
      - scsi3
      - scsi4
      - scsi5
      - scsi6
      - scsi7
      - scsi8
      - scsi9
      - scsi10
      - scsi11
      - scsi12
      - scsi13
      - scsi14
      - scsi15
      - scsi16
      - scsi17
      - scsi18
      - scsi19
      - scsi20
      - scsi21
      - scsi22
      - scsi23
      - scsi24
      - scsi25
      - scsi26
      - scsi27
      - scsi28
      - scsi29
      - scsi30
      - virtio0
      - virtio1
      - virtio2
      - virtio3
      - virtio4
      - virtio5
      - virtio6
      - virtio7
      - virtio8
      - virtio9
      - virtio10
      - virtio11
      - virtio12
      - virtio13
      - virtio14
      - virtio15
      - sata0
      - sata1
      - sata2
      - sata3
      - sata4
      - sata5
      - efidisk0
      - tpmstate0
      type: string
    VirtualMachineExecuteCommandRequestContent:
      example:
        input-data: input-data
        command: command
      properties:
        command:
          type: string
        input-data:
          type: string
      type: object
    VirtualMachineExecuteCommandResponseContent:
      example:
        data:
          pid: 0.8008281904610115
      properties:
        data:
          $ref: '#/components/schemas/ExecuteCommandResponse'
      required:
      - data
      type: object
    VirtualMachineFeatureSupportSummary:
      example:
        nodes:
        - nodes
        - nodes
        hasFeature: 0.08008281904610115
      properties:
        hasFeature:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        nodes:
          items:
            pattern: "^[A-Za-z]+$"
            type: string
          type: array
      required:
      - hasFeature
      - nodes
      type: object
    VirtualMachineHighAvailabilityStatus:
      example:
        managed: 0.08008281904610115
      properties:
        managed:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
      required:
      - managed
      type: object
    VirtualMachineHugePages:
      enum:
      - any
      - "2"
      - "1024"
      type: string
    VirtualMachineKeyboard:
      enum:
      - de
      - de-ch
      - da
      - en-gb
      - en-us
      - es
      - fi
      - fr
      - fr-be
      - fr-ch
      - fr-ca
      - hu
      - is
      - it
      - ja
      - lt
      - mk
      - nl
      - "no"
      - pl
      - pt
      - pt-br
      - sv
      - sl
      - tr
      type: string
    VirtualMachineNicBlockStatistics:
      example:
        flush_total_time_ns: 2.8841621266687802
        rd_operations: 3.2588565619047607
        timed_stats:
        - timed_stats
        - timed_stats
        invalid_unmap_operations: 0.2025324113236393
        failed_unmap_operations: 4.258773108174356
        wr_highest_offset: 6.878052220127876
        unmap_total_time_ns: 4.078845849666752
        wr_total_time_ns: 3.0205796992916243
        unmap_operations: 7.740351818741173
        account_failed: true
        wr_merged: 7.143538047012306
        rd_total_time_ns: 5.944895607614016
        idle_time_ns: 3.0937452626664474
        invalid_rd_operations: 0.8851374739011653
        failed_rd_operations: 0.10263654006109402
        invalid_flush_operations: 8.969578798196912
        failed_flush_operations: 7.058770351582356
        unmap_merged: 7.04836565559697
        wr_bytes: 4.652396432933246
        rd_bytes: 6.778324963048013
        wr_operations: 3.353193347011243
        invalid_wr_operations: 5.533258397034986
        unmap_bytes: 6.519180951018382
        failed_wr_operations: 3.0576100241049344
        account_invalid: true
        flush_operations: 6.704019297950036
        rd_merged: 6.628464275087742
      properties:
        flush_total_time_ns:
          type: number
        rd_bytes:
          type: number
        timed_stats:
          items:
            type: string
          type: array
        wr_highest_offset:
          type: number
        rd_total_time_ns:
          type: number
        flush_operations:
          type: number
        wr_operations:
          type: number
        idle_time_ns:
          type: number
        wr_merged:
          type: number
        invalid_rd_operations:
          type: number
        failed_flush_operations:
          type: number
        unmap_bytes:
          type: number
        failed_rd_operations:
          type: number
        wr_bytes:
          type: number
        invalid_flush_operations:
          type: number
        unmap_operations:
          type: number
        wr_total_time_ns:
          type: number
        failed_wr_operations:
          type: number
        unmap_merged:
          type: number
        invalid_wr_operations:
          type: number
        rd_operations:
          type: number
        unmap_total_time_ns:
          type: number
        invalid_unmap_operations:
          type: number
        account_failed:
          type: boolean
        account_invalid:
          type: boolean
        rd_merged:
          type: number
        failed_unmap_operations:
          type: number
      type: object
    VirtualMachineNicBlockStatisticsMap:
      additionalProperties:
        $ref: '#/components/schemas/VirtualMachineNicBlockStatistics'
      type: object
    VirtualMachineNicStatus:
      example:
        netout: 5.025004791520295
        netin: 4.965218492984954
      properties:
        netin:
          type: number
        netout:
          type: number
      type: object
    VirtualMachineNicStatusMap:
      additionalProperties:
        $ref: '#/components/schemas/VirtualMachineNicStatus'
      type: object
    VirtualMachineOperatingSystem:
      enum:
      - other
      - wxp
      - w2k3
      - w2k
      - w2k8
      - wvista
      - w7
      - w8
      - w10
      - w11
      - l24
      - l26
      - solaris
      type: string
    VirtualMachineReadFileResponseContent:
      example:
        data:
          truncated: 0.08008281904610115
          content: content
      properties:
        data:
          $ref: '#/components/schemas/FileReadSummary'
      required:
      - data
      type: object
    VirtualMachineScsiControllerType:
      enum:
      - lsi
      - lsi53c810
      - virtio-scsi-pci
      - megasas
      - pvscsi
      type: string
    VirtualMachineStatus:
      enum:
      - running
      - stopped
      type: string
    VirtualMachineStatusSummary:
      example:
        agent: 0.14658129805029452
        spice: 0.9301444243932576
        diskread: 7.457744773683766
        pid: 7.061401241503109
        mem: 4.145608029883936
        maxdisk: 5.637376656633329
        running-qemu: running-qemu
        nics:
          key:
            netout: 5.025004791520295
            netin: 4.965218492984954
        lock: lock
        qmpstatus: qmpstatus
        balloon: 7.386281948385884
        vmid: 6.027456183070403
        cpus: 5.962133916683182
        running-machine: running-machine
        ballooninfo:
          free_mem: 9.369310271410669
          actual: 6.438423552598547
          mem_swapped_out: 6.683562403749608
          major_page_faults: 1.284659006116532
          total_mem: 9.018348186070783
          last_update: 3.5571952270680973
          mem_swapped_in: 8.762042012749001
          minor_page_faults: 6.965117697638846
          max_mem: 9.965781217890562
        proxmox-support:
          pbs-dirty-bitmap-migration: true
          query-bitmap-info: true
          pbs-masterkey: true
          backup-max-workers: true
          pbs-dirty-bitmap: true
          pbs-dirty-bitmap-savevm: true
          pbs-library-version: pbs-library-version
        cpu: 2.027123
        netout: 1.4894159098541704
        freemem: 1.1730742509559433
        tags: tags
        uptime: 3.616076749251911
        blockstat:
          key:
            flush_total_time_ns: 2.8841621266687802
            rd_operations: 3.2588565619047607
            timed_stats:
            - timed_stats
            - timed_stats
            invalid_unmap_operations: 0.2025324113236393
            failed_unmap_operations: 4.258773108174356
            wr_highest_offset: 6.878052220127876
            unmap_total_time_ns: 4.078845849666752
            wr_total_time_ns: 3.0205796992916243
            unmap_operations: 7.740351818741173
            account_failed: true
            wr_merged: 7.143538047012306
            rd_total_time_ns: 5.944895607614016
            idle_time_ns: 3.0937452626664474
            invalid_rd_operations: 0.8851374739011653
            failed_rd_operations: 0.10263654006109402
            invalid_flush_operations: 8.969578798196912
            failed_flush_operations: 7.058770351582356
            unmap_merged: 7.04836565559697
            wr_bytes: 4.652396432933246
            rd_bytes: 6.778324963048013
            wr_operations: 3.353193347011243
            invalid_wr_operations: 5.533258397034986
            unmap_bytes: 6.519180951018382
            failed_wr_operations: 3.0576100241049344
            account_invalid: true
            flush_operations: 6.704019297950036
            rd_merged: 6.628464275087742
        disk: 1.2315135367772556
        name: name
        ha:
          managed: 0.08008281904610115
        maxmem: 2.3021358869347655
        diskwrite: 6.84685269835264
        status: null
        netin: 1.0246457001441578
      properties:
        status:
          $ref: '#/components/schemas/VirtualMachineStatus'
        ha:
          $ref: '#/components/schemas/VirtualMachineHighAvailabilityStatus'
        vmid:
          description: The id of the virtual machine as an integer
          type: number
        agent:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        cpus:
          type: number
        lock:
          type: string
        maxdisk:
          type: number
        maxmem:
          type: number
        name:
          type: string
        pid:
          type: number
        qmpstatus:
          type: string
        running-machine:
          type: string
        running-qemu:
          type: string
        spice:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        tags:
          type: string
        uptime:
          type: number
        cpu:
          format: float
          type: number
        mem:
          type: number
        balloon:
          type: number
        disk:
          type: number
        netin:
          type: number
        netout:
          type: number
        diskwrite:
          type: number
        diskread:
          type: number
        freemem:
          type: number
        nics:
          additionalProperties:
            $ref: '#/components/schemas/VirtualMachineNicStatus'
          type: object
        ballooninfo:
          $ref: '#/components/schemas/VirtualMachineBalloonSummary'
        blockstat:
          additionalProperties:
            $ref: '#/components/schemas/VirtualMachineNicBlockStatistics'
          type: object
        proxmox-support:
          $ref: '#/components/schemas/ProxmoxSupportSummary'
      required:
      - ha
      - status
      - vmid
      type: object
    VirtualMachineSummary:
      example:
        template: 0.6027456183070403
        vmid: 0.8008281904610115
        cpus: 7.386281948385884
        diskread: 3.616076749251911
        cpu: 4.145608
        pid: 1.2315135367772556
        netout: 9.301444243932576
        uptime: 2.3021358869347655
        tags: tags
        mem: 1.4658129805029452
        maxdisk: 5.637376656633329
        name: name
        lock: lock
        qmpstatus: qmpstatus
        maxmem: 5.962133916683182
        diskwrite: 2.027123023002322
        status: null
        netin: 7.061401241503109
      properties:
        vmid:
          description: The ID of the virtual machine. Unique across cluster
          type: number
        status:
          $ref: '#/components/schemas/VirtualMachineStatus'
        template:
          description: "An integer used to represent a boolean. 0 is false, 1 is true."
          maximum: 1
          minimum: 0
          type: number
        mem:
          description: Current memory utilization in bytes
          type: number
        maxmem:
          description: Max memory allocated in bytes
          type: number
        maxdisk:
          description: Max root disk size in bytes
          type: number
        name:
          description: The name of the virtual machine
          type: string
        uptime:
          description: The uptime of the virtual machine in seconds
          type: number
        netin:
          description: Current incoming network traffic in bytes
          type: number
        netout:
          description: Current outgoing network traffic in bytes
          type: number
        diskread:
          description: Current disk read in bytes
          type: number
        diskwrite:
          description: Current disk write in bytes
          type: number
        cpu:
          description: The virtual machines cpu utilization in percent
          format: float
          type: number
        cpus:
          description: Amount of CPU cores allocated to the virtual machine
          type: number
        pid:
          description: PID of the qemu process on the host node
          type: number
        tags:
          description: Tags assigned to the virtual machine. Comma separated list
            of tags returned as a string.
          type: string
        lock:
          description: The current configuration lock
          type: string
        qmpstatus:
          description: Qemu QMP agent status
          type: string
      required:
      - status
      - vmid
      type: object
    VirtualMachineWriteFileRequestContent:
      example:
        file: file
        content: content
      properties:
        file:
          type: string
        content:
          type: string
      required:
      - content
      - file
      type: object
    VirtualNetworkInterfaceSummary:
      example:
        name: name
        ip-addresses:
        - ip-address: ip-address
          ip-address-type: ip-address-type
          prefix: 3.616076749251911
        - ip-address: ip-address
          ip-address-type: ip-address-type
          prefix: 3.616076749251911
        hardware-address: hardware-address
        statistics:
          rx-errs: 1.4658129805029452
          tx-errs: 7.061401241503109
          rx-packets: 5.962133916683182
          tx-packets: 9.301444243932576
          tx-bytes: 5.637376656633329
          rx-dropped: 6.027456183070403
          rx-bytes: 0.8008281904610115
          tx-dropped: 2.3021358869347655
      properties:
        name:
          type: string
        statistics:
          $ref: '#/components/schemas/NetworkInterfaceStatisticsSummary'
        ip-addresses:
          items:
            $ref: '#/components/schemas/NetworkInterfaceIpAddressSummary'
          type: array
        hardware-address:
          type: string
      type: object
    ZFSCompression:
      enum:
      - "on"
      - "off"
      - lz4
      - lzjb
      - gzip
      - zle
      - zstd
      type: string
    ZFSPoolStatusChild:
      example:
        msg: msg
        read: 6.027456183070403
        children:
        - null
        - null
        cksum: 0.8008281904610115
        name: name
        state: state
        write: 1.4658129805029452
      properties:
        cksum:
          type: number
        read:
          type: number
        write:
          type: number
        name:
          type: string
        state:
          type: string
        msg:
          type: string
        children:
          items:
            $ref: '#/components/schemas/ZFSPoolStatusChild'
          type: array
      required:
      - cksum
      - name
      - read
      - state
      - write
      type: object
    ZFSPoolStatusSummary:
      example:
        children:
        - msg: msg
          read: 6.027456183070403
          children:
          - null
          - null
          cksum: 0.8008281904610115
          name: name
          state: state
          write: 1.4658129805029452
        - msg: msg
          read: 6.027456183070403
          children:
          - null
          - null
          cksum: 0.8008281904610115
          name: name
          state: state
          write: 1.4658129805029452
        name: name
        scan: scan
        action: action
        state: state
        errors: errors
        status: status
      properties:
        children:
          description: The pool configuration including vdevs for each section. May
            be nested.
          items:
            $ref: '#/components/schemas/ZFSPoolStatusChild'
          type: array
        errors:
          description: Errors on the pool
          type: string
        name:
          description: The pool name
          type: string
        state:
          description: The state of the pool
          type: string
        action:
          description: Recommended action to address the pool state
          type: string
        scan:
          description: Information on the last or current scrub.
          type: string
        status:
          description: Information on the state of the pool
          type: string
      required:
      - children
      - errors
      - name
      - state
      type: object
    ZFSPoolSummary:
      example:
        frag: 1.4658129805029452
        size: 5.637376656633329
        name: name
        health: health
        alloc: 0.8008281904610115
        free: 5.962133916683182
        dedup: 6.027456183070403
      properties:
        alloc:
          description: The allocated space on the pool in bytes
          type: number
        dedup:
          type: number
        frag:
          type: number
        health:
          description: The health of the pool
          type: string
        free:
          description: The free space on the pool in bytes
          type: number
        size:
          description: The total size of the pool in bytes
          type: number
        name:
          description: Name of the pool
          type: string
      required:
      - alloc
      - dedup
      - frag
      - free
      - health
      - name
      - size
      type: object
    ZFSRaidLevel:
      enum:
      - single
      - mirror
      - raidz
      - raidz2
      - raidz3
      - raid10
      - draid
      - draid2
      - draid3
      type: string
  securitySchemes:
    smithy.api.httpApiKeyAuth:
      description: API key authentication via the 'Authorization' header
      in: header
      name: Authorization
      scheme: ApiKey
      type: http
    smithy.api.httpBasicAuth:
      description: HTTP Basic authentication
      scheme: Basic
      type: http
