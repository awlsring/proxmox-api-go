/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetVersionResponseContent struct for GetVersionResponseContent
type GetVersionResponseContent struct {
	Data VersionSummary `json:"data"`
}

// NewGetVersionResponseContent instantiates a new GetVersionResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVersionResponseContent(data VersionSummary) *GetVersionResponseContent {
	this := GetVersionResponseContent{}
	this.Data = data
	return &this
}

// NewGetVersionResponseContentWithDefaults instantiates a new GetVersionResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVersionResponseContentWithDefaults() *GetVersionResponseContent {
	this := GetVersionResponseContent{}
	return &this
}

// GetData returns the Data field value
func (o *GetVersionResponseContent) GetData() VersionSummary {
	if o == nil {
		var ret VersionSummary
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetVersionResponseContent) GetDataOk() (*VersionSummary, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetVersionResponseContent) SetData(v VersionSummary) {
	o.Data = v
}

func (o GetVersionResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetVersionResponseContent struct {
	value *GetVersionResponseContent
	isSet bool
}

func (v NullableGetVersionResponseContent) Get() *GetVersionResponseContent {
	return v.value
}

func (v *NullableGetVersionResponseContent) Set(val *GetVersionResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVersionResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVersionResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVersionResponseContent(val *GetVersionResponseContent) *NullableGetVersionResponseContent {
	return &NullableGetVersionResponseContent{value: val, isSet: true}
}

func (v NullableGetVersionResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVersionResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


