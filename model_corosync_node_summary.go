/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CorosyncNodeSummary struct for CorosyncNodeSummary
type CorosyncNodeSummary struct {
	Nodeid string `json:"nodeid"`
	QuorumVotes string `json:"quorum_votes"`
	Ring0Addr string `json:"ring0_addr"`
	Ring1Addr *string `json:"ring1_addr,omitempty"`
	Ring2Addr *string `json:"ring2_addr,omitempty"`
	Ring3Addr *string `json:"ring3_addr,omitempty"`
	Ring4Addr *string `json:"ring4_addr,omitempty"`
	Ring5Addr *string `json:"ring5_addr,omitempty"`
	Ring6Addr *string `json:"ring6_addr,omitempty"`
	Ring7Addr *string `json:"ring7_addr,omitempty"`
	Name string `json:"name"`
	PveAddr *string `json:"pve_addr,omitempty"`
}

// NewCorosyncNodeSummary instantiates a new CorosyncNodeSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorosyncNodeSummary(nodeid string, quorumVotes string, ring0Addr string, name string) *CorosyncNodeSummary {
	this := CorosyncNodeSummary{}
	this.Nodeid = nodeid
	this.QuorumVotes = quorumVotes
	this.Ring0Addr = ring0Addr
	this.Name = name
	return &this
}

// NewCorosyncNodeSummaryWithDefaults instantiates a new CorosyncNodeSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorosyncNodeSummaryWithDefaults() *CorosyncNodeSummary {
	this := CorosyncNodeSummary{}
	return &this
}

// GetNodeid returns the Nodeid field value
func (o *CorosyncNodeSummary) GetNodeid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nodeid
}

// GetNodeidOk returns a tuple with the Nodeid field value
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetNodeidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Nodeid, true
}

// SetNodeid sets field value
func (o *CorosyncNodeSummary) SetNodeid(v string) {
	o.Nodeid = v
}

// GetQuorumVotes returns the QuorumVotes field value
func (o *CorosyncNodeSummary) GetQuorumVotes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuorumVotes
}

// GetQuorumVotesOk returns a tuple with the QuorumVotes field value
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetQuorumVotesOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.QuorumVotes, true
}

// SetQuorumVotes sets field value
func (o *CorosyncNodeSummary) SetQuorumVotes(v string) {
	o.QuorumVotes = v
}

// GetRing0Addr returns the Ring0Addr field value
func (o *CorosyncNodeSummary) GetRing0Addr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ring0Addr
}

// GetRing0AddrOk returns a tuple with the Ring0Addr field value
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing0AddrOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ring0Addr, true
}

// SetRing0Addr sets field value
func (o *CorosyncNodeSummary) SetRing0Addr(v string) {
	o.Ring0Addr = v
}

// GetRing1Addr returns the Ring1Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing1Addr() string {
	if o == nil || isNil(o.Ring1Addr) {
		var ret string
		return ret
	}
	return *o.Ring1Addr
}

// GetRing1AddrOk returns a tuple with the Ring1Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing1AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring1Addr) {
    return nil, false
	}
	return o.Ring1Addr, true
}

// HasRing1Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing1Addr() bool {
	if o != nil && !isNil(o.Ring1Addr) {
		return true
	}

	return false
}

// SetRing1Addr gets a reference to the given string and assigns it to the Ring1Addr field.
func (o *CorosyncNodeSummary) SetRing1Addr(v string) {
	o.Ring1Addr = &v
}

// GetRing2Addr returns the Ring2Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing2Addr() string {
	if o == nil || isNil(o.Ring2Addr) {
		var ret string
		return ret
	}
	return *o.Ring2Addr
}

// GetRing2AddrOk returns a tuple with the Ring2Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing2AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring2Addr) {
    return nil, false
	}
	return o.Ring2Addr, true
}

// HasRing2Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing2Addr() bool {
	if o != nil && !isNil(o.Ring2Addr) {
		return true
	}

	return false
}

// SetRing2Addr gets a reference to the given string and assigns it to the Ring2Addr field.
func (o *CorosyncNodeSummary) SetRing2Addr(v string) {
	o.Ring2Addr = &v
}

// GetRing3Addr returns the Ring3Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing3Addr() string {
	if o == nil || isNil(o.Ring3Addr) {
		var ret string
		return ret
	}
	return *o.Ring3Addr
}

// GetRing3AddrOk returns a tuple with the Ring3Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing3AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring3Addr) {
    return nil, false
	}
	return o.Ring3Addr, true
}

// HasRing3Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing3Addr() bool {
	if o != nil && !isNil(o.Ring3Addr) {
		return true
	}

	return false
}

// SetRing3Addr gets a reference to the given string and assigns it to the Ring3Addr field.
func (o *CorosyncNodeSummary) SetRing3Addr(v string) {
	o.Ring3Addr = &v
}

// GetRing4Addr returns the Ring4Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing4Addr() string {
	if o == nil || isNil(o.Ring4Addr) {
		var ret string
		return ret
	}
	return *o.Ring4Addr
}

// GetRing4AddrOk returns a tuple with the Ring4Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing4AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring4Addr) {
    return nil, false
	}
	return o.Ring4Addr, true
}

// HasRing4Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing4Addr() bool {
	if o != nil && !isNil(o.Ring4Addr) {
		return true
	}

	return false
}

// SetRing4Addr gets a reference to the given string and assigns it to the Ring4Addr field.
func (o *CorosyncNodeSummary) SetRing4Addr(v string) {
	o.Ring4Addr = &v
}

// GetRing5Addr returns the Ring5Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing5Addr() string {
	if o == nil || isNil(o.Ring5Addr) {
		var ret string
		return ret
	}
	return *o.Ring5Addr
}

// GetRing5AddrOk returns a tuple with the Ring5Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing5AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring5Addr) {
    return nil, false
	}
	return o.Ring5Addr, true
}

// HasRing5Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing5Addr() bool {
	if o != nil && !isNil(o.Ring5Addr) {
		return true
	}

	return false
}

// SetRing5Addr gets a reference to the given string and assigns it to the Ring5Addr field.
func (o *CorosyncNodeSummary) SetRing5Addr(v string) {
	o.Ring5Addr = &v
}

// GetRing6Addr returns the Ring6Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing6Addr() string {
	if o == nil || isNil(o.Ring6Addr) {
		var ret string
		return ret
	}
	return *o.Ring6Addr
}

// GetRing6AddrOk returns a tuple with the Ring6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing6AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring6Addr) {
    return nil, false
	}
	return o.Ring6Addr, true
}

// HasRing6Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing6Addr() bool {
	if o != nil && !isNil(o.Ring6Addr) {
		return true
	}

	return false
}

// SetRing6Addr gets a reference to the given string and assigns it to the Ring6Addr field.
func (o *CorosyncNodeSummary) SetRing6Addr(v string) {
	o.Ring6Addr = &v
}

// GetRing7Addr returns the Ring7Addr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetRing7Addr() string {
	if o == nil || isNil(o.Ring7Addr) {
		var ret string
		return ret
	}
	return *o.Ring7Addr
}

// GetRing7AddrOk returns a tuple with the Ring7Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetRing7AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ring7Addr) {
    return nil, false
	}
	return o.Ring7Addr, true
}

// HasRing7Addr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasRing7Addr() bool {
	if o != nil && !isNil(o.Ring7Addr) {
		return true
	}

	return false
}

// SetRing7Addr gets a reference to the given string and assigns it to the Ring7Addr field.
func (o *CorosyncNodeSummary) SetRing7Addr(v string) {
	o.Ring7Addr = &v
}

// GetName returns the Name field value
func (o *CorosyncNodeSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CorosyncNodeSummary) SetName(v string) {
	o.Name = v
}

// GetPveAddr returns the PveAddr field value if set, zero value otherwise.
func (o *CorosyncNodeSummary) GetPveAddr() string {
	if o == nil || isNil(o.PveAddr) {
		var ret string
		return ret
	}
	return *o.PveAddr
}

// GetPveAddrOk returns a tuple with the PveAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorosyncNodeSummary) GetPveAddrOk() (*string, bool) {
	if o == nil || isNil(o.PveAddr) {
    return nil, false
	}
	return o.PveAddr, true
}

// HasPveAddr returns a boolean if a field has been set.
func (o *CorosyncNodeSummary) HasPveAddr() bool {
	if o != nil && !isNil(o.PveAddr) {
		return true
	}

	return false
}

// SetPveAddr gets a reference to the given string and assigns it to the PveAddr field.
func (o *CorosyncNodeSummary) SetPveAddr(v string) {
	o.PveAddr = &v
}

func (o CorosyncNodeSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nodeid"] = o.Nodeid
	}
	if true {
		toSerialize["quorum_votes"] = o.QuorumVotes
	}
	if true {
		toSerialize["ring0_addr"] = o.Ring0Addr
	}
	if !isNil(o.Ring1Addr) {
		toSerialize["ring1_addr"] = o.Ring1Addr
	}
	if !isNil(o.Ring2Addr) {
		toSerialize["ring2_addr"] = o.Ring2Addr
	}
	if !isNil(o.Ring3Addr) {
		toSerialize["ring3_addr"] = o.Ring3Addr
	}
	if !isNil(o.Ring4Addr) {
		toSerialize["ring4_addr"] = o.Ring4Addr
	}
	if !isNil(o.Ring5Addr) {
		toSerialize["ring5_addr"] = o.Ring5Addr
	}
	if !isNil(o.Ring6Addr) {
		toSerialize["ring6_addr"] = o.Ring6Addr
	}
	if !isNil(o.Ring7Addr) {
		toSerialize["ring7_addr"] = o.Ring7Addr
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.PveAddr) {
		toSerialize["pve_addr"] = o.PveAddr
	}
	return json.Marshal(toSerialize)
}

type NullableCorosyncNodeSummary struct {
	value *CorosyncNodeSummary
	isSet bool
}

func (v NullableCorosyncNodeSummary) Get() *CorosyncNodeSummary {
	return v.value
}

func (v *NullableCorosyncNodeSummary) Set(val *CorosyncNodeSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableCorosyncNodeSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableCorosyncNodeSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorosyncNodeSummary(val *CorosyncNodeSummary) *NullableCorosyncNodeSummary {
	return &NullableCorosyncNodeSummary{value: val, isSet: true}
}

func (v NullableCorosyncNodeSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorosyncNodeSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


