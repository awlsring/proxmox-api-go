/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ModifyStorageRequestContent struct for ModifyStorageRequestContent
type ModifyStorageRequestContent struct {
	Blocksize *string `json:"blocksize,omitempty"`
	Bwlimit *string `json:"bwlimit,omitempty"`
	ComstarHg *string `json:"comstar_hg,omitempty"`
	ComstarTg *string `json:"comstar_tg,omitempty"`
	// Allowed content types.
	Content *string `json:"content,omitempty"`
	// Data pool, only for erasure coding
	DataPool *string `json:"data-pool,omitempty"`
	// A list of settings to delete.
	Delete *string `json:"delete,omitempty"`
	// Prevent change if current configuration has a different SHA1 digest.
	Digest *string `json:"digest,omitempty"`
	// Disable the storage
	Disable *bool `json:"disable,omitempty"`
	// CIFS domain
	Domain *string `json:"domain,omitempty"`
	// Encryption key for storage. Use 'autogen' to generate one automatically without passphrase.
	EncryptionKey *string `json:"encryption-key,omitempty"`
	// Certificate SHA256 fingerprint
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Default image format
	Format *string `json:"format,omitempty"`
	// The ceph filesystem name
	FsName *string `json:"fs-name,omitempty"`
	// Mount CephFS through FUSE
	Fuse *bool `json:"fuse,omitempty"`
	// Assume the given path is an externally managed mountpoint. This is a string boolean, using 'yes' or 'no'
	IsMountpoint *string `json:"is_mountpoint,omitempty"`
	// Client keyring contents
	Keyring *string `json:"keyring,omitempty"`
	// Always access rbd through krbd kernel module
	Krbd *bool `json:"krbd,omitempty"`
	// Target portal group for Linux LIO targets
	LioTpg *string `json:"lio_tpg,omitempty"`
	// Base64 encoded, PEM formatted public RSA key
	MasterPubkey *string `json:"master-pubkey,omitempty"`
	// Mac number of protected backups. Defaults to unlimited
	MaxProtectedBackups *float32 `json:"max-protected-backups,omitempty"`
	// Maximum number of files.
	Maxfiles *float32 `json:"maxfiles,omitempty"`
	// Create the directory if doesnt exist. Defaults to true.
	Mkdir *bool `json:"mkdir,omitempty"`
	// IP addresses of monitors.
	Monhost *string `json:"monhost,omitempty"`
	// The mount point
	Mountpoint *string `json:"mountpoint,omitempty"`
	// The namespace
	Namespace *string `json:"namespace,omitempty"`
	// Set the NOCOW flag on files. This is a boolean integer, using 0 for false or 1 for true.
	Nocow *float32 `json:"nocow,omitempty"`
	// Comma seperated list of node names
	Nodes *string `json:"nodes,omitempty"`
	// Disable write caching on the target.
	Nowritecache *bool `json:"nowritecache,omitempty"`
	// NFS mount options.
	Options *string `json:"options,omitempty"`
	// Password for accessing the datastore
	Password *string `json:"password,omitempty"`
	// The pool name
	Pool *string `json:"pool,omitempty"`
	// For non default port
	Port *float32 `json:"port,omitempty"`
	Preallocation *StoragePreallocation `json:"preallocation,omitempty"`
	// The retention options.
	PruneBackups *string `json:"prune-backups,omitempty"`
	// Zero out data when removing LVs
	Saferemove *bool `json:"saferemove,omitempty"`
	// Wipe throughput.
	SaferemoveThroughput *string `json:"saferemove-throughput,omitempty"`
	// Server IP or DNS name
	Server *string `json:"server,omitempty"`
	// Backup server IP or DNS name
	Server2 *string `json:"server2,omitempty"`
	// Indicates if the storage is shared.
	Shared *bool `json:"shared,omitempty"`
	Smbversion *StorageSMBVersion `json:"smbversion,omitempty"`
	// Use sparse volumes.
	Sparse *bool `json:"sparse,omitempty"`
	// The subdir to mount.
	Subdir *string `json:"subdir,omitempty"`
	// Only use logical volumes tagged with 'pve-vm-ID'.
	TaggedOnly *bool `json:"tagged_only,omitempty"`
	Transport *StorageTransport `json:"transport,omitempty"`
	// The username to use.
	Username *string `json:"username,omitempty"`
}

// NewModifyStorageRequestContent instantiates a new ModifyStorageRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyStorageRequestContent() *ModifyStorageRequestContent {
	this := ModifyStorageRequestContent{}
	return &this
}

// NewModifyStorageRequestContentWithDefaults instantiates a new ModifyStorageRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyStorageRequestContentWithDefaults() *ModifyStorageRequestContent {
	this := ModifyStorageRequestContent{}
	return &this
}

// GetBlocksize returns the Blocksize field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetBlocksize() string {
	if o == nil || isNil(o.Blocksize) {
		var ret string
		return ret
	}
	return *o.Blocksize
}

// GetBlocksizeOk returns a tuple with the Blocksize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetBlocksizeOk() (*string, bool) {
	if o == nil || isNil(o.Blocksize) {
    return nil, false
	}
	return o.Blocksize, true
}

// HasBlocksize returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasBlocksize() bool {
	if o != nil && !isNil(o.Blocksize) {
		return true
	}

	return false
}

// SetBlocksize gets a reference to the given string and assigns it to the Blocksize field.
func (o *ModifyStorageRequestContent) SetBlocksize(v string) {
	o.Blocksize = &v
}

// GetBwlimit returns the Bwlimit field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetBwlimit() string {
	if o == nil || isNil(o.Bwlimit) {
		var ret string
		return ret
	}
	return *o.Bwlimit
}

// GetBwlimitOk returns a tuple with the Bwlimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetBwlimitOk() (*string, bool) {
	if o == nil || isNil(o.Bwlimit) {
    return nil, false
	}
	return o.Bwlimit, true
}

// HasBwlimit returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasBwlimit() bool {
	if o != nil && !isNil(o.Bwlimit) {
		return true
	}

	return false
}

// SetBwlimit gets a reference to the given string and assigns it to the Bwlimit field.
func (o *ModifyStorageRequestContent) SetBwlimit(v string) {
	o.Bwlimit = &v
}

// GetComstarHg returns the ComstarHg field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetComstarHg() string {
	if o == nil || isNil(o.ComstarHg) {
		var ret string
		return ret
	}
	return *o.ComstarHg
}

// GetComstarHgOk returns a tuple with the ComstarHg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetComstarHgOk() (*string, bool) {
	if o == nil || isNil(o.ComstarHg) {
    return nil, false
	}
	return o.ComstarHg, true
}

// HasComstarHg returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasComstarHg() bool {
	if o != nil && !isNil(o.ComstarHg) {
		return true
	}

	return false
}

// SetComstarHg gets a reference to the given string and assigns it to the ComstarHg field.
func (o *ModifyStorageRequestContent) SetComstarHg(v string) {
	o.ComstarHg = &v
}

// GetComstarTg returns the ComstarTg field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetComstarTg() string {
	if o == nil || isNil(o.ComstarTg) {
		var ret string
		return ret
	}
	return *o.ComstarTg
}

// GetComstarTgOk returns a tuple with the ComstarTg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetComstarTgOk() (*string, bool) {
	if o == nil || isNil(o.ComstarTg) {
    return nil, false
	}
	return o.ComstarTg, true
}

// HasComstarTg returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasComstarTg() bool {
	if o != nil && !isNil(o.ComstarTg) {
		return true
	}

	return false
}

// SetComstarTg gets a reference to the given string and assigns it to the ComstarTg field.
func (o *ModifyStorageRequestContent) SetComstarTg(v string) {
	o.ComstarTg = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetContent() string {
	if o == nil || isNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetContentOk() (*string, bool) {
	if o == nil || isNil(o.Content) {
    return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasContent() bool {
	if o != nil && !isNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ModifyStorageRequestContent) SetContent(v string) {
	o.Content = &v
}

// GetDataPool returns the DataPool field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetDataPool() string {
	if o == nil || isNil(o.DataPool) {
		var ret string
		return ret
	}
	return *o.DataPool
}

// GetDataPoolOk returns a tuple with the DataPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetDataPoolOk() (*string, bool) {
	if o == nil || isNil(o.DataPool) {
    return nil, false
	}
	return o.DataPool, true
}

// HasDataPool returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasDataPool() bool {
	if o != nil && !isNil(o.DataPool) {
		return true
	}

	return false
}

// SetDataPool gets a reference to the given string and assigns it to the DataPool field.
func (o *ModifyStorageRequestContent) SetDataPool(v string) {
	o.DataPool = &v
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetDelete() string {
	if o == nil || isNil(o.Delete) {
		var ret string
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetDeleteOk() (*string, bool) {
	if o == nil || isNil(o.Delete) {
    return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasDelete() bool {
	if o != nil && !isNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given string and assigns it to the Delete field.
func (o *ModifyStorageRequestContent) SetDelete(v string) {
	o.Delete = &v
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetDigest() string {
	if o == nil || isNil(o.Digest) {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetDigestOk() (*string, bool) {
	if o == nil || isNil(o.Digest) {
    return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasDigest() bool {
	if o != nil && !isNil(o.Digest) {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *ModifyStorageRequestContent) SetDigest(v string) {
	o.Digest = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetDisable() bool {
	if o == nil || isNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetDisableOk() (*bool, bool) {
	if o == nil || isNil(o.Disable) {
    return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasDisable() bool {
	if o != nil && !isNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *ModifyStorageRequestContent) SetDisable(v bool) {
	o.Disable = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetDomain() string {
	if o == nil || isNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetDomainOk() (*string, bool) {
	if o == nil || isNil(o.Domain) {
    return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasDomain() bool {
	if o != nil && !isNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *ModifyStorageRequestContent) SetDomain(v string) {
	o.Domain = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetEncryptionKey() string {
	if o == nil || isNil(o.EncryptionKey) {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetEncryptionKeyOk() (*string, bool) {
	if o == nil || isNil(o.EncryptionKey) {
    return nil, false
	}
	return o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasEncryptionKey() bool {
	if o != nil && !isNil(o.EncryptionKey) {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *ModifyStorageRequestContent) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetFingerprint() string {
	if o == nil || isNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetFingerprintOk() (*string, bool) {
	if o == nil || isNil(o.Fingerprint) {
    return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasFingerprint() bool {
	if o != nil && !isNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *ModifyStorageRequestContent) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetFormat() string {
	if o == nil || isNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetFormatOk() (*string, bool) {
	if o == nil || isNil(o.Format) {
    return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasFormat() bool {
	if o != nil && !isNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ModifyStorageRequestContent) SetFormat(v string) {
	o.Format = &v
}

// GetFsName returns the FsName field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetFsName() string {
	if o == nil || isNil(o.FsName) {
		var ret string
		return ret
	}
	return *o.FsName
}

// GetFsNameOk returns a tuple with the FsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetFsNameOk() (*string, bool) {
	if o == nil || isNil(o.FsName) {
    return nil, false
	}
	return o.FsName, true
}

// HasFsName returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasFsName() bool {
	if o != nil && !isNil(o.FsName) {
		return true
	}

	return false
}

// SetFsName gets a reference to the given string and assigns it to the FsName field.
func (o *ModifyStorageRequestContent) SetFsName(v string) {
	o.FsName = &v
}

// GetFuse returns the Fuse field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetFuse() bool {
	if o == nil || isNil(o.Fuse) {
		var ret bool
		return ret
	}
	return *o.Fuse
}

// GetFuseOk returns a tuple with the Fuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetFuseOk() (*bool, bool) {
	if o == nil || isNil(o.Fuse) {
    return nil, false
	}
	return o.Fuse, true
}

// HasFuse returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasFuse() bool {
	if o != nil && !isNil(o.Fuse) {
		return true
	}

	return false
}

// SetFuse gets a reference to the given bool and assigns it to the Fuse field.
func (o *ModifyStorageRequestContent) SetFuse(v bool) {
	o.Fuse = &v
}

// GetIsMountpoint returns the IsMountpoint field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetIsMountpoint() string {
	if o == nil || isNil(o.IsMountpoint) {
		var ret string
		return ret
	}
	return *o.IsMountpoint
}

// GetIsMountpointOk returns a tuple with the IsMountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetIsMountpointOk() (*string, bool) {
	if o == nil || isNil(o.IsMountpoint) {
    return nil, false
	}
	return o.IsMountpoint, true
}

// HasIsMountpoint returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasIsMountpoint() bool {
	if o != nil && !isNil(o.IsMountpoint) {
		return true
	}

	return false
}

// SetIsMountpoint gets a reference to the given string and assigns it to the IsMountpoint field.
func (o *ModifyStorageRequestContent) SetIsMountpoint(v string) {
	o.IsMountpoint = &v
}

// GetKeyring returns the Keyring field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetKeyring() string {
	if o == nil || isNil(o.Keyring) {
		var ret string
		return ret
	}
	return *o.Keyring
}

// GetKeyringOk returns a tuple with the Keyring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetKeyringOk() (*string, bool) {
	if o == nil || isNil(o.Keyring) {
    return nil, false
	}
	return o.Keyring, true
}

// HasKeyring returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasKeyring() bool {
	if o != nil && !isNil(o.Keyring) {
		return true
	}

	return false
}

// SetKeyring gets a reference to the given string and assigns it to the Keyring field.
func (o *ModifyStorageRequestContent) SetKeyring(v string) {
	o.Keyring = &v
}

// GetKrbd returns the Krbd field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetKrbd() bool {
	if o == nil || isNil(o.Krbd) {
		var ret bool
		return ret
	}
	return *o.Krbd
}

// GetKrbdOk returns a tuple with the Krbd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetKrbdOk() (*bool, bool) {
	if o == nil || isNil(o.Krbd) {
    return nil, false
	}
	return o.Krbd, true
}

// HasKrbd returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasKrbd() bool {
	if o != nil && !isNil(o.Krbd) {
		return true
	}

	return false
}

// SetKrbd gets a reference to the given bool and assigns it to the Krbd field.
func (o *ModifyStorageRequestContent) SetKrbd(v bool) {
	o.Krbd = &v
}

// GetLioTpg returns the LioTpg field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetLioTpg() string {
	if o == nil || isNil(o.LioTpg) {
		var ret string
		return ret
	}
	return *o.LioTpg
}

// GetLioTpgOk returns a tuple with the LioTpg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetLioTpgOk() (*string, bool) {
	if o == nil || isNil(o.LioTpg) {
    return nil, false
	}
	return o.LioTpg, true
}

// HasLioTpg returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasLioTpg() bool {
	if o != nil && !isNil(o.LioTpg) {
		return true
	}

	return false
}

// SetLioTpg gets a reference to the given string and assigns it to the LioTpg field.
func (o *ModifyStorageRequestContent) SetLioTpg(v string) {
	o.LioTpg = &v
}

// GetMasterPubkey returns the MasterPubkey field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetMasterPubkey() string {
	if o == nil || isNil(o.MasterPubkey) {
		var ret string
		return ret
	}
	return *o.MasterPubkey
}

// GetMasterPubkeyOk returns a tuple with the MasterPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetMasterPubkeyOk() (*string, bool) {
	if o == nil || isNil(o.MasterPubkey) {
    return nil, false
	}
	return o.MasterPubkey, true
}

// HasMasterPubkey returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasMasterPubkey() bool {
	if o != nil && !isNil(o.MasterPubkey) {
		return true
	}

	return false
}

// SetMasterPubkey gets a reference to the given string and assigns it to the MasterPubkey field.
func (o *ModifyStorageRequestContent) SetMasterPubkey(v string) {
	o.MasterPubkey = &v
}

// GetMaxProtectedBackups returns the MaxProtectedBackups field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetMaxProtectedBackups() float32 {
	if o == nil || isNil(o.MaxProtectedBackups) {
		var ret float32
		return ret
	}
	return *o.MaxProtectedBackups
}

// GetMaxProtectedBackupsOk returns a tuple with the MaxProtectedBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetMaxProtectedBackupsOk() (*float32, bool) {
	if o == nil || isNil(o.MaxProtectedBackups) {
    return nil, false
	}
	return o.MaxProtectedBackups, true
}

// HasMaxProtectedBackups returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasMaxProtectedBackups() bool {
	if o != nil && !isNil(o.MaxProtectedBackups) {
		return true
	}

	return false
}

// SetMaxProtectedBackups gets a reference to the given float32 and assigns it to the MaxProtectedBackups field.
func (o *ModifyStorageRequestContent) SetMaxProtectedBackups(v float32) {
	o.MaxProtectedBackups = &v
}

// GetMaxfiles returns the Maxfiles field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetMaxfiles() float32 {
	if o == nil || isNil(o.Maxfiles) {
		var ret float32
		return ret
	}
	return *o.Maxfiles
}

// GetMaxfilesOk returns a tuple with the Maxfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetMaxfilesOk() (*float32, bool) {
	if o == nil || isNil(o.Maxfiles) {
    return nil, false
	}
	return o.Maxfiles, true
}

// HasMaxfiles returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasMaxfiles() bool {
	if o != nil && !isNil(o.Maxfiles) {
		return true
	}

	return false
}

// SetMaxfiles gets a reference to the given float32 and assigns it to the Maxfiles field.
func (o *ModifyStorageRequestContent) SetMaxfiles(v float32) {
	o.Maxfiles = &v
}

// GetMkdir returns the Mkdir field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetMkdir() bool {
	if o == nil || isNil(o.Mkdir) {
		var ret bool
		return ret
	}
	return *o.Mkdir
}

// GetMkdirOk returns a tuple with the Mkdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetMkdirOk() (*bool, bool) {
	if o == nil || isNil(o.Mkdir) {
    return nil, false
	}
	return o.Mkdir, true
}

// HasMkdir returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasMkdir() bool {
	if o != nil && !isNil(o.Mkdir) {
		return true
	}

	return false
}

// SetMkdir gets a reference to the given bool and assigns it to the Mkdir field.
func (o *ModifyStorageRequestContent) SetMkdir(v bool) {
	o.Mkdir = &v
}

// GetMonhost returns the Monhost field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetMonhost() string {
	if o == nil || isNil(o.Monhost) {
		var ret string
		return ret
	}
	return *o.Monhost
}

// GetMonhostOk returns a tuple with the Monhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetMonhostOk() (*string, bool) {
	if o == nil || isNil(o.Monhost) {
    return nil, false
	}
	return o.Monhost, true
}

// HasMonhost returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasMonhost() bool {
	if o != nil && !isNil(o.Monhost) {
		return true
	}

	return false
}

// SetMonhost gets a reference to the given string and assigns it to the Monhost field.
func (o *ModifyStorageRequestContent) SetMonhost(v string) {
	o.Monhost = &v
}

// GetMountpoint returns the Mountpoint field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetMountpoint() string {
	if o == nil || isNil(o.Mountpoint) {
		var ret string
		return ret
	}
	return *o.Mountpoint
}

// GetMountpointOk returns a tuple with the Mountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetMountpointOk() (*string, bool) {
	if o == nil || isNil(o.Mountpoint) {
    return nil, false
	}
	return o.Mountpoint, true
}

// HasMountpoint returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasMountpoint() bool {
	if o != nil && !isNil(o.Mountpoint) {
		return true
	}

	return false
}

// SetMountpoint gets a reference to the given string and assigns it to the Mountpoint field.
func (o *ModifyStorageRequestContent) SetMountpoint(v string) {
	o.Mountpoint = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetNamespace() string {
	if o == nil || isNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetNamespaceOk() (*string, bool) {
	if o == nil || isNil(o.Namespace) {
    return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasNamespace() bool {
	if o != nil && !isNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ModifyStorageRequestContent) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNocow returns the Nocow field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetNocow() float32 {
	if o == nil || isNil(o.Nocow) {
		var ret float32
		return ret
	}
	return *o.Nocow
}

// GetNocowOk returns a tuple with the Nocow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetNocowOk() (*float32, bool) {
	if o == nil || isNil(o.Nocow) {
    return nil, false
	}
	return o.Nocow, true
}

// HasNocow returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasNocow() bool {
	if o != nil && !isNil(o.Nocow) {
		return true
	}

	return false
}

// SetNocow gets a reference to the given float32 and assigns it to the Nocow field.
func (o *ModifyStorageRequestContent) SetNocow(v float32) {
	o.Nocow = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetNodes() string {
	if o == nil || isNil(o.Nodes) {
		var ret string
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetNodesOk() (*string, bool) {
	if o == nil || isNil(o.Nodes) {
    return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasNodes() bool {
	if o != nil && !isNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given string and assigns it to the Nodes field.
func (o *ModifyStorageRequestContent) SetNodes(v string) {
	o.Nodes = &v
}

// GetNowritecache returns the Nowritecache field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetNowritecache() bool {
	if o == nil || isNil(o.Nowritecache) {
		var ret bool
		return ret
	}
	return *o.Nowritecache
}

// GetNowritecacheOk returns a tuple with the Nowritecache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetNowritecacheOk() (*bool, bool) {
	if o == nil || isNil(o.Nowritecache) {
    return nil, false
	}
	return o.Nowritecache, true
}

// HasNowritecache returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasNowritecache() bool {
	if o != nil && !isNil(o.Nowritecache) {
		return true
	}

	return false
}

// SetNowritecache gets a reference to the given bool and assigns it to the Nowritecache field.
func (o *ModifyStorageRequestContent) SetNowritecache(v bool) {
	o.Nowritecache = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetOptions() string {
	if o == nil || isNil(o.Options) {
		var ret string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetOptionsOk() (*string, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given string and assigns it to the Options field.
func (o *ModifyStorageRequestContent) SetOptions(v string) {
	o.Options = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModifyStorageRequestContent) SetPassword(v string) {
	o.Password = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetPool() string {
	if o == nil || isNil(o.Pool) {
		var ret string
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetPoolOk() (*string, bool) {
	if o == nil || isNil(o.Pool) {
    return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasPool() bool {
	if o != nil && !isNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given string and assigns it to the Pool field.
func (o *ModifyStorageRequestContent) SetPool(v string) {
	o.Pool = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetPort() float32 {
	if o == nil || isNil(o.Port) {
		var ret float32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetPortOk() (*float32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given float32 and assigns it to the Port field.
func (o *ModifyStorageRequestContent) SetPort(v float32) {
	o.Port = &v
}

// GetPreallocation returns the Preallocation field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetPreallocation() StoragePreallocation {
	if o == nil || isNil(o.Preallocation) {
		var ret StoragePreallocation
		return ret
	}
	return *o.Preallocation
}

// GetPreallocationOk returns a tuple with the Preallocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetPreallocationOk() (*StoragePreallocation, bool) {
	if o == nil || isNil(o.Preallocation) {
    return nil, false
	}
	return o.Preallocation, true
}

// HasPreallocation returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasPreallocation() bool {
	if o != nil && !isNil(o.Preallocation) {
		return true
	}

	return false
}

// SetPreallocation gets a reference to the given StoragePreallocation and assigns it to the Preallocation field.
func (o *ModifyStorageRequestContent) SetPreallocation(v StoragePreallocation) {
	o.Preallocation = &v
}

// GetPruneBackups returns the PruneBackups field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetPruneBackups() string {
	if o == nil || isNil(o.PruneBackups) {
		var ret string
		return ret
	}
	return *o.PruneBackups
}

// GetPruneBackupsOk returns a tuple with the PruneBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetPruneBackupsOk() (*string, bool) {
	if o == nil || isNil(o.PruneBackups) {
    return nil, false
	}
	return o.PruneBackups, true
}

// HasPruneBackups returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasPruneBackups() bool {
	if o != nil && !isNil(o.PruneBackups) {
		return true
	}

	return false
}

// SetPruneBackups gets a reference to the given string and assigns it to the PruneBackups field.
func (o *ModifyStorageRequestContent) SetPruneBackups(v string) {
	o.PruneBackups = &v
}

// GetSaferemove returns the Saferemove field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetSaferemove() bool {
	if o == nil || isNil(o.Saferemove) {
		var ret bool
		return ret
	}
	return *o.Saferemove
}

// GetSaferemoveOk returns a tuple with the Saferemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetSaferemoveOk() (*bool, bool) {
	if o == nil || isNil(o.Saferemove) {
    return nil, false
	}
	return o.Saferemove, true
}

// HasSaferemove returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasSaferemove() bool {
	if o != nil && !isNil(o.Saferemove) {
		return true
	}

	return false
}

// SetSaferemove gets a reference to the given bool and assigns it to the Saferemove field.
func (o *ModifyStorageRequestContent) SetSaferemove(v bool) {
	o.Saferemove = &v
}

// GetSaferemoveThroughput returns the SaferemoveThroughput field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetSaferemoveThroughput() string {
	if o == nil || isNil(o.SaferemoveThroughput) {
		var ret string
		return ret
	}
	return *o.SaferemoveThroughput
}

// GetSaferemoveThroughputOk returns a tuple with the SaferemoveThroughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetSaferemoveThroughputOk() (*string, bool) {
	if o == nil || isNil(o.SaferemoveThroughput) {
    return nil, false
	}
	return o.SaferemoveThroughput, true
}

// HasSaferemoveThroughput returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasSaferemoveThroughput() bool {
	if o != nil && !isNil(o.SaferemoveThroughput) {
		return true
	}

	return false
}

// SetSaferemoveThroughput gets a reference to the given string and assigns it to the SaferemoveThroughput field.
func (o *ModifyStorageRequestContent) SetSaferemoveThroughput(v string) {
	o.SaferemoveThroughput = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetServer() string {
	if o == nil || isNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetServerOk() (*string, bool) {
	if o == nil || isNil(o.Server) {
    return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasServer() bool {
	if o != nil && !isNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *ModifyStorageRequestContent) SetServer(v string) {
	o.Server = &v
}

// GetServer2 returns the Server2 field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetServer2() string {
	if o == nil || isNil(o.Server2) {
		var ret string
		return ret
	}
	return *o.Server2
}

// GetServer2Ok returns a tuple with the Server2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetServer2Ok() (*string, bool) {
	if o == nil || isNil(o.Server2) {
    return nil, false
	}
	return o.Server2, true
}

// HasServer2 returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasServer2() bool {
	if o != nil && !isNil(o.Server2) {
		return true
	}

	return false
}

// SetServer2 gets a reference to the given string and assigns it to the Server2 field.
func (o *ModifyStorageRequestContent) SetServer2(v string) {
	o.Server2 = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetShared() bool {
	if o == nil || isNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetSharedOk() (*bool, bool) {
	if o == nil || isNil(o.Shared) {
    return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasShared() bool {
	if o != nil && !isNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *ModifyStorageRequestContent) SetShared(v bool) {
	o.Shared = &v
}

// GetSmbversion returns the Smbversion field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetSmbversion() StorageSMBVersion {
	if o == nil || isNil(o.Smbversion) {
		var ret StorageSMBVersion
		return ret
	}
	return *o.Smbversion
}

// GetSmbversionOk returns a tuple with the Smbversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetSmbversionOk() (*StorageSMBVersion, bool) {
	if o == nil || isNil(o.Smbversion) {
    return nil, false
	}
	return o.Smbversion, true
}

// HasSmbversion returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasSmbversion() bool {
	if o != nil && !isNil(o.Smbversion) {
		return true
	}

	return false
}

// SetSmbversion gets a reference to the given StorageSMBVersion and assigns it to the Smbversion field.
func (o *ModifyStorageRequestContent) SetSmbversion(v StorageSMBVersion) {
	o.Smbversion = &v
}

// GetSparse returns the Sparse field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetSparse() bool {
	if o == nil || isNil(o.Sparse) {
		var ret bool
		return ret
	}
	return *o.Sparse
}

// GetSparseOk returns a tuple with the Sparse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetSparseOk() (*bool, bool) {
	if o == nil || isNil(o.Sparse) {
    return nil, false
	}
	return o.Sparse, true
}

// HasSparse returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasSparse() bool {
	if o != nil && !isNil(o.Sparse) {
		return true
	}

	return false
}

// SetSparse gets a reference to the given bool and assigns it to the Sparse field.
func (o *ModifyStorageRequestContent) SetSparse(v bool) {
	o.Sparse = &v
}

// GetSubdir returns the Subdir field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetSubdir() string {
	if o == nil || isNil(o.Subdir) {
		var ret string
		return ret
	}
	return *o.Subdir
}

// GetSubdirOk returns a tuple with the Subdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetSubdirOk() (*string, bool) {
	if o == nil || isNil(o.Subdir) {
    return nil, false
	}
	return o.Subdir, true
}

// HasSubdir returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasSubdir() bool {
	if o != nil && !isNil(o.Subdir) {
		return true
	}

	return false
}

// SetSubdir gets a reference to the given string and assigns it to the Subdir field.
func (o *ModifyStorageRequestContent) SetSubdir(v string) {
	o.Subdir = &v
}

// GetTaggedOnly returns the TaggedOnly field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetTaggedOnly() bool {
	if o == nil || isNil(o.TaggedOnly) {
		var ret bool
		return ret
	}
	return *o.TaggedOnly
}

// GetTaggedOnlyOk returns a tuple with the TaggedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetTaggedOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.TaggedOnly) {
    return nil, false
	}
	return o.TaggedOnly, true
}

// HasTaggedOnly returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasTaggedOnly() bool {
	if o != nil && !isNil(o.TaggedOnly) {
		return true
	}

	return false
}

// SetTaggedOnly gets a reference to the given bool and assigns it to the TaggedOnly field.
func (o *ModifyStorageRequestContent) SetTaggedOnly(v bool) {
	o.TaggedOnly = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetTransport() StorageTransport {
	if o == nil || isNil(o.Transport) {
		var ret StorageTransport
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetTransportOk() (*StorageTransport, bool) {
	if o == nil || isNil(o.Transport) {
    return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasTransport() bool {
	if o != nil && !isNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given StorageTransport and assigns it to the Transport field.
func (o *ModifyStorageRequestContent) SetTransport(v StorageTransport) {
	o.Transport = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModifyStorageRequestContent) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyStorageRequestContent) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModifyStorageRequestContent) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModifyStorageRequestContent) SetUsername(v string) {
	o.Username = &v
}

func (o ModifyStorageRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Blocksize) {
		toSerialize["blocksize"] = o.Blocksize
	}
	if !isNil(o.Bwlimit) {
		toSerialize["bwlimit"] = o.Bwlimit
	}
	if !isNil(o.ComstarHg) {
		toSerialize["comstar_hg"] = o.ComstarHg
	}
	if !isNil(o.ComstarTg) {
		toSerialize["comstar_tg"] = o.ComstarTg
	}
	if !isNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !isNil(o.DataPool) {
		toSerialize["data-pool"] = o.DataPool
	}
	if !isNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	if !isNil(o.Digest) {
		toSerialize["digest"] = o.Digest
	}
	if !isNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !isNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !isNil(o.EncryptionKey) {
		toSerialize["encryption-key"] = o.EncryptionKey
	}
	if !isNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !isNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !isNil(o.FsName) {
		toSerialize["fs-name"] = o.FsName
	}
	if !isNil(o.Fuse) {
		toSerialize["fuse"] = o.Fuse
	}
	if !isNil(o.IsMountpoint) {
		toSerialize["is_mountpoint"] = o.IsMountpoint
	}
	if !isNil(o.Keyring) {
		toSerialize["keyring"] = o.Keyring
	}
	if !isNil(o.Krbd) {
		toSerialize["krbd"] = o.Krbd
	}
	if !isNil(o.LioTpg) {
		toSerialize["lio_tpg"] = o.LioTpg
	}
	if !isNil(o.MasterPubkey) {
		toSerialize["master-pubkey"] = o.MasterPubkey
	}
	if !isNil(o.MaxProtectedBackups) {
		toSerialize["max-protected-backups"] = o.MaxProtectedBackups
	}
	if !isNil(o.Maxfiles) {
		toSerialize["maxfiles"] = o.Maxfiles
	}
	if !isNil(o.Mkdir) {
		toSerialize["mkdir"] = o.Mkdir
	}
	if !isNil(o.Monhost) {
		toSerialize["monhost"] = o.Monhost
	}
	if !isNil(o.Mountpoint) {
		toSerialize["mountpoint"] = o.Mountpoint
	}
	if !isNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.Nocow) {
		toSerialize["nocow"] = o.Nocow
	}
	if !isNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !isNil(o.Nowritecache) {
		toSerialize["nowritecache"] = o.Nowritecache
	}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Preallocation) {
		toSerialize["preallocation"] = o.Preallocation
	}
	if !isNil(o.PruneBackups) {
		toSerialize["prune-backups"] = o.PruneBackups
	}
	if !isNil(o.Saferemove) {
		toSerialize["saferemove"] = o.Saferemove
	}
	if !isNil(o.SaferemoveThroughput) {
		toSerialize["saferemove-throughput"] = o.SaferemoveThroughput
	}
	if !isNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !isNil(o.Server2) {
		toSerialize["server2"] = o.Server2
	}
	if !isNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !isNil(o.Smbversion) {
		toSerialize["smbversion"] = o.Smbversion
	}
	if !isNil(o.Sparse) {
		toSerialize["sparse"] = o.Sparse
	}
	if !isNil(o.Subdir) {
		toSerialize["subdir"] = o.Subdir
	}
	if !isNil(o.TaggedOnly) {
		toSerialize["tagged_only"] = o.TaggedOnly
	}
	if !isNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableModifyStorageRequestContent struct {
	value *ModifyStorageRequestContent
	isSet bool
}

func (v NullableModifyStorageRequestContent) Get() *ModifyStorageRequestContent {
	return v.value
}

func (v *NullableModifyStorageRequestContent) Set(val *ModifyStorageRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyStorageRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyStorageRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyStorageRequestContent(val *ModifyStorageRequestContent) *NullableModifyStorageRequestContent {
	return &NullableModifyStorageRequestContent{value: val, isSet: true}
}

func (v NullableModifyStorageRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyStorageRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


