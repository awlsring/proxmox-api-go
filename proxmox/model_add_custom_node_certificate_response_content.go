/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// AddCustomNodeCertificateResponseContent struct for AddCustomNodeCertificateResponseContent
type AddCustomNodeCertificateResponseContent struct {
	Data NodeCertificate `json:"data"`
}

// NewAddCustomNodeCertificateResponseContent instantiates a new AddCustomNodeCertificateResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCustomNodeCertificateResponseContent(data NodeCertificate) *AddCustomNodeCertificateResponseContent {
	this := AddCustomNodeCertificateResponseContent{}
	this.Data = data
	return &this
}

// NewAddCustomNodeCertificateResponseContentWithDefaults instantiates a new AddCustomNodeCertificateResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCustomNodeCertificateResponseContentWithDefaults() *AddCustomNodeCertificateResponseContent {
	this := AddCustomNodeCertificateResponseContent{}
	return &this
}

// GetData returns the Data field value
func (o *AddCustomNodeCertificateResponseContent) GetData() NodeCertificate {
	if o == nil {
		var ret NodeCertificate
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AddCustomNodeCertificateResponseContent) GetDataOk() (*NodeCertificate, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *AddCustomNodeCertificateResponseContent) SetData(v NodeCertificate) {
	o.Data = v
}

func (o AddCustomNodeCertificateResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableAddCustomNodeCertificateResponseContent struct {
	value *AddCustomNodeCertificateResponseContent
	isSet bool
}

func (v NullableAddCustomNodeCertificateResponseContent) Get() *AddCustomNodeCertificateResponseContent {
	return v.value
}

func (v *NullableAddCustomNodeCertificateResponseContent) Set(val *AddCustomNodeCertificateResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCustomNodeCertificateResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCustomNodeCertificateResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCustomNodeCertificateResponseContent(val *AddCustomNodeCertificateResponseContent) *NullableAddCustomNodeCertificateResponseContent {
	return &NullableAddCustomNodeCertificateResponseContent{value: val, isSet: true}
}

func (v NullableAddCustomNodeCertificateResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCustomNodeCertificateResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


