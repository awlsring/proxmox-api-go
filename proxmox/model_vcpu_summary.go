/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the VcpuSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VcpuSummary{}

// VcpuSummary struct for VcpuSummary
type VcpuSummary struct {
	Online *bool `json:"online,omitempty"`
	CanOffline *bool `json:"can-offline,omitempty"`
	LogicalId *float32 `json:"logical-id,omitempty"`
}

// NewVcpuSummary instantiates a new VcpuSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcpuSummary() *VcpuSummary {
	this := VcpuSummary{}
	return &this
}

// NewVcpuSummaryWithDefaults instantiates a new VcpuSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcpuSummaryWithDefaults() *VcpuSummary {
	this := VcpuSummary{}
	return &this
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *VcpuSummary) GetOnline() bool {
	if o == nil || IsNil(o.Online) {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcpuSummary) GetOnlineOk() (*bool, bool) {
	if o == nil || IsNil(o.Online) {
		return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *VcpuSummary) HasOnline() bool {
	if o != nil && !IsNil(o.Online) {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *VcpuSummary) SetOnline(v bool) {
	o.Online = &v
}

// GetCanOffline returns the CanOffline field value if set, zero value otherwise.
func (o *VcpuSummary) GetCanOffline() bool {
	if o == nil || IsNil(o.CanOffline) {
		var ret bool
		return ret
	}
	return *o.CanOffline
}

// GetCanOfflineOk returns a tuple with the CanOffline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcpuSummary) GetCanOfflineOk() (*bool, bool) {
	if o == nil || IsNil(o.CanOffline) {
		return nil, false
	}
	return o.CanOffline, true
}

// HasCanOffline returns a boolean if a field has been set.
func (o *VcpuSummary) HasCanOffline() bool {
	if o != nil && !IsNil(o.CanOffline) {
		return true
	}

	return false
}

// SetCanOffline gets a reference to the given bool and assigns it to the CanOffline field.
func (o *VcpuSummary) SetCanOffline(v bool) {
	o.CanOffline = &v
}

// GetLogicalId returns the LogicalId field value if set, zero value otherwise.
func (o *VcpuSummary) GetLogicalId() float32 {
	if o == nil || IsNil(o.LogicalId) {
		var ret float32
		return ret
	}
	return *o.LogicalId
}

// GetLogicalIdOk returns a tuple with the LogicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcpuSummary) GetLogicalIdOk() (*float32, bool) {
	if o == nil || IsNil(o.LogicalId) {
		return nil, false
	}
	return o.LogicalId, true
}

// HasLogicalId returns a boolean if a field has been set.
func (o *VcpuSummary) HasLogicalId() bool {
	if o != nil && !IsNil(o.LogicalId) {
		return true
	}

	return false
}

// SetLogicalId gets a reference to the given float32 and assigns it to the LogicalId field.
func (o *VcpuSummary) SetLogicalId(v float32) {
	o.LogicalId = &v
}

func (o VcpuSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VcpuSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Online) {
		toSerialize["online"] = o.Online
	}
	if !IsNil(o.CanOffline) {
		toSerialize["can-offline"] = o.CanOffline
	}
	if !IsNil(o.LogicalId) {
		toSerialize["logical-id"] = o.LogicalId
	}
	return toSerialize, nil
}

type NullableVcpuSummary struct {
	value *VcpuSummary
	isSet bool
}

func (v NullableVcpuSummary) Get() *VcpuSummary {
	return v.value
}

func (v *NullableVcpuSummary) Set(val *VcpuSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcpuSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcpuSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcpuSummary(val *VcpuSummary) *NullableVcpuSummary {
	return &NullableVcpuSummary{value: val, isSet: true}
}

func (v NullableVcpuSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcpuSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


