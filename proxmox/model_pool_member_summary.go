/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the PoolMemberSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolMemberSummary{}

// PoolMemberSummary struct for PoolMemberSummary
type PoolMemberSummary struct {
	Id string `json:"id"`
	Type PoolMemberType `json:"type"`
	Disk *float32 `json:"disk,omitempty"`
	Uptime *float32 `json:"uptime,omitempty"`
	Maxmem *float32 `json:"maxmem,omitempty"`
	Netin *float32 `json:"netin,omitempty"`
	Netout *float32 `json:"netout,omitempty"`
	Diskwrite *float32 `json:"diskwrite,omitempty"`
	Diskread *float32 `json:"diskread,omitempty"`
	Maxdisk *float32 `json:"maxdisk,omitempty"`
	Cpu *float32 `json:"cpu,omitempty"`
	Maxcpu *float32 `json:"maxcpu,omitempty"`
	Vmid *float32 `json:"vmid,omitempty"`
	Mem *float32 `json:"mem,omitempty"`
	Name *string `json:"name,omitempty"`
	// Whether the VM is a template. This is a boolean integer, where 1 is true and 0 is false.
	Template *float32 `json:"template,omitempty"`
	Node *string `json:"node,omitempty"`
	Storage *string `json:"storage,omitempty"`
	Status *string `json:"status,omitempty"`
	Plugintype *string `json:"plugintype,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Shared *float32 `json:"shared,omitempty"`
	Content *string `json:"content,omitempty"`
}

// NewPoolMemberSummary instantiates a new PoolMemberSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolMemberSummary(id string, type_ PoolMemberType) *PoolMemberSummary {
	this := PoolMemberSummary{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewPoolMemberSummaryWithDefaults instantiates a new PoolMemberSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolMemberSummaryWithDefaults() *PoolMemberSummary {
	this := PoolMemberSummary{}
	return &this
}

// GetId returns the Id field value
func (o *PoolMemberSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PoolMemberSummary) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *PoolMemberSummary) GetType() PoolMemberType {
	if o == nil {
		var ret PoolMemberType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetTypeOk() (*PoolMemberType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PoolMemberSummary) SetType(v PoolMemberType) {
	o.Type = v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetDisk() float32 {
	if o == nil || IsNil(o.Disk) {
		var ret float32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetDiskOk() (*float32, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given float32 and assigns it to the Disk field.
func (o *PoolMemberSummary) SetDisk(v float32) {
	o.Disk = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetUptime() float32 {
	if o == nil || IsNil(o.Uptime) {
		var ret float32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetUptimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given float32 and assigns it to the Uptime field.
func (o *PoolMemberSummary) SetUptime(v float32) {
	o.Uptime = &v
}

// GetMaxmem returns the Maxmem field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetMaxmem() float32 {
	if o == nil || IsNil(o.Maxmem) {
		var ret float32
		return ret
	}
	return *o.Maxmem
}

// GetMaxmemOk returns a tuple with the Maxmem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetMaxmemOk() (*float32, bool) {
	if o == nil || IsNil(o.Maxmem) {
		return nil, false
	}
	return o.Maxmem, true
}

// HasMaxmem returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasMaxmem() bool {
	if o != nil && !IsNil(o.Maxmem) {
		return true
	}

	return false
}

// SetMaxmem gets a reference to the given float32 and assigns it to the Maxmem field.
func (o *PoolMemberSummary) SetMaxmem(v float32) {
	o.Maxmem = &v
}

// GetNetin returns the Netin field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetNetin() float32 {
	if o == nil || IsNil(o.Netin) {
		var ret float32
		return ret
	}
	return *o.Netin
}

// GetNetinOk returns a tuple with the Netin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetNetinOk() (*float32, bool) {
	if o == nil || IsNil(o.Netin) {
		return nil, false
	}
	return o.Netin, true
}

// HasNetin returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasNetin() bool {
	if o != nil && !IsNil(o.Netin) {
		return true
	}

	return false
}

// SetNetin gets a reference to the given float32 and assigns it to the Netin field.
func (o *PoolMemberSummary) SetNetin(v float32) {
	o.Netin = &v
}

// GetNetout returns the Netout field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetNetout() float32 {
	if o == nil || IsNil(o.Netout) {
		var ret float32
		return ret
	}
	return *o.Netout
}

// GetNetoutOk returns a tuple with the Netout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetNetoutOk() (*float32, bool) {
	if o == nil || IsNil(o.Netout) {
		return nil, false
	}
	return o.Netout, true
}

// HasNetout returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasNetout() bool {
	if o != nil && !IsNil(o.Netout) {
		return true
	}

	return false
}

// SetNetout gets a reference to the given float32 and assigns it to the Netout field.
func (o *PoolMemberSummary) SetNetout(v float32) {
	o.Netout = &v
}

// GetDiskwrite returns the Diskwrite field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetDiskwrite() float32 {
	if o == nil || IsNil(o.Diskwrite) {
		var ret float32
		return ret
	}
	return *o.Diskwrite
}

// GetDiskwriteOk returns a tuple with the Diskwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetDiskwriteOk() (*float32, bool) {
	if o == nil || IsNil(o.Diskwrite) {
		return nil, false
	}
	return o.Diskwrite, true
}

// HasDiskwrite returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasDiskwrite() bool {
	if o != nil && !IsNil(o.Diskwrite) {
		return true
	}

	return false
}

// SetDiskwrite gets a reference to the given float32 and assigns it to the Diskwrite field.
func (o *PoolMemberSummary) SetDiskwrite(v float32) {
	o.Diskwrite = &v
}

// GetDiskread returns the Diskread field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetDiskread() float32 {
	if o == nil || IsNil(o.Diskread) {
		var ret float32
		return ret
	}
	return *o.Diskread
}

// GetDiskreadOk returns a tuple with the Diskread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetDiskreadOk() (*float32, bool) {
	if o == nil || IsNil(o.Diskread) {
		return nil, false
	}
	return o.Diskread, true
}

// HasDiskread returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasDiskread() bool {
	if o != nil && !IsNil(o.Diskread) {
		return true
	}

	return false
}

// SetDiskread gets a reference to the given float32 and assigns it to the Diskread field.
func (o *PoolMemberSummary) SetDiskread(v float32) {
	o.Diskread = &v
}

// GetMaxdisk returns the Maxdisk field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetMaxdisk() float32 {
	if o == nil || IsNil(o.Maxdisk) {
		var ret float32
		return ret
	}
	return *o.Maxdisk
}

// GetMaxdiskOk returns a tuple with the Maxdisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetMaxdiskOk() (*float32, bool) {
	if o == nil || IsNil(o.Maxdisk) {
		return nil, false
	}
	return o.Maxdisk, true
}

// HasMaxdisk returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasMaxdisk() bool {
	if o != nil && !IsNil(o.Maxdisk) {
		return true
	}

	return false
}

// SetMaxdisk gets a reference to the given float32 and assigns it to the Maxdisk field.
func (o *PoolMemberSummary) SetMaxdisk(v float32) {
	o.Maxdisk = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetCpu() float32 {
	if o == nil || IsNil(o.Cpu) {
		var ret float32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetCpuOk() (*float32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given float32 and assigns it to the Cpu field.
func (o *PoolMemberSummary) SetCpu(v float32) {
	o.Cpu = &v
}

// GetMaxcpu returns the Maxcpu field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetMaxcpu() float32 {
	if o == nil || IsNil(o.Maxcpu) {
		var ret float32
		return ret
	}
	return *o.Maxcpu
}

// GetMaxcpuOk returns a tuple with the Maxcpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetMaxcpuOk() (*float32, bool) {
	if o == nil || IsNil(o.Maxcpu) {
		return nil, false
	}
	return o.Maxcpu, true
}

// HasMaxcpu returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasMaxcpu() bool {
	if o != nil && !IsNil(o.Maxcpu) {
		return true
	}

	return false
}

// SetMaxcpu gets a reference to the given float32 and assigns it to the Maxcpu field.
func (o *PoolMemberSummary) SetMaxcpu(v float32) {
	o.Maxcpu = &v
}

// GetVmid returns the Vmid field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetVmid() float32 {
	if o == nil || IsNil(o.Vmid) {
		var ret float32
		return ret
	}
	return *o.Vmid
}

// GetVmidOk returns a tuple with the Vmid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetVmidOk() (*float32, bool) {
	if o == nil || IsNil(o.Vmid) {
		return nil, false
	}
	return o.Vmid, true
}

// HasVmid returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasVmid() bool {
	if o != nil && !IsNil(o.Vmid) {
		return true
	}

	return false
}

// SetVmid gets a reference to the given float32 and assigns it to the Vmid field.
func (o *PoolMemberSummary) SetVmid(v float32) {
	o.Vmid = &v
}

// GetMem returns the Mem field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetMem() float32 {
	if o == nil || IsNil(o.Mem) {
		var ret float32
		return ret
	}
	return *o.Mem
}

// GetMemOk returns a tuple with the Mem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetMemOk() (*float32, bool) {
	if o == nil || IsNil(o.Mem) {
		return nil, false
	}
	return o.Mem, true
}

// HasMem returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasMem() bool {
	if o != nil && !IsNil(o.Mem) {
		return true
	}

	return false
}

// SetMem gets a reference to the given float32 and assigns it to the Mem field.
func (o *PoolMemberSummary) SetMem(v float32) {
	o.Mem = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PoolMemberSummary) SetName(v string) {
	o.Name = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetTemplate() float32 {
	if o == nil || IsNil(o.Template) {
		var ret float32
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetTemplateOk() (*float32, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given float32 and assigns it to the Template field.
func (o *PoolMemberSummary) SetTemplate(v float32) {
	o.Template = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetNode() string {
	if o == nil || IsNil(o.Node) {
		var ret string
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetNodeOk() (*string, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given string and assigns it to the Node field.
func (o *PoolMemberSummary) SetNode(v string) {
	o.Node = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetStorage() string {
	if o == nil || IsNil(o.Storage) {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetStorageOk() (*string, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *PoolMemberSummary) SetStorage(v string) {
	o.Storage = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PoolMemberSummary) SetStatus(v string) {
	o.Status = &v
}

// GetPlugintype returns the Plugintype field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetPlugintype() string {
	if o == nil || IsNil(o.Plugintype) {
		var ret string
		return ret
	}
	return *o.Plugintype
}

// GetPlugintypeOk returns a tuple with the Plugintype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetPlugintypeOk() (*string, bool) {
	if o == nil || IsNil(o.Plugintype) {
		return nil, false
	}
	return o.Plugintype, true
}

// HasPlugintype returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasPlugintype() bool {
	if o != nil && !IsNil(o.Plugintype) {
		return true
	}

	return false
}

// SetPlugintype gets a reference to the given string and assigns it to the Plugintype field.
func (o *PoolMemberSummary) SetPlugintype(v string) {
	o.Plugintype = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetShared() float32 {
	if o == nil || IsNil(o.Shared) {
		var ret float32
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetSharedOk() (*float32, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given float32 and assigns it to the Shared field.
func (o *PoolMemberSummary) SetShared(v float32) {
	o.Shared = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PoolMemberSummary) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolMemberSummary) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PoolMemberSummary) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *PoolMemberSummary) SetContent(v string) {
	o.Content = &v
}

func (o PoolMemberSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolMemberSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.Maxmem) {
		toSerialize["maxmem"] = o.Maxmem
	}
	if !IsNil(o.Netin) {
		toSerialize["netin"] = o.Netin
	}
	if !IsNil(o.Netout) {
		toSerialize["netout"] = o.Netout
	}
	if !IsNil(o.Diskwrite) {
		toSerialize["diskwrite"] = o.Diskwrite
	}
	if !IsNil(o.Diskread) {
		toSerialize["diskread"] = o.Diskread
	}
	if !IsNil(o.Maxdisk) {
		toSerialize["maxdisk"] = o.Maxdisk
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Maxcpu) {
		toSerialize["maxcpu"] = o.Maxcpu
	}
	if !IsNil(o.Vmid) {
		toSerialize["vmid"] = o.Vmid
	}
	if !IsNil(o.Mem) {
		toSerialize["mem"] = o.Mem
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Plugintype) {
		toSerialize["plugintype"] = o.Plugintype
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullablePoolMemberSummary struct {
	value *PoolMemberSummary
	isSet bool
}

func (v NullablePoolMemberSummary) Get() *PoolMemberSummary {
	return v.value
}

func (v *NullablePoolMemberSummary) Set(val *PoolMemberSummary) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolMemberSummary) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolMemberSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolMemberSummary(val *PoolMemberSummary) *NullablePoolMemberSummary {
	return &NullablePoolMemberSummary{value: val, isSet: true}
}

func (v NullablePoolMemberSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolMemberSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


