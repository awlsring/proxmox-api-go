/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the VirtualMachineStatusSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualMachineStatusSummary{}

// VirtualMachineStatusSummary struct for VirtualMachineStatusSummary
type VirtualMachineStatusSummary struct {
	Status VirtualMachineStatus `json:"status"`
	Ha VirtualMachineHighAvailabilityStatus `json:"ha"`
	// The id of the virtual machine as an integer
	Vmid float32 `json:"vmid"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Agent *float32 `json:"agent,omitempty"`
	Cpus *float32 `json:"cpus,omitempty"`
	Lock *string `json:"lock,omitempty"`
	Maxdisk *float32 `json:"maxdisk,omitempty"`
	Maxmem *float32 `json:"maxmem,omitempty"`
	Name *string `json:"name,omitempty"`
	Pid *float32 `json:"pid,omitempty"`
	Qmpstatus *string `json:"qmpstatus,omitempty"`
	RunningMachine *string `json:"running-machine,omitempty"`
	RunningQemu *string `json:"running-qemu,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Spice *float32 `json:"spice,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Uptime *float32 `json:"uptime,omitempty"`
	Cpu *float32 `json:"cpu,omitempty"`
	Mem *float32 `json:"mem,omitempty"`
	Balloon *float32 `json:"balloon,omitempty"`
	Disk *float32 `json:"disk,omitempty"`
	Netin *float32 `json:"netin,omitempty"`
	Netout *float32 `json:"netout,omitempty"`
	Diskwrite *float32 `json:"diskwrite,omitempty"`
	Diskread *float32 `json:"diskread,omitempty"`
	Freemem *float32 `json:"freemem,omitempty"`
	Nics *map[string]VirtualMachineNicStatus `json:"nics,omitempty"`
	Ballooninfo *VirtualMachineBalloonSummary `json:"ballooninfo,omitempty"`
	Blockstat *map[string]VirtualMachineNicBlockStatistics `json:"blockstat,omitempty"`
	ProxmoxSupport *ProxmoxSupportSummary `json:"proxmox-support,omitempty"`
}

// NewVirtualMachineStatusSummary instantiates a new VirtualMachineStatusSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineStatusSummary(status VirtualMachineStatus, ha VirtualMachineHighAvailabilityStatus, vmid float32) *VirtualMachineStatusSummary {
	this := VirtualMachineStatusSummary{}
	this.Status = status
	this.Ha = ha
	this.Vmid = vmid
	return &this
}

// NewVirtualMachineStatusSummaryWithDefaults instantiates a new VirtualMachineStatusSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineStatusSummaryWithDefaults() *VirtualMachineStatusSummary {
	this := VirtualMachineStatusSummary{}
	return &this
}

// GetStatus returns the Status field value
func (o *VirtualMachineStatusSummary) GetStatus() VirtualMachineStatus {
	if o == nil {
		var ret VirtualMachineStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetStatusOk() (*VirtualMachineStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VirtualMachineStatusSummary) SetStatus(v VirtualMachineStatus) {
	o.Status = v
}

// GetHa returns the Ha field value
func (o *VirtualMachineStatusSummary) GetHa() VirtualMachineHighAvailabilityStatus {
	if o == nil {
		var ret VirtualMachineHighAvailabilityStatus
		return ret
	}

	return o.Ha
}

// GetHaOk returns a tuple with the Ha field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetHaOk() (*VirtualMachineHighAvailabilityStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ha, true
}

// SetHa sets field value
func (o *VirtualMachineStatusSummary) SetHa(v VirtualMachineHighAvailabilityStatus) {
	o.Ha = v
}

// GetVmid returns the Vmid field value
func (o *VirtualMachineStatusSummary) GetVmid() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Vmid
}

// GetVmidOk returns a tuple with the Vmid field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetVmidOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vmid, true
}

// SetVmid sets field value
func (o *VirtualMachineStatusSummary) SetVmid(v float32) {
	o.Vmid = v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetAgent() float32 {
	if o == nil || isNil(o.Agent) {
		var ret float32
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetAgentOk() (*float32, bool) {
	if o == nil || isNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasAgent() bool {
	if o != nil && !isNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given float32 and assigns it to the Agent field.
func (o *VirtualMachineStatusSummary) SetAgent(v float32) {
	o.Agent = &v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetCpus() float32 {
	if o == nil || isNil(o.Cpus) {
		var ret float32
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetCpusOk() (*float32, bool) {
	if o == nil || isNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasCpus() bool {
	if o != nil && !isNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given float32 and assigns it to the Cpus field.
func (o *VirtualMachineStatusSummary) SetCpus(v float32) {
	o.Cpus = &v
}

// GetLock returns the Lock field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetLock() string {
	if o == nil || isNil(o.Lock) {
		var ret string
		return ret
	}
	return *o.Lock
}

// GetLockOk returns a tuple with the Lock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetLockOk() (*string, bool) {
	if o == nil || isNil(o.Lock) {
		return nil, false
	}
	return o.Lock, true
}

// HasLock returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasLock() bool {
	if o != nil && !isNil(o.Lock) {
		return true
	}

	return false
}

// SetLock gets a reference to the given string and assigns it to the Lock field.
func (o *VirtualMachineStatusSummary) SetLock(v string) {
	o.Lock = &v
}

// GetMaxdisk returns the Maxdisk field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetMaxdisk() float32 {
	if o == nil || isNil(o.Maxdisk) {
		var ret float32
		return ret
	}
	return *o.Maxdisk
}

// GetMaxdiskOk returns a tuple with the Maxdisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetMaxdiskOk() (*float32, bool) {
	if o == nil || isNil(o.Maxdisk) {
		return nil, false
	}
	return o.Maxdisk, true
}

// HasMaxdisk returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasMaxdisk() bool {
	if o != nil && !isNil(o.Maxdisk) {
		return true
	}

	return false
}

// SetMaxdisk gets a reference to the given float32 and assigns it to the Maxdisk field.
func (o *VirtualMachineStatusSummary) SetMaxdisk(v float32) {
	o.Maxdisk = &v
}

// GetMaxmem returns the Maxmem field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetMaxmem() float32 {
	if o == nil || isNil(o.Maxmem) {
		var ret float32
		return ret
	}
	return *o.Maxmem
}

// GetMaxmemOk returns a tuple with the Maxmem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetMaxmemOk() (*float32, bool) {
	if o == nil || isNil(o.Maxmem) {
		return nil, false
	}
	return o.Maxmem, true
}

// HasMaxmem returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasMaxmem() bool {
	if o != nil && !isNil(o.Maxmem) {
		return true
	}

	return false
}

// SetMaxmem gets a reference to the given float32 and assigns it to the Maxmem field.
func (o *VirtualMachineStatusSummary) SetMaxmem(v float32) {
	o.Maxmem = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VirtualMachineStatusSummary) SetName(v string) {
	o.Name = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetPid() float32 {
	if o == nil || isNil(o.Pid) {
		var ret float32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetPidOk() (*float32, bool) {
	if o == nil || isNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasPid() bool {
	if o != nil && !isNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given float32 and assigns it to the Pid field.
func (o *VirtualMachineStatusSummary) SetPid(v float32) {
	o.Pid = &v
}

// GetQmpstatus returns the Qmpstatus field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetQmpstatus() string {
	if o == nil || isNil(o.Qmpstatus) {
		var ret string
		return ret
	}
	return *o.Qmpstatus
}

// GetQmpstatusOk returns a tuple with the Qmpstatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetQmpstatusOk() (*string, bool) {
	if o == nil || isNil(o.Qmpstatus) {
		return nil, false
	}
	return o.Qmpstatus, true
}

// HasQmpstatus returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasQmpstatus() bool {
	if o != nil && !isNil(o.Qmpstatus) {
		return true
	}

	return false
}

// SetQmpstatus gets a reference to the given string and assigns it to the Qmpstatus field.
func (o *VirtualMachineStatusSummary) SetQmpstatus(v string) {
	o.Qmpstatus = &v
}

// GetRunningMachine returns the RunningMachine field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetRunningMachine() string {
	if o == nil || isNil(o.RunningMachine) {
		var ret string
		return ret
	}
	return *o.RunningMachine
}

// GetRunningMachineOk returns a tuple with the RunningMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetRunningMachineOk() (*string, bool) {
	if o == nil || isNil(o.RunningMachine) {
		return nil, false
	}
	return o.RunningMachine, true
}

// HasRunningMachine returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasRunningMachine() bool {
	if o != nil && !isNil(o.RunningMachine) {
		return true
	}

	return false
}

// SetRunningMachine gets a reference to the given string and assigns it to the RunningMachine field.
func (o *VirtualMachineStatusSummary) SetRunningMachine(v string) {
	o.RunningMachine = &v
}

// GetRunningQemu returns the RunningQemu field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetRunningQemu() string {
	if o == nil || isNil(o.RunningQemu) {
		var ret string
		return ret
	}
	return *o.RunningQemu
}

// GetRunningQemuOk returns a tuple with the RunningQemu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetRunningQemuOk() (*string, bool) {
	if o == nil || isNil(o.RunningQemu) {
		return nil, false
	}
	return o.RunningQemu, true
}

// HasRunningQemu returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasRunningQemu() bool {
	if o != nil && !isNil(o.RunningQemu) {
		return true
	}

	return false
}

// SetRunningQemu gets a reference to the given string and assigns it to the RunningQemu field.
func (o *VirtualMachineStatusSummary) SetRunningQemu(v string) {
	o.RunningQemu = &v
}

// GetSpice returns the Spice field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetSpice() float32 {
	if o == nil || isNil(o.Spice) {
		var ret float32
		return ret
	}
	return *o.Spice
}

// GetSpiceOk returns a tuple with the Spice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetSpiceOk() (*float32, bool) {
	if o == nil || isNil(o.Spice) {
		return nil, false
	}
	return o.Spice, true
}

// HasSpice returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasSpice() bool {
	if o != nil && !isNil(o.Spice) {
		return true
	}

	return false
}

// SetSpice gets a reference to the given float32 and assigns it to the Spice field.
func (o *VirtualMachineStatusSummary) SetSpice(v float32) {
	o.Spice = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetTags() string {
	if o == nil || isNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetTagsOk() (*string, bool) {
	if o == nil || isNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *VirtualMachineStatusSummary) SetTags(v string) {
	o.Tags = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetUptime() float32 {
	if o == nil || isNil(o.Uptime) {
		var ret float32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetUptimeOk() (*float32, bool) {
	if o == nil || isNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasUptime() bool {
	if o != nil && !isNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given float32 and assigns it to the Uptime field.
func (o *VirtualMachineStatusSummary) SetUptime(v float32) {
	o.Uptime = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetCpu() float32 {
	if o == nil || isNil(o.Cpu) {
		var ret float32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetCpuOk() (*float32, bool) {
	if o == nil || isNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasCpu() bool {
	if o != nil && !isNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given float32 and assigns it to the Cpu field.
func (o *VirtualMachineStatusSummary) SetCpu(v float32) {
	o.Cpu = &v
}

// GetMem returns the Mem field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetMem() float32 {
	if o == nil || isNil(o.Mem) {
		var ret float32
		return ret
	}
	return *o.Mem
}

// GetMemOk returns a tuple with the Mem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetMemOk() (*float32, bool) {
	if o == nil || isNil(o.Mem) {
		return nil, false
	}
	return o.Mem, true
}

// HasMem returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasMem() bool {
	if o != nil && !isNil(o.Mem) {
		return true
	}

	return false
}

// SetMem gets a reference to the given float32 and assigns it to the Mem field.
func (o *VirtualMachineStatusSummary) SetMem(v float32) {
	o.Mem = &v
}

// GetBalloon returns the Balloon field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetBalloon() float32 {
	if o == nil || isNil(o.Balloon) {
		var ret float32
		return ret
	}
	return *o.Balloon
}

// GetBalloonOk returns a tuple with the Balloon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetBalloonOk() (*float32, bool) {
	if o == nil || isNil(o.Balloon) {
		return nil, false
	}
	return o.Balloon, true
}

// HasBalloon returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasBalloon() bool {
	if o != nil && !isNil(o.Balloon) {
		return true
	}

	return false
}

// SetBalloon gets a reference to the given float32 and assigns it to the Balloon field.
func (o *VirtualMachineStatusSummary) SetBalloon(v float32) {
	o.Balloon = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetDisk() float32 {
	if o == nil || isNil(o.Disk) {
		var ret float32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetDiskOk() (*float32, bool) {
	if o == nil || isNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasDisk() bool {
	if o != nil && !isNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given float32 and assigns it to the Disk field.
func (o *VirtualMachineStatusSummary) SetDisk(v float32) {
	o.Disk = &v
}

// GetNetin returns the Netin field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetNetin() float32 {
	if o == nil || isNil(o.Netin) {
		var ret float32
		return ret
	}
	return *o.Netin
}

// GetNetinOk returns a tuple with the Netin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetNetinOk() (*float32, bool) {
	if o == nil || isNil(o.Netin) {
		return nil, false
	}
	return o.Netin, true
}

// HasNetin returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasNetin() bool {
	if o != nil && !isNil(o.Netin) {
		return true
	}

	return false
}

// SetNetin gets a reference to the given float32 and assigns it to the Netin field.
func (o *VirtualMachineStatusSummary) SetNetin(v float32) {
	o.Netin = &v
}

// GetNetout returns the Netout field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetNetout() float32 {
	if o == nil || isNil(o.Netout) {
		var ret float32
		return ret
	}
	return *o.Netout
}

// GetNetoutOk returns a tuple with the Netout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetNetoutOk() (*float32, bool) {
	if o == nil || isNil(o.Netout) {
		return nil, false
	}
	return o.Netout, true
}

// HasNetout returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasNetout() bool {
	if o != nil && !isNil(o.Netout) {
		return true
	}

	return false
}

// SetNetout gets a reference to the given float32 and assigns it to the Netout field.
func (o *VirtualMachineStatusSummary) SetNetout(v float32) {
	o.Netout = &v
}

// GetDiskwrite returns the Diskwrite field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetDiskwrite() float32 {
	if o == nil || isNil(o.Diskwrite) {
		var ret float32
		return ret
	}
	return *o.Diskwrite
}

// GetDiskwriteOk returns a tuple with the Diskwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetDiskwriteOk() (*float32, bool) {
	if o == nil || isNil(o.Diskwrite) {
		return nil, false
	}
	return o.Diskwrite, true
}

// HasDiskwrite returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasDiskwrite() bool {
	if o != nil && !isNil(o.Diskwrite) {
		return true
	}

	return false
}

// SetDiskwrite gets a reference to the given float32 and assigns it to the Diskwrite field.
func (o *VirtualMachineStatusSummary) SetDiskwrite(v float32) {
	o.Diskwrite = &v
}

// GetDiskread returns the Diskread field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetDiskread() float32 {
	if o == nil || isNil(o.Diskread) {
		var ret float32
		return ret
	}
	return *o.Diskread
}

// GetDiskreadOk returns a tuple with the Diskread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetDiskreadOk() (*float32, bool) {
	if o == nil || isNil(o.Diskread) {
		return nil, false
	}
	return o.Diskread, true
}

// HasDiskread returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasDiskread() bool {
	if o != nil && !isNil(o.Diskread) {
		return true
	}

	return false
}

// SetDiskread gets a reference to the given float32 and assigns it to the Diskread field.
func (o *VirtualMachineStatusSummary) SetDiskread(v float32) {
	o.Diskread = &v
}

// GetFreemem returns the Freemem field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetFreemem() float32 {
	if o == nil || isNil(o.Freemem) {
		var ret float32
		return ret
	}
	return *o.Freemem
}

// GetFreememOk returns a tuple with the Freemem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetFreememOk() (*float32, bool) {
	if o == nil || isNil(o.Freemem) {
		return nil, false
	}
	return o.Freemem, true
}

// HasFreemem returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasFreemem() bool {
	if o != nil && !isNil(o.Freemem) {
		return true
	}

	return false
}

// SetFreemem gets a reference to the given float32 and assigns it to the Freemem field.
func (o *VirtualMachineStatusSummary) SetFreemem(v float32) {
	o.Freemem = &v
}

// GetNics returns the Nics field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetNics() map[string]VirtualMachineNicStatus {
	if o == nil || isNil(o.Nics) {
		var ret map[string]VirtualMachineNicStatus
		return ret
	}
	return *o.Nics
}

// GetNicsOk returns a tuple with the Nics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetNicsOk() (*map[string]VirtualMachineNicStatus, bool) {
	if o == nil || isNil(o.Nics) {
		return nil, false
	}
	return o.Nics, true
}

// HasNics returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasNics() bool {
	if o != nil && !isNil(o.Nics) {
		return true
	}

	return false
}

// SetNics gets a reference to the given map[string]VirtualMachineNicStatus and assigns it to the Nics field.
func (o *VirtualMachineStatusSummary) SetNics(v map[string]VirtualMachineNicStatus) {
	o.Nics = &v
}

// GetBallooninfo returns the Ballooninfo field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetBallooninfo() VirtualMachineBalloonSummary {
	if o == nil || isNil(o.Ballooninfo) {
		var ret VirtualMachineBalloonSummary
		return ret
	}
	return *o.Ballooninfo
}

// GetBallooninfoOk returns a tuple with the Ballooninfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetBallooninfoOk() (*VirtualMachineBalloonSummary, bool) {
	if o == nil || isNil(o.Ballooninfo) {
		return nil, false
	}
	return o.Ballooninfo, true
}

// HasBallooninfo returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasBallooninfo() bool {
	if o != nil && !isNil(o.Ballooninfo) {
		return true
	}

	return false
}

// SetBallooninfo gets a reference to the given VirtualMachineBalloonSummary and assigns it to the Ballooninfo field.
func (o *VirtualMachineStatusSummary) SetBallooninfo(v VirtualMachineBalloonSummary) {
	o.Ballooninfo = &v
}

// GetBlockstat returns the Blockstat field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetBlockstat() map[string]VirtualMachineNicBlockStatistics {
	if o == nil || isNil(o.Blockstat) {
		var ret map[string]VirtualMachineNicBlockStatistics
		return ret
	}
	return *o.Blockstat
}

// GetBlockstatOk returns a tuple with the Blockstat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetBlockstatOk() (*map[string]VirtualMachineNicBlockStatistics, bool) {
	if o == nil || isNil(o.Blockstat) {
		return nil, false
	}
	return o.Blockstat, true
}

// HasBlockstat returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasBlockstat() bool {
	if o != nil && !isNil(o.Blockstat) {
		return true
	}

	return false
}

// SetBlockstat gets a reference to the given map[string]VirtualMachineNicBlockStatistics and assigns it to the Blockstat field.
func (o *VirtualMachineStatusSummary) SetBlockstat(v map[string]VirtualMachineNicBlockStatistics) {
	o.Blockstat = &v
}

// GetProxmoxSupport returns the ProxmoxSupport field value if set, zero value otherwise.
func (o *VirtualMachineStatusSummary) GetProxmoxSupport() ProxmoxSupportSummary {
	if o == nil || isNil(o.ProxmoxSupport) {
		var ret ProxmoxSupportSummary
		return ret
	}
	return *o.ProxmoxSupport
}

// GetProxmoxSupportOk returns a tuple with the ProxmoxSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineStatusSummary) GetProxmoxSupportOk() (*ProxmoxSupportSummary, bool) {
	if o == nil || isNil(o.ProxmoxSupport) {
		return nil, false
	}
	return o.ProxmoxSupport, true
}

// HasProxmoxSupport returns a boolean if a field has been set.
func (o *VirtualMachineStatusSummary) HasProxmoxSupport() bool {
	if o != nil && !isNil(o.ProxmoxSupport) {
		return true
	}

	return false
}

// SetProxmoxSupport gets a reference to the given ProxmoxSupportSummary and assigns it to the ProxmoxSupport field.
func (o *VirtualMachineStatusSummary) SetProxmoxSupport(v ProxmoxSupportSummary) {
	o.ProxmoxSupport = &v
}

func (o VirtualMachineStatusSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualMachineStatusSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["ha"] = o.Ha
	toSerialize["vmid"] = o.Vmid
	if !isNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	if !isNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !isNil(o.Lock) {
		toSerialize["lock"] = o.Lock
	}
	if !isNil(o.Maxdisk) {
		toSerialize["maxdisk"] = o.Maxdisk
	}
	if !isNil(o.Maxmem) {
		toSerialize["maxmem"] = o.Maxmem
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !isNil(o.Qmpstatus) {
		toSerialize["qmpstatus"] = o.Qmpstatus
	}
	if !isNil(o.RunningMachine) {
		toSerialize["running-machine"] = o.RunningMachine
	}
	if !isNil(o.RunningQemu) {
		toSerialize["running-qemu"] = o.RunningQemu
	}
	if !isNil(o.Spice) {
		toSerialize["spice"] = o.Spice
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !isNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !isNil(o.Mem) {
		toSerialize["mem"] = o.Mem
	}
	if !isNil(o.Balloon) {
		toSerialize["balloon"] = o.Balloon
	}
	if !isNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !isNil(o.Netin) {
		toSerialize["netin"] = o.Netin
	}
	if !isNil(o.Netout) {
		toSerialize["netout"] = o.Netout
	}
	if !isNil(o.Diskwrite) {
		toSerialize["diskwrite"] = o.Diskwrite
	}
	if !isNil(o.Diskread) {
		toSerialize["diskread"] = o.Diskread
	}
	if !isNil(o.Freemem) {
		toSerialize["freemem"] = o.Freemem
	}
	if !isNil(o.Nics) {
		toSerialize["nics"] = o.Nics
	}
	if !isNil(o.Ballooninfo) {
		toSerialize["ballooninfo"] = o.Ballooninfo
	}
	if !isNil(o.Blockstat) {
		toSerialize["blockstat"] = o.Blockstat
	}
	if !isNil(o.ProxmoxSupport) {
		toSerialize["proxmox-support"] = o.ProxmoxSupport
	}
	return toSerialize, nil
}

type NullableVirtualMachineStatusSummary struct {
	value *VirtualMachineStatusSummary
	isSet bool
}

func (v NullableVirtualMachineStatusSummary) Get() *VirtualMachineStatusSummary {
	return v.value
}

func (v *NullableVirtualMachineStatusSummary) Set(val *VirtualMachineStatusSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineStatusSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineStatusSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineStatusSummary(val *VirtualMachineStatusSummary) *NullableVirtualMachineStatusSummary {
	return &NullableVirtualMachineStatusSummary{value: val, isSet: true}
}

func (v NullableVirtualMachineStatusSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineStatusSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


