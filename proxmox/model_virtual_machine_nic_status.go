/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the VirtualMachineNicStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualMachineNicStatus{}

// VirtualMachineNicStatus struct for VirtualMachineNicStatus
type VirtualMachineNicStatus struct {
	Netin *float32 `json:"netin,omitempty"`
	Netout *float32 `json:"netout,omitempty"`
}

// NewVirtualMachineNicStatus instantiates a new VirtualMachineNicStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineNicStatus() *VirtualMachineNicStatus {
	this := VirtualMachineNicStatus{}
	return &this
}

// NewVirtualMachineNicStatusWithDefaults instantiates a new VirtualMachineNicStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineNicStatusWithDefaults() *VirtualMachineNicStatus {
	this := VirtualMachineNicStatus{}
	return &this
}

// GetNetin returns the Netin field value if set, zero value otherwise.
func (o *VirtualMachineNicStatus) GetNetin() float32 {
	if o == nil || isNil(o.Netin) {
		var ret float32
		return ret
	}
	return *o.Netin
}

// GetNetinOk returns a tuple with the Netin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineNicStatus) GetNetinOk() (*float32, bool) {
	if o == nil || isNil(o.Netin) {
		return nil, false
	}
	return o.Netin, true
}

// HasNetin returns a boolean if a field has been set.
func (o *VirtualMachineNicStatus) HasNetin() bool {
	if o != nil && !isNil(o.Netin) {
		return true
	}

	return false
}

// SetNetin gets a reference to the given float32 and assigns it to the Netin field.
func (o *VirtualMachineNicStatus) SetNetin(v float32) {
	o.Netin = &v
}

// GetNetout returns the Netout field value if set, zero value otherwise.
func (o *VirtualMachineNicStatus) GetNetout() float32 {
	if o == nil || isNil(o.Netout) {
		var ret float32
		return ret
	}
	return *o.Netout
}

// GetNetoutOk returns a tuple with the Netout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineNicStatus) GetNetoutOk() (*float32, bool) {
	if o == nil || isNil(o.Netout) {
		return nil, false
	}
	return o.Netout, true
}

// HasNetout returns a boolean if a field has been set.
func (o *VirtualMachineNicStatus) HasNetout() bool {
	if o != nil && !isNil(o.Netout) {
		return true
	}

	return false
}

// SetNetout gets a reference to the given float32 and assigns it to the Netout field.
func (o *VirtualMachineNicStatus) SetNetout(v float32) {
	o.Netout = &v
}

func (o VirtualMachineNicStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualMachineNicStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Netin) {
		toSerialize["netin"] = o.Netin
	}
	if !isNil(o.Netout) {
		toSerialize["netout"] = o.Netout
	}
	return toSerialize, nil
}

type NullableVirtualMachineNicStatus struct {
	value *VirtualMachineNicStatus
	isSet bool
}

func (v NullableVirtualMachineNicStatus) Get() *VirtualMachineNicStatus {
	return v.value
}

func (v *NullableVirtualMachineNicStatus) Set(val *VirtualMachineNicStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineNicStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineNicStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineNicStatus(val *VirtualMachineNicStatus) *NullableVirtualMachineNicStatus {
	return &NullableVirtualMachineNicStatus{value: val, isSet: true}
}

func (v NullableVirtualMachineNicStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineNicStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


