/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the ExecuteCommandResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteCommandResponse{}

// ExecuteCommandResponse struct for ExecuteCommandResponse
type ExecuteCommandResponse struct {
	Pid float32 `json:"pid"`
}

// NewExecuteCommandResponse instantiates a new ExecuteCommandResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteCommandResponse(pid float32) *ExecuteCommandResponse {
	this := ExecuteCommandResponse{}
	this.Pid = pid
	return &this
}

// NewExecuteCommandResponseWithDefaults instantiates a new ExecuteCommandResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteCommandResponseWithDefaults() *ExecuteCommandResponse {
	this := ExecuteCommandResponse{}
	return &this
}

// GetPid returns the Pid field value
func (o *ExecuteCommandResponse) GetPid() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Pid
}

// GetPidOk returns a tuple with the Pid field value
// and a boolean to check if the value has been set.
func (o *ExecuteCommandResponse) GetPidOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pid, true
}

// SetPid sets field value
func (o *ExecuteCommandResponse) SetPid(v float32) {
	o.Pid = v
}

func (o ExecuteCommandResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteCommandResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pid"] = o.Pid
	return toSerialize, nil
}

type NullableExecuteCommandResponse struct {
	value *ExecuteCommandResponse
	isSet bool
}

func (v NullableExecuteCommandResponse) Get() *ExecuteCommandResponse {
	return v.value
}

func (v *NullableExecuteCommandResponse) Set(val *ExecuteCommandResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteCommandResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteCommandResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteCommandResponse(val *ExecuteCommandResponse) *NullableExecuteCommandResponse {
	return &NullableExecuteCommandResponse{value: val, isSet: true}
}

func (v NullableExecuteCommandResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteCommandResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


