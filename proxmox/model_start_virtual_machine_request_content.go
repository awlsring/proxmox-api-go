/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the StartVirtualMachineRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartVirtualMachineRequestContent{}

// StartVirtualMachineRequestContent struct for StartVirtualMachineRequestContent
type StartVirtualMachineRequestContent struct {
	Timeout *float32 `json:"timeout,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Skiplock *float32 `json:"skiplock,omitempty"`
	// Override QEMU `-cpu` argument.
	ForceCpu *string `json:"force-cpu,omitempty"`
	// Specify QEMU machine type.
	Machine *string `json:"machine,omitempty"`
	// Specify migrated from node.
	Migratedfrom *string `json:"migratedfrom,omitempty"`
	// Specify migration network.
	MigrationNetwork *string `json:"migration_network,omitempty"`
	MigrationType *VirtualMachineMigrationType `json:"migration_type,omitempty"`
	// Save/restore state from the URI.
	Stateuri *string `json:"stateuri,omitempty"`
	// Specify target storage.
	Targetstorage *string `json:"targetstorage,omitempty"`
}

// NewStartVirtualMachineRequestContent instantiates a new StartVirtualMachineRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartVirtualMachineRequestContent() *StartVirtualMachineRequestContent {
	this := StartVirtualMachineRequestContent{}
	return &this
}

// NewStartVirtualMachineRequestContentWithDefaults instantiates a new StartVirtualMachineRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartVirtualMachineRequestContentWithDefaults() *StartVirtualMachineRequestContent {
	this := StartVirtualMachineRequestContent{}
	return &this
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetTimeout() float32 {
	if o == nil || IsNil(o.Timeout) {
		var ret float32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given float32 and assigns it to the Timeout field.
func (o *StartVirtualMachineRequestContent) SetTimeout(v float32) {
	o.Timeout = &v
}

// GetSkiplock returns the Skiplock field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetSkiplock() float32 {
	if o == nil || IsNil(o.Skiplock) {
		var ret float32
		return ret
	}
	return *o.Skiplock
}

// GetSkiplockOk returns a tuple with the Skiplock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetSkiplockOk() (*float32, bool) {
	if o == nil || IsNil(o.Skiplock) {
		return nil, false
	}
	return o.Skiplock, true
}

// HasSkiplock returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasSkiplock() bool {
	if o != nil && !IsNil(o.Skiplock) {
		return true
	}

	return false
}

// SetSkiplock gets a reference to the given float32 and assigns it to the Skiplock field.
func (o *StartVirtualMachineRequestContent) SetSkiplock(v float32) {
	o.Skiplock = &v
}

// GetForceCpu returns the ForceCpu field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetForceCpu() string {
	if o == nil || IsNil(o.ForceCpu) {
		var ret string
		return ret
	}
	return *o.ForceCpu
}

// GetForceCpuOk returns a tuple with the ForceCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetForceCpuOk() (*string, bool) {
	if o == nil || IsNil(o.ForceCpu) {
		return nil, false
	}
	return o.ForceCpu, true
}

// HasForceCpu returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasForceCpu() bool {
	if o != nil && !IsNil(o.ForceCpu) {
		return true
	}

	return false
}

// SetForceCpu gets a reference to the given string and assigns it to the ForceCpu field.
func (o *StartVirtualMachineRequestContent) SetForceCpu(v string) {
	o.ForceCpu = &v
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetMachine() string {
	if o == nil || IsNil(o.Machine) {
		var ret string
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetMachineOk() (*string, bool) {
	if o == nil || IsNil(o.Machine) {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasMachine() bool {
	if o != nil && !IsNil(o.Machine) {
		return true
	}

	return false
}

// SetMachine gets a reference to the given string and assigns it to the Machine field.
func (o *StartVirtualMachineRequestContent) SetMachine(v string) {
	o.Machine = &v
}

// GetMigratedfrom returns the Migratedfrom field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetMigratedfrom() string {
	if o == nil || IsNil(o.Migratedfrom) {
		var ret string
		return ret
	}
	return *o.Migratedfrom
}

// GetMigratedfromOk returns a tuple with the Migratedfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetMigratedfromOk() (*string, bool) {
	if o == nil || IsNil(o.Migratedfrom) {
		return nil, false
	}
	return o.Migratedfrom, true
}

// HasMigratedfrom returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasMigratedfrom() bool {
	if o != nil && !IsNil(o.Migratedfrom) {
		return true
	}

	return false
}

// SetMigratedfrom gets a reference to the given string and assigns it to the Migratedfrom field.
func (o *StartVirtualMachineRequestContent) SetMigratedfrom(v string) {
	o.Migratedfrom = &v
}

// GetMigrationNetwork returns the MigrationNetwork field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetMigrationNetwork() string {
	if o == nil || IsNil(o.MigrationNetwork) {
		var ret string
		return ret
	}
	return *o.MigrationNetwork
}

// GetMigrationNetworkOk returns a tuple with the MigrationNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetMigrationNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.MigrationNetwork) {
		return nil, false
	}
	return o.MigrationNetwork, true
}

// HasMigrationNetwork returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasMigrationNetwork() bool {
	if o != nil && !IsNil(o.MigrationNetwork) {
		return true
	}

	return false
}

// SetMigrationNetwork gets a reference to the given string and assigns it to the MigrationNetwork field.
func (o *StartVirtualMachineRequestContent) SetMigrationNetwork(v string) {
	o.MigrationNetwork = &v
}

// GetMigrationType returns the MigrationType field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetMigrationType() VirtualMachineMigrationType {
	if o == nil || IsNil(o.MigrationType) {
		var ret VirtualMachineMigrationType
		return ret
	}
	return *o.MigrationType
}

// GetMigrationTypeOk returns a tuple with the MigrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetMigrationTypeOk() (*VirtualMachineMigrationType, bool) {
	if o == nil || IsNil(o.MigrationType) {
		return nil, false
	}
	return o.MigrationType, true
}

// HasMigrationType returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasMigrationType() bool {
	if o != nil && !IsNil(o.MigrationType) {
		return true
	}

	return false
}

// SetMigrationType gets a reference to the given VirtualMachineMigrationType and assigns it to the MigrationType field.
func (o *StartVirtualMachineRequestContent) SetMigrationType(v VirtualMachineMigrationType) {
	o.MigrationType = &v
}

// GetStateuri returns the Stateuri field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetStateuri() string {
	if o == nil || IsNil(o.Stateuri) {
		var ret string
		return ret
	}
	return *o.Stateuri
}

// GetStateuriOk returns a tuple with the Stateuri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetStateuriOk() (*string, bool) {
	if o == nil || IsNil(o.Stateuri) {
		return nil, false
	}
	return o.Stateuri, true
}

// HasStateuri returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasStateuri() bool {
	if o != nil && !IsNil(o.Stateuri) {
		return true
	}

	return false
}

// SetStateuri gets a reference to the given string and assigns it to the Stateuri field.
func (o *StartVirtualMachineRequestContent) SetStateuri(v string) {
	o.Stateuri = &v
}

// GetTargetstorage returns the Targetstorage field value if set, zero value otherwise.
func (o *StartVirtualMachineRequestContent) GetTargetstorage() string {
	if o == nil || IsNil(o.Targetstorage) {
		var ret string
		return ret
	}
	return *o.Targetstorage
}

// GetTargetstorageOk returns a tuple with the Targetstorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVirtualMachineRequestContent) GetTargetstorageOk() (*string, bool) {
	if o == nil || IsNil(o.Targetstorage) {
		return nil, false
	}
	return o.Targetstorage, true
}

// HasTargetstorage returns a boolean if a field has been set.
func (o *StartVirtualMachineRequestContent) HasTargetstorage() bool {
	if o != nil && !IsNil(o.Targetstorage) {
		return true
	}

	return false
}

// SetTargetstorage gets a reference to the given string and assigns it to the Targetstorage field.
func (o *StartVirtualMachineRequestContent) SetTargetstorage(v string) {
	o.Targetstorage = &v
}

func (o StartVirtualMachineRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartVirtualMachineRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Skiplock) {
		toSerialize["skiplock"] = o.Skiplock
	}
	if !IsNil(o.ForceCpu) {
		toSerialize["force-cpu"] = o.ForceCpu
	}
	if !IsNil(o.Machine) {
		toSerialize["machine"] = o.Machine
	}
	if !IsNil(o.Migratedfrom) {
		toSerialize["migratedfrom"] = o.Migratedfrom
	}
	if !IsNil(o.MigrationNetwork) {
		toSerialize["migration_network"] = o.MigrationNetwork
	}
	if !IsNil(o.MigrationType) {
		toSerialize["migration_type"] = o.MigrationType
	}
	if !IsNil(o.Stateuri) {
		toSerialize["stateuri"] = o.Stateuri
	}
	if !IsNil(o.Targetstorage) {
		toSerialize["targetstorage"] = o.Targetstorage
	}
	return toSerialize, nil
}

type NullableStartVirtualMachineRequestContent struct {
	value *StartVirtualMachineRequestContent
	isSet bool
}

func (v NullableStartVirtualMachineRequestContent) Get() *StartVirtualMachineRequestContent {
	return v.value
}

func (v *NullableStartVirtualMachineRequestContent) Set(val *StartVirtualMachineRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableStartVirtualMachineRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableStartVirtualMachineRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartVirtualMachineRequestContent(val *StartVirtualMachineRequestContent) *NullableStartVirtualMachineRequestContent {
	return &NullableStartVirtualMachineRequestContent{value: val, isSet: true}
}

func (v NullableStartVirtualMachineRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartVirtualMachineRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


