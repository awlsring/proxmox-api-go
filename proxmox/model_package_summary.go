/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the PackageSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageSummary{}

// PackageSummary struct for PackageSummary
type PackageSummary struct {
	Title string `json:"Title"`
	Priority string `json:"Priority"`
	OldVersion string `json:"OldVersion"`
	Description string `json:"Description"`
	Arch string `json:"Arch"`
	Package string `json:"Package"`
	Section string `json:"Section"`
	Version string `json:"Version"`
	Origin string `json:"Origin"`
	CurrentState string `json:"CurrentState"`
	RunningKernel *string `json:"RunningKernel,omitempty"`
}

// NewPackageSummary instantiates a new PackageSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageSummary(title string, priority string, oldVersion string, description string, arch string, package_ string, section string, version string, origin string, currentState string) *PackageSummary {
	this := PackageSummary{}
	this.Title = title
	this.Priority = priority
	this.OldVersion = oldVersion
	this.Description = description
	this.Arch = arch
	this.Package = package_
	this.Section = section
	this.Version = version
	this.Origin = origin
	this.CurrentState = currentState
	return &this
}

// NewPackageSummaryWithDefaults instantiates a new PackageSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageSummaryWithDefaults() *PackageSummary {
	this := PackageSummary{}
	return &this
}

// GetTitle returns the Title field value
func (o *PackageSummary) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PackageSummary) SetTitle(v string) {
	o.Title = v
}

// GetPriority returns the Priority field value
func (o *PackageSummary) GetPriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *PackageSummary) SetPriority(v string) {
	o.Priority = v
}

// GetOldVersion returns the OldVersion field value
func (o *PackageSummary) GetOldVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldVersion
}

// GetOldVersionOk returns a tuple with the OldVersion field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetOldVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldVersion, true
}

// SetOldVersion sets field value
func (o *PackageSummary) SetOldVersion(v string) {
	o.OldVersion = v
}

// GetDescription returns the Description field value
func (o *PackageSummary) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PackageSummary) SetDescription(v string) {
	o.Description = v
}

// GetArch returns the Arch field value
func (o *PackageSummary) GetArch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arch
}

// GetArchOk returns a tuple with the Arch field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetArchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Arch, true
}

// SetArch sets field value
func (o *PackageSummary) SetArch(v string) {
	o.Arch = v
}

// GetPackage returns the Package field value
func (o *PackageSummary) GetPackage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Package
}

// GetPackageOk returns a tuple with the Package field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetPackageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Package, true
}

// SetPackage sets field value
func (o *PackageSummary) SetPackage(v string) {
	o.Package = v
}

// GetSection returns the Section field value
func (o *PackageSummary) GetSection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Section
}

// GetSectionOk returns a tuple with the Section field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetSectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Section, true
}

// SetSection sets field value
func (o *PackageSummary) SetSection(v string) {
	o.Section = v
}

// GetVersion returns the Version field value
func (o *PackageSummary) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *PackageSummary) SetVersion(v string) {
	o.Version = v
}

// GetOrigin returns the Origin field value
func (o *PackageSummary) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *PackageSummary) SetOrigin(v string) {
	o.Origin = v
}

// GetCurrentState returns the CurrentState field value
func (o *PackageSummary) GetCurrentState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentState
}

// GetCurrentStateOk returns a tuple with the CurrentState field value
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetCurrentStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentState, true
}

// SetCurrentState sets field value
func (o *PackageSummary) SetCurrentState(v string) {
	o.CurrentState = v
}

// GetRunningKernel returns the RunningKernel field value if set, zero value otherwise.
func (o *PackageSummary) GetRunningKernel() string {
	if o == nil || isNil(o.RunningKernel) {
		var ret string
		return ret
	}
	return *o.RunningKernel
}

// GetRunningKernelOk returns a tuple with the RunningKernel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageSummary) GetRunningKernelOk() (*string, bool) {
	if o == nil || isNil(o.RunningKernel) {
		return nil, false
	}
	return o.RunningKernel, true
}

// HasRunningKernel returns a boolean if a field has been set.
func (o *PackageSummary) HasRunningKernel() bool {
	if o != nil && !isNil(o.RunningKernel) {
		return true
	}

	return false
}

// SetRunningKernel gets a reference to the given string and assigns it to the RunningKernel field.
func (o *PackageSummary) SetRunningKernel(v string) {
	o.RunningKernel = &v
}

func (o PackageSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Title"] = o.Title
	toSerialize["Priority"] = o.Priority
	toSerialize["OldVersion"] = o.OldVersion
	toSerialize["Description"] = o.Description
	toSerialize["Arch"] = o.Arch
	toSerialize["Package"] = o.Package
	toSerialize["Section"] = o.Section
	toSerialize["Version"] = o.Version
	toSerialize["Origin"] = o.Origin
	toSerialize["CurrentState"] = o.CurrentState
	if !isNil(o.RunningKernel) {
		toSerialize["RunningKernel"] = o.RunningKernel
	}
	return toSerialize, nil
}

type NullablePackageSummary struct {
	value *PackageSummary
	isSet bool
}

func (v NullablePackageSummary) Get() *PackageSummary {
	return v.value
}

func (v *NullablePackageSummary) Set(val *PackageSummary) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageSummary) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageSummary(val *PackageSummary) *NullablePackageSummary {
	return &NullablePackageSummary{value: val, isSet: true}
}

func (v NullablePackageSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


