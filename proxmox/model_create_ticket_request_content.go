/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// CreateTicketRequestContent struct for CreateTicketRequestContent
type CreateTicketRequestContent struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Realm *string `json:"realm,omitempty"`
}

// NewCreateTicketRequestContent instantiates a new CreateTicketRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTicketRequestContent(username string, password string) *CreateTicketRequestContent {
	this := CreateTicketRequestContent{}
	this.Username = username
	this.Password = password
	return &this
}

// NewCreateTicketRequestContentWithDefaults instantiates a new CreateTicketRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTicketRequestContentWithDefaults() *CreateTicketRequestContent {
	this := CreateTicketRequestContent{}
	return &this
}

// GetUsername returns the Username field value
func (o *CreateTicketRequestContent) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CreateTicketRequestContent) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CreateTicketRequestContent) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *CreateTicketRequestContent) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CreateTicketRequestContent) GetPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CreateTicketRequestContent) SetPassword(v string) {
	o.Password = v
}

// GetRealm returns the Realm field value if set, zero value otherwise.
func (o *CreateTicketRequestContent) GetRealm() string {
	if o == nil || isNil(o.Realm) {
		var ret string
		return ret
	}
	return *o.Realm
}

// GetRealmOk returns a tuple with the Realm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTicketRequestContent) GetRealmOk() (*string, bool) {
	if o == nil || isNil(o.Realm) {
    return nil, false
	}
	return o.Realm, true
}

// HasRealm returns a boolean if a field has been set.
func (o *CreateTicketRequestContent) HasRealm() bool {
	if o != nil && !isNil(o.Realm) {
		return true
	}

	return false
}

// SetRealm gets a reference to the given string and assigns it to the Realm field.
func (o *CreateTicketRequestContent) SetRealm(v string) {
	o.Realm = &v
}

func (o CreateTicketRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Realm) {
		toSerialize["realm"] = o.Realm
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTicketRequestContent struct {
	value *CreateTicketRequestContent
	isSet bool
}

func (v NullableCreateTicketRequestContent) Get() *CreateTicketRequestContent {
	return v.value
}

func (v *NullableCreateTicketRequestContent) Set(val *CreateTicketRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTicketRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTicketRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTicketRequestContent(val *CreateTicketRequestContent) *NullableCreateTicketRequestContent {
	return &NullableCreateTicketRequestContent{value: val, isSet: true}
}

func (v NullableCreateTicketRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTicketRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


