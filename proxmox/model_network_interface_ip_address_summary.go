/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the NetworkInterfaceIpAddressSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkInterfaceIpAddressSummary{}

// NetworkInterfaceIpAddressSummary struct for NetworkInterfaceIpAddressSummary
type NetworkInterfaceIpAddressSummary struct {
	IpAddress *string `json:"ip-address,omitempty"`
	IpAddressType *string `json:"ip-address-type,omitempty"`
	Prefix *float32 `json:"prefix,omitempty"`
}

// NewNetworkInterfaceIpAddressSummary instantiates a new NetworkInterfaceIpAddressSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterfaceIpAddressSummary() *NetworkInterfaceIpAddressSummary {
	this := NetworkInterfaceIpAddressSummary{}
	return &this
}

// NewNetworkInterfaceIpAddressSummaryWithDefaults instantiates a new NetworkInterfaceIpAddressSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceIpAddressSummaryWithDefaults() *NetworkInterfaceIpAddressSummary {
	this := NetworkInterfaceIpAddressSummary{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *NetworkInterfaceIpAddressSummary) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceIpAddressSummary) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *NetworkInterfaceIpAddressSummary) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *NetworkInterfaceIpAddressSummary) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetIpAddressType returns the IpAddressType field value if set, zero value otherwise.
func (o *NetworkInterfaceIpAddressSummary) GetIpAddressType() string {
	if o == nil || IsNil(o.IpAddressType) {
		var ret string
		return ret
	}
	return *o.IpAddressType
}

// GetIpAddressTypeOk returns a tuple with the IpAddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceIpAddressSummary) GetIpAddressTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddressType) {
		return nil, false
	}
	return o.IpAddressType, true
}

// HasIpAddressType returns a boolean if a field has been set.
func (o *NetworkInterfaceIpAddressSummary) HasIpAddressType() bool {
	if o != nil && !IsNil(o.IpAddressType) {
		return true
	}

	return false
}

// SetIpAddressType gets a reference to the given string and assigns it to the IpAddressType field.
func (o *NetworkInterfaceIpAddressSummary) SetIpAddressType(v string) {
	o.IpAddressType = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *NetworkInterfaceIpAddressSummary) GetPrefix() float32 {
	if o == nil || IsNil(o.Prefix) {
		var ret float32
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceIpAddressSummary) GetPrefixOk() (*float32, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *NetworkInterfaceIpAddressSummary) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given float32 and assigns it to the Prefix field.
func (o *NetworkInterfaceIpAddressSummary) SetPrefix(v float32) {
	o.Prefix = &v
}

func (o NetworkInterfaceIpAddressSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkInterfaceIpAddressSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpAddress) {
		toSerialize["ip-address"] = o.IpAddress
	}
	if !IsNil(o.IpAddressType) {
		toSerialize["ip-address-type"] = o.IpAddressType
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	return toSerialize, nil
}

type NullableNetworkInterfaceIpAddressSummary struct {
	value *NetworkInterfaceIpAddressSummary
	isSet bool
}

func (v NullableNetworkInterfaceIpAddressSummary) Get() *NetworkInterfaceIpAddressSummary {
	return v.value
}

func (v *NullableNetworkInterfaceIpAddressSummary) Set(val *NetworkInterfaceIpAddressSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterfaceIpAddressSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterfaceIpAddressSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterfaceIpAddressSummary(val *NetworkInterfaceIpAddressSummary) *NullableNetworkInterfaceIpAddressSummary {
	return &NullableNetworkInterfaceIpAddressSummary{value: val, isSet: true}
}

func (v NullableNetworkInterfaceIpAddressSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterfaceIpAddressSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


