/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// VersionSummary struct for VersionSummary
type VersionSummary struct {
	Version string `json:"version"`
	Release string `json:"release"`
	Repoid string `json:"repoid"`
}

// NewVersionSummary instantiates a new VersionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionSummary(version string, release string, repoid string) *VersionSummary {
	this := VersionSummary{}
	this.Version = version
	this.Release = release
	this.Repoid = repoid
	return &this
}

// NewVersionSummaryWithDefaults instantiates a new VersionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionSummaryWithDefaults() *VersionSummary {
	this := VersionSummary{}
	return &this
}

// GetVersion returns the Version field value
func (o *VersionSummary) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VersionSummary) GetVersionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VersionSummary) SetVersion(v string) {
	o.Version = v
}

// GetRelease returns the Release field value
func (o *VersionSummary) GetRelease() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Release
}

// GetReleaseOk returns a tuple with the Release field value
// and a boolean to check if the value has been set.
func (o *VersionSummary) GetReleaseOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Release, true
}

// SetRelease sets field value
func (o *VersionSummary) SetRelease(v string) {
	o.Release = v
}

// GetRepoid returns the Repoid field value
func (o *VersionSummary) GetRepoid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Repoid
}

// GetRepoidOk returns a tuple with the Repoid field value
// and a boolean to check if the value has been set.
func (o *VersionSummary) GetRepoidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Repoid, true
}

// SetRepoid sets field value
func (o *VersionSummary) SetRepoid(v string) {
	o.Repoid = v
}

func (o VersionSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["release"] = o.Release
	}
	if true {
		toSerialize["repoid"] = o.Repoid
	}
	return json.Marshal(toSerialize)
}

type NullableVersionSummary struct {
	value *VersionSummary
	isSet bool
}

func (v NullableVersionSummary) Get() *VersionSummary {
	return v.value
}

func (v *NullableVersionSummary) Set(val *VersionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionSummary(val *VersionSummary) *NullableVersionSummary {
	return &NullableVersionSummary{value: val, isSet: true}
}

func (v NullableVersionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


