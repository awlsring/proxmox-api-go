/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the RealmConfigurationSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RealmConfigurationSummary{}

// RealmConfigurationSummary struct for RealmConfigurationSummary
type RealmConfigurationSummary struct {
	Type string `json:"type"`
	Digest string `json:"digest"`
	Comment *string `json:"comment,omitempty"`
}

// NewRealmConfigurationSummary instantiates a new RealmConfigurationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRealmConfigurationSummary(type_ string, digest string) *RealmConfigurationSummary {
	this := RealmConfigurationSummary{}
	this.Type = type_
	this.Digest = digest
	return &this
}

// NewRealmConfigurationSummaryWithDefaults instantiates a new RealmConfigurationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRealmConfigurationSummaryWithDefaults() *RealmConfigurationSummary {
	this := RealmConfigurationSummary{}
	return &this
}

// GetType returns the Type field value
func (o *RealmConfigurationSummary) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RealmConfigurationSummary) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RealmConfigurationSummary) SetType(v string) {
	o.Type = v
}

// GetDigest returns the Digest field value
func (o *RealmConfigurationSummary) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *RealmConfigurationSummary) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *RealmConfigurationSummary) SetDigest(v string) {
	o.Digest = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *RealmConfigurationSummary) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealmConfigurationSummary) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *RealmConfigurationSummary) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *RealmConfigurationSummary) SetComment(v string) {
	o.Comment = &v
}

func (o RealmConfigurationSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RealmConfigurationSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["digest"] = o.Digest
	if !isNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableRealmConfigurationSummary struct {
	value *RealmConfigurationSummary
	isSet bool
}

func (v NullableRealmConfigurationSummary) Get() *RealmConfigurationSummary {
	return v.value
}

func (v *NullableRealmConfigurationSummary) Set(val *RealmConfigurationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRealmConfigurationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRealmConfigurationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRealmConfigurationSummary(val *RealmConfigurationSummary) *NullableRealmConfigurationSummary {
	return &NullableRealmConfigurationSummary{value: val, isSet: true}
}

func (v NullableRealmConfigurationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRealmConfigurationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


