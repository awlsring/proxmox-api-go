/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the ResumeVirtualMachineRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResumeVirtualMachineRequestContent{}

// ResumeVirtualMachineRequestContent struct for ResumeVirtualMachineRequestContent
type ResumeVirtualMachineRequestContent struct {
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Skiplock *float32 `json:"skiplock,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Nocheck *float32 `json:"nocheck,omitempty"`
}

// NewResumeVirtualMachineRequestContent instantiates a new ResumeVirtualMachineRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResumeVirtualMachineRequestContent() *ResumeVirtualMachineRequestContent {
	this := ResumeVirtualMachineRequestContent{}
	return &this
}

// NewResumeVirtualMachineRequestContentWithDefaults instantiates a new ResumeVirtualMachineRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResumeVirtualMachineRequestContentWithDefaults() *ResumeVirtualMachineRequestContent {
	this := ResumeVirtualMachineRequestContent{}
	return &this
}

// GetSkiplock returns the Skiplock field value if set, zero value otherwise.
func (o *ResumeVirtualMachineRequestContent) GetSkiplock() float32 {
	if o == nil || IsNil(o.Skiplock) {
		var ret float32
		return ret
	}
	return *o.Skiplock
}

// GetSkiplockOk returns a tuple with the Skiplock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResumeVirtualMachineRequestContent) GetSkiplockOk() (*float32, bool) {
	if o == nil || IsNil(o.Skiplock) {
		return nil, false
	}
	return o.Skiplock, true
}

// HasSkiplock returns a boolean if a field has been set.
func (o *ResumeVirtualMachineRequestContent) HasSkiplock() bool {
	if o != nil && !IsNil(o.Skiplock) {
		return true
	}

	return false
}

// SetSkiplock gets a reference to the given float32 and assigns it to the Skiplock field.
func (o *ResumeVirtualMachineRequestContent) SetSkiplock(v float32) {
	o.Skiplock = &v
}

// GetNocheck returns the Nocheck field value if set, zero value otherwise.
func (o *ResumeVirtualMachineRequestContent) GetNocheck() float32 {
	if o == nil || IsNil(o.Nocheck) {
		var ret float32
		return ret
	}
	return *o.Nocheck
}

// GetNocheckOk returns a tuple with the Nocheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResumeVirtualMachineRequestContent) GetNocheckOk() (*float32, bool) {
	if o == nil || IsNil(o.Nocheck) {
		return nil, false
	}
	return o.Nocheck, true
}

// HasNocheck returns a boolean if a field has been set.
func (o *ResumeVirtualMachineRequestContent) HasNocheck() bool {
	if o != nil && !IsNil(o.Nocheck) {
		return true
	}

	return false
}

// SetNocheck gets a reference to the given float32 and assigns it to the Nocheck field.
func (o *ResumeVirtualMachineRequestContent) SetNocheck(v float32) {
	o.Nocheck = &v
}

func (o ResumeVirtualMachineRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResumeVirtualMachineRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Skiplock) {
		toSerialize["skiplock"] = o.Skiplock
	}
	if !IsNil(o.Nocheck) {
		toSerialize["nocheck"] = o.Nocheck
	}
	return toSerialize, nil
}

type NullableResumeVirtualMachineRequestContent struct {
	value *ResumeVirtualMachineRequestContent
	isSet bool
}

func (v NullableResumeVirtualMachineRequestContent) Get() *ResumeVirtualMachineRequestContent {
	return v.value
}

func (v *NullableResumeVirtualMachineRequestContent) Set(val *ResumeVirtualMachineRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableResumeVirtualMachineRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableResumeVirtualMachineRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResumeVirtualMachineRequestContent(val *ResumeVirtualMachineRequestContent) *NullableResumeVirtualMachineRequestContent {
	return &NullableResumeVirtualMachineRequestContent{value: val, isSet: true}
}

func (v NullableResumeVirtualMachineRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResumeVirtualMachineRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


