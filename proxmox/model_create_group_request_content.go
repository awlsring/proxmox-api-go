/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the CreateGroupRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGroupRequestContent{}

// CreateGroupRequestContent struct for CreateGroupRequestContent
type CreateGroupRequestContent struct {
	Groupid string `json:"groupid"`
	Comment *string `json:"comment,omitempty"`
}

// NewCreateGroupRequestContent instantiates a new CreateGroupRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupRequestContent(groupid string) *CreateGroupRequestContent {
	this := CreateGroupRequestContent{}
	this.Groupid = groupid
	return &this
}

// NewCreateGroupRequestContentWithDefaults instantiates a new CreateGroupRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupRequestContentWithDefaults() *CreateGroupRequestContent {
	this := CreateGroupRequestContent{}
	return &this
}

// GetGroupid returns the Groupid field value
func (o *CreateGroupRequestContent) GetGroupid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value
// and a boolean to check if the value has been set.
func (o *CreateGroupRequestContent) GetGroupidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Groupid, true
}

// SetGroupid sets field value
func (o *CreateGroupRequestContent) SetGroupid(v string) {
	o.Groupid = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CreateGroupRequestContent) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupRequestContent) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CreateGroupRequestContent) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CreateGroupRequestContent) SetComment(v string) {
	o.Comment = &v
}

func (o CreateGroupRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGroupRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groupid"] = o.Groupid
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableCreateGroupRequestContent struct {
	value *CreateGroupRequestContent
	isSet bool
}

func (v NullableCreateGroupRequestContent) Get() *CreateGroupRequestContent {
	return v.value
}

func (v *NullableCreateGroupRequestContent) Set(val *CreateGroupRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupRequestContent(val *CreateGroupRequestContent) *NullableCreateGroupRequestContent {
	return &NullableCreateGroupRequestContent{value: val, isSet: true}
}

func (v NullableCreateGroupRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


