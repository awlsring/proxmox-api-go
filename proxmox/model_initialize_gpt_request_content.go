/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the InitializeGPTRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitializeGPTRequestContent{}

// InitializeGPTRequestContent struct for InitializeGPTRequestContent
type InitializeGPTRequestContent struct {
	// Disk to initialize.
	Disk *string `json:"disk,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewInitializeGPTRequestContent instantiates a new InitializeGPTRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitializeGPTRequestContent() *InitializeGPTRequestContent {
	this := InitializeGPTRequestContent{}
	return &this
}

// NewInitializeGPTRequestContentWithDefaults instantiates a new InitializeGPTRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitializeGPTRequestContentWithDefaults() *InitializeGPTRequestContent {
	this := InitializeGPTRequestContent{}
	return &this
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *InitializeGPTRequestContent) GetDisk() string {
	if o == nil || isNil(o.Disk) {
		var ret string
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitializeGPTRequestContent) GetDiskOk() (*string, bool) {
	if o == nil || isNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *InitializeGPTRequestContent) HasDisk() bool {
	if o != nil && !isNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given string and assigns it to the Disk field.
func (o *InitializeGPTRequestContent) SetDisk(v string) {
	o.Disk = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *InitializeGPTRequestContent) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitializeGPTRequestContent) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *InitializeGPTRequestContent) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *InitializeGPTRequestContent) SetUuid(v string) {
	o.Uuid = &v
}

func (o InitializeGPTRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitializeGPTRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableInitializeGPTRequestContent struct {
	value *InitializeGPTRequestContent
	isSet bool
}

func (v NullableInitializeGPTRequestContent) Get() *InitializeGPTRequestContent {
	return v.value
}

func (v *NullableInitializeGPTRequestContent) Set(val *InitializeGPTRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableInitializeGPTRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableInitializeGPTRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitializeGPTRequestContent(val *InitializeGPTRequestContent) *NullableInitializeGPTRequestContent {
	return &NullableInitializeGPTRequestContent{value: val, isSet: true}
}

func (v NullableInitializeGPTRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitializeGPTRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


