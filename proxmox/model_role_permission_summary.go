/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the RolePermissionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolePermissionSummary{}

// RolePermissionSummary struct for RolePermissionSummary
type RolePermissionSummary struct {
	// An integer used to represent a boolean. 0 is false, 1 is true.
	DatastoreAllocate *float32 `json:"Datastore.Allocate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	DatastoreAllocateSpace *float32 `json:"Datastore.AllocateSpace,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	DatastoreAudit *float32 `json:"Datastore.Audit,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	DatastoreAllocateTemplate *float32 `json:"Datastore.AllocateTemplate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	GroupAllocate *float32 `json:"Group.Allocate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	PermissionModify *float32 `json:"Permission.Modify,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	PoolAllocate *float32 `json:"Pool.Allocate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	PoolAudit *float32 `json:"Pool.Audit,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	RealmAllocate *float32 `json:"Realm.Allocate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	RealmAllocateUser *float32 `json:"Realm.AllocateUser,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SDNAllocate *float32 `json:"SDN.Allocate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SDNAudit *float32 `json:"SDN.Audit,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SysAudit *float32 `json:"Sys.Audit,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SysModify *float32 `json:"Sys.Modify,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SysConsole *float32 `json:"Sys.Console,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SysIncoming *float32 `json:"Sys.Incoming,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SysPowerMgmt *float32 `json:"Sys.PowerMgmt,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	SysSyslog *float32 `json:"Sys.Syslog,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	UserModify *float32 `json:"User.Modify,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMAllocate *float32 `json:"VM.Allocate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMAudit *float32 `json:"VM.Audit,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMBackup *float32 `json:"VM.Backup,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMClone *float32 `json:"VM.Clone,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigCDROM *float32 `json:"VM.Config.CDROM,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigCPU *float32 `json:"VM.Config.CPU,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigCloudinit *float32 `json:"VM.Config.Cloudinit,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigDisk *float32 `json:"VM.Config.Disk,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigHWType *float32 `json:"VM.Config.HWType,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigMemory *float32 `json:"VM.Config.Memory,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigNetwork *float32 `json:"VM.Config.Network,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConfigOptions *float32 `json:"VM.Config.Options,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMConsole *float32 `json:"VM.Console,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMMigrate *float32 `json:"VM.Migrate,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMMonitor *float32 `json:"VM.Monitor,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMPowerMgmt *float32 `json:"VM.PowerMgmt,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMSnapshot *float32 `json:"VM.Snapshot,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	VMSnapshotRollback *float32 `json:"VM.Snapshot.Rollback,omitempty"`
}

// NewRolePermissionSummary instantiates a new RolePermissionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionSummary() *RolePermissionSummary {
	this := RolePermissionSummary{}
	return &this
}

// NewRolePermissionSummaryWithDefaults instantiates a new RolePermissionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionSummaryWithDefaults() *RolePermissionSummary {
	this := RolePermissionSummary{}
	return &this
}

// GetDatastoreAllocate returns the DatastoreAllocate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetDatastoreAllocate() float32 {
	if o == nil || IsNil(o.DatastoreAllocate) {
		var ret float32
		return ret
	}
	return *o.DatastoreAllocate
}

// GetDatastoreAllocateOk returns a tuple with the DatastoreAllocate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetDatastoreAllocateOk() (*float32, bool) {
	if o == nil || IsNil(o.DatastoreAllocate) {
		return nil, false
	}
	return o.DatastoreAllocate, true
}

// HasDatastoreAllocate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasDatastoreAllocate() bool {
	if o != nil && !IsNil(o.DatastoreAllocate) {
		return true
	}

	return false
}

// SetDatastoreAllocate gets a reference to the given float32 and assigns it to the DatastoreAllocate field.
func (o *RolePermissionSummary) SetDatastoreAllocate(v float32) {
	o.DatastoreAllocate = &v
}

// GetDatastoreAllocateSpace returns the DatastoreAllocateSpace field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetDatastoreAllocateSpace() float32 {
	if o == nil || IsNil(o.DatastoreAllocateSpace) {
		var ret float32
		return ret
	}
	return *o.DatastoreAllocateSpace
}

// GetDatastoreAllocateSpaceOk returns a tuple with the DatastoreAllocateSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetDatastoreAllocateSpaceOk() (*float32, bool) {
	if o == nil || IsNil(o.DatastoreAllocateSpace) {
		return nil, false
	}
	return o.DatastoreAllocateSpace, true
}

// HasDatastoreAllocateSpace returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasDatastoreAllocateSpace() bool {
	if o != nil && !IsNil(o.DatastoreAllocateSpace) {
		return true
	}

	return false
}

// SetDatastoreAllocateSpace gets a reference to the given float32 and assigns it to the DatastoreAllocateSpace field.
func (o *RolePermissionSummary) SetDatastoreAllocateSpace(v float32) {
	o.DatastoreAllocateSpace = &v
}

// GetDatastoreAudit returns the DatastoreAudit field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetDatastoreAudit() float32 {
	if o == nil || IsNil(o.DatastoreAudit) {
		var ret float32
		return ret
	}
	return *o.DatastoreAudit
}

// GetDatastoreAuditOk returns a tuple with the DatastoreAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetDatastoreAuditOk() (*float32, bool) {
	if o == nil || IsNil(o.DatastoreAudit) {
		return nil, false
	}
	return o.DatastoreAudit, true
}

// HasDatastoreAudit returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasDatastoreAudit() bool {
	if o != nil && !IsNil(o.DatastoreAudit) {
		return true
	}

	return false
}

// SetDatastoreAudit gets a reference to the given float32 and assigns it to the DatastoreAudit field.
func (o *RolePermissionSummary) SetDatastoreAudit(v float32) {
	o.DatastoreAudit = &v
}

// GetDatastoreAllocateTemplate returns the DatastoreAllocateTemplate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetDatastoreAllocateTemplate() float32 {
	if o == nil || IsNil(o.DatastoreAllocateTemplate) {
		var ret float32
		return ret
	}
	return *o.DatastoreAllocateTemplate
}

// GetDatastoreAllocateTemplateOk returns a tuple with the DatastoreAllocateTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetDatastoreAllocateTemplateOk() (*float32, bool) {
	if o == nil || IsNil(o.DatastoreAllocateTemplate) {
		return nil, false
	}
	return o.DatastoreAllocateTemplate, true
}

// HasDatastoreAllocateTemplate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasDatastoreAllocateTemplate() bool {
	if o != nil && !IsNil(o.DatastoreAllocateTemplate) {
		return true
	}

	return false
}

// SetDatastoreAllocateTemplate gets a reference to the given float32 and assigns it to the DatastoreAllocateTemplate field.
func (o *RolePermissionSummary) SetDatastoreAllocateTemplate(v float32) {
	o.DatastoreAllocateTemplate = &v
}

// GetGroupAllocate returns the GroupAllocate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetGroupAllocate() float32 {
	if o == nil || IsNil(o.GroupAllocate) {
		var ret float32
		return ret
	}
	return *o.GroupAllocate
}

// GetGroupAllocateOk returns a tuple with the GroupAllocate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetGroupAllocateOk() (*float32, bool) {
	if o == nil || IsNil(o.GroupAllocate) {
		return nil, false
	}
	return o.GroupAllocate, true
}

// HasGroupAllocate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasGroupAllocate() bool {
	if o != nil && !IsNil(o.GroupAllocate) {
		return true
	}

	return false
}

// SetGroupAllocate gets a reference to the given float32 and assigns it to the GroupAllocate field.
func (o *RolePermissionSummary) SetGroupAllocate(v float32) {
	o.GroupAllocate = &v
}

// GetPermissionModify returns the PermissionModify field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetPermissionModify() float32 {
	if o == nil || IsNil(o.PermissionModify) {
		var ret float32
		return ret
	}
	return *o.PermissionModify
}

// GetPermissionModifyOk returns a tuple with the PermissionModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetPermissionModifyOk() (*float32, bool) {
	if o == nil || IsNil(o.PermissionModify) {
		return nil, false
	}
	return o.PermissionModify, true
}

// HasPermissionModify returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasPermissionModify() bool {
	if o != nil && !IsNil(o.PermissionModify) {
		return true
	}

	return false
}

// SetPermissionModify gets a reference to the given float32 and assigns it to the PermissionModify field.
func (o *RolePermissionSummary) SetPermissionModify(v float32) {
	o.PermissionModify = &v
}

// GetPoolAllocate returns the PoolAllocate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetPoolAllocate() float32 {
	if o == nil || IsNil(o.PoolAllocate) {
		var ret float32
		return ret
	}
	return *o.PoolAllocate
}

// GetPoolAllocateOk returns a tuple with the PoolAllocate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetPoolAllocateOk() (*float32, bool) {
	if o == nil || IsNil(o.PoolAllocate) {
		return nil, false
	}
	return o.PoolAllocate, true
}

// HasPoolAllocate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasPoolAllocate() bool {
	if o != nil && !IsNil(o.PoolAllocate) {
		return true
	}

	return false
}

// SetPoolAllocate gets a reference to the given float32 and assigns it to the PoolAllocate field.
func (o *RolePermissionSummary) SetPoolAllocate(v float32) {
	o.PoolAllocate = &v
}

// GetPoolAudit returns the PoolAudit field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetPoolAudit() float32 {
	if o == nil || IsNil(o.PoolAudit) {
		var ret float32
		return ret
	}
	return *o.PoolAudit
}

// GetPoolAuditOk returns a tuple with the PoolAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetPoolAuditOk() (*float32, bool) {
	if o == nil || IsNil(o.PoolAudit) {
		return nil, false
	}
	return o.PoolAudit, true
}

// HasPoolAudit returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasPoolAudit() bool {
	if o != nil && !IsNil(o.PoolAudit) {
		return true
	}

	return false
}

// SetPoolAudit gets a reference to the given float32 and assigns it to the PoolAudit field.
func (o *RolePermissionSummary) SetPoolAudit(v float32) {
	o.PoolAudit = &v
}

// GetRealmAllocate returns the RealmAllocate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetRealmAllocate() float32 {
	if o == nil || IsNil(o.RealmAllocate) {
		var ret float32
		return ret
	}
	return *o.RealmAllocate
}

// GetRealmAllocateOk returns a tuple with the RealmAllocate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetRealmAllocateOk() (*float32, bool) {
	if o == nil || IsNil(o.RealmAllocate) {
		return nil, false
	}
	return o.RealmAllocate, true
}

// HasRealmAllocate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasRealmAllocate() bool {
	if o != nil && !IsNil(o.RealmAllocate) {
		return true
	}

	return false
}

// SetRealmAllocate gets a reference to the given float32 and assigns it to the RealmAllocate field.
func (o *RolePermissionSummary) SetRealmAllocate(v float32) {
	o.RealmAllocate = &v
}

// GetRealmAllocateUser returns the RealmAllocateUser field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetRealmAllocateUser() float32 {
	if o == nil || IsNil(o.RealmAllocateUser) {
		var ret float32
		return ret
	}
	return *o.RealmAllocateUser
}

// GetRealmAllocateUserOk returns a tuple with the RealmAllocateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetRealmAllocateUserOk() (*float32, bool) {
	if o == nil || IsNil(o.RealmAllocateUser) {
		return nil, false
	}
	return o.RealmAllocateUser, true
}

// HasRealmAllocateUser returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasRealmAllocateUser() bool {
	if o != nil && !IsNil(o.RealmAllocateUser) {
		return true
	}

	return false
}

// SetRealmAllocateUser gets a reference to the given float32 and assigns it to the RealmAllocateUser field.
func (o *RolePermissionSummary) SetRealmAllocateUser(v float32) {
	o.RealmAllocateUser = &v
}

// GetSDNAllocate returns the SDNAllocate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSDNAllocate() float32 {
	if o == nil || IsNil(o.SDNAllocate) {
		var ret float32
		return ret
	}
	return *o.SDNAllocate
}

// GetSDNAllocateOk returns a tuple with the SDNAllocate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSDNAllocateOk() (*float32, bool) {
	if o == nil || IsNil(o.SDNAllocate) {
		return nil, false
	}
	return o.SDNAllocate, true
}

// HasSDNAllocate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSDNAllocate() bool {
	if o != nil && !IsNil(o.SDNAllocate) {
		return true
	}

	return false
}

// SetSDNAllocate gets a reference to the given float32 and assigns it to the SDNAllocate field.
func (o *RolePermissionSummary) SetSDNAllocate(v float32) {
	o.SDNAllocate = &v
}

// GetSDNAudit returns the SDNAudit field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSDNAudit() float32 {
	if o == nil || IsNil(o.SDNAudit) {
		var ret float32
		return ret
	}
	return *o.SDNAudit
}

// GetSDNAuditOk returns a tuple with the SDNAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSDNAuditOk() (*float32, bool) {
	if o == nil || IsNil(o.SDNAudit) {
		return nil, false
	}
	return o.SDNAudit, true
}

// HasSDNAudit returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSDNAudit() bool {
	if o != nil && !IsNil(o.SDNAudit) {
		return true
	}

	return false
}

// SetSDNAudit gets a reference to the given float32 and assigns it to the SDNAudit field.
func (o *RolePermissionSummary) SetSDNAudit(v float32) {
	o.SDNAudit = &v
}

// GetSysAudit returns the SysAudit field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSysAudit() float32 {
	if o == nil || IsNil(o.SysAudit) {
		var ret float32
		return ret
	}
	return *o.SysAudit
}

// GetSysAuditOk returns a tuple with the SysAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSysAuditOk() (*float32, bool) {
	if o == nil || IsNil(o.SysAudit) {
		return nil, false
	}
	return o.SysAudit, true
}

// HasSysAudit returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSysAudit() bool {
	if o != nil && !IsNil(o.SysAudit) {
		return true
	}

	return false
}

// SetSysAudit gets a reference to the given float32 and assigns it to the SysAudit field.
func (o *RolePermissionSummary) SetSysAudit(v float32) {
	o.SysAudit = &v
}

// GetSysModify returns the SysModify field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSysModify() float32 {
	if o == nil || IsNil(o.SysModify) {
		var ret float32
		return ret
	}
	return *o.SysModify
}

// GetSysModifyOk returns a tuple with the SysModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSysModifyOk() (*float32, bool) {
	if o == nil || IsNil(o.SysModify) {
		return nil, false
	}
	return o.SysModify, true
}

// HasSysModify returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSysModify() bool {
	if o != nil && !IsNil(o.SysModify) {
		return true
	}

	return false
}

// SetSysModify gets a reference to the given float32 and assigns it to the SysModify field.
func (o *RolePermissionSummary) SetSysModify(v float32) {
	o.SysModify = &v
}

// GetSysConsole returns the SysConsole field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSysConsole() float32 {
	if o == nil || IsNil(o.SysConsole) {
		var ret float32
		return ret
	}
	return *o.SysConsole
}

// GetSysConsoleOk returns a tuple with the SysConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSysConsoleOk() (*float32, bool) {
	if o == nil || IsNil(o.SysConsole) {
		return nil, false
	}
	return o.SysConsole, true
}

// HasSysConsole returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSysConsole() bool {
	if o != nil && !IsNil(o.SysConsole) {
		return true
	}

	return false
}

// SetSysConsole gets a reference to the given float32 and assigns it to the SysConsole field.
func (o *RolePermissionSummary) SetSysConsole(v float32) {
	o.SysConsole = &v
}

// GetSysIncoming returns the SysIncoming field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSysIncoming() float32 {
	if o == nil || IsNil(o.SysIncoming) {
		var ret float32
		return ret
	}
	return *o.SysIncoming
}

// GetSysIncomingOk returns a tuple with the SysIncoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSysIncomingOk() (*float32, bool) {
	if o == nil || IsNil(o.SysIncoming) {
		return nil, false
	}
	return o.SysIncoming, true
}

// HasSysIncoming returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSysIncoming() bool {
	if o != nil && !IsNil(o.SysIncoming) {
		return true
	}

	return false
}

// SetSysIncoming gets a reference to the given float32 and assigns it to the SysIncoming field.
func (o *RolePermissionSummary) SetSysIncoming(v float32) {
	o.SysIncoming = &v
}

// GetSysPowerMgmt returns the SysPowerMgmt field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSysPowerMgmt() float32 {
	if o == nil || IsNil(o.SysPowerMgmt) {
		var ret float32
		return ret
	}
	return *o.SysPowerMgmt
}

// GetSysPowerMgmtOk returns a tuple with the SysPowerMgmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSysPowerMgmtOk() (*float32, bool) {
	if o == nil || IsNil(o.SysPowerMgmt) {
		return nil, false
	}
	return o.SysPowerMgmt, true
}

// HasSysPowerMgmt returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSysPowerMgmt() bool {
	if o != nil && !IsNil(o.SysPowerMgmt) {
		return true
	}

	return false
}

// SetSysPowerMgmt gets a reference to the given float32 and assigns it to the SysPowerMgmt field.
func (o *RolePermissionSummary) SetSysPowerMgmt(v float32) {
	o.SysPowerMgmt = &v
}

// GetSysSyslog returns the SysSyslog field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetSysSyslog() float32 {
	if o == nil || IsNil(o.SysSyslog) {
		var ret float32
		return ret
	}
	return *o.SysSyslog
}

// GetSysSyslogOk returns a tuple with the SysSyslog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetSysSyslogOk() (*float32, bool) {
	if o == nil || IsNil(o.SysSyslog) {
		return nil, false
	}
	return o.SysSyslog, true
}

// HasSysSyslog returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasSysSyslog() bool {
	if o != nil && !IsNil(o.SysSyslog) {
		return true
	}

	return false
}

// SetSysSyslog gets a reference to the given float32 and assigns it to the SysSyslog field.
func (o *RolePermissionSummary) SetSysSyslog(v float32) {
	o.SysSyslog = &v
}

// GetUserModify returns the UserModify field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetUserModify() float32 {
	if o == nil || IsNil(o.UserModify) {
		var ret float32
		return ret
	}
	return *o.UserModify
}

// GetUserModifyOk returns a tuple with the UserModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetUserModifyOk() (*float32, bool) {
	if o == nil || IsNil(o.UserModify) {
		return nil, false
	}
	return o.UserModify, true
}

// HasUserModify returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasUserModify() bool {
	if o != nil && !IsNil(o.UserModify) {
		return true
	}

	return false
}

// SetUserModify gets a reference to the given float32 and assigns it to the UserModify field.
func (o *RolePermissionSummary) SetUserModify(v float32) {
	o.UserModify = &v
}

// GetVMAllocate returns the VMAllocate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMAllocate() float32 {
	if o == nil || IsNil(o.VMAllocate) {
		var ret float32
		return ret
	}
	return *o.VMAllocate
}

// GetVMAllocateOk returns a tuple with the VMAllocate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMAllocateOk() (*float32, bool) {
	if o == nil || IsNil(o.VMAllocate) {
		return nil, false
	}
	return o.VMAllocate, true
}

// HasVMAllocate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMAllocate() bool {
	if o != nil && !IsNil(o.VMAllocate) {
		return true
	}

	return false
}

// SetVMAllocate gets a reference to the given float32 and assigns it to the VMAllocate field.
func (o *RolePermissionSummary) SetVMAllocate(v float32) {
	o.VMAllocate = &v
}

// GetVMAudit returns the VMAudit field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMAudit() float32 {
	if o == nil || IsNil(o.VMAudit) {
		var ret float32
		return ret
	}
	return *o.VMAudit
}

// GetVMAuditOk returns a tuple with the VMAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMAuditOk() (*float32, bool) {
	if o == nil || IsNil(o.VMAudit) {
		return nil, false
	}
	return o.VMAudit, true
}

// HasVMAudit returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMAudit() bool {
	if o != nil && !IsNil(o.VMAudit) {
		return true
	}

	return false
}

// SetVMAudit gets a reference to the given float32 and assigns it to the VMAudit field.
func (o *RolePermissionSummary) SetVMAudit(v float32) {
	o.VMAudit = &v
}

// GetVMBackup returns the VMBackup field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMBackup() float32 {
	if o == nil || IsNil(o.VMBackup) {
		var ret float32
		return ret
	}
	return *o.VMBackup
}

// GetVMBackupOk returns a tuple with the VMBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMBackupOk() (*float32, bool) {
	if o == nil || IsNil(o.VMBackup) {
		return nil, false
	}
	return o.VMBackup, true
}

// HasVMBackup returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMBackup() bool {
	if o != nil && !IsNil(o.VMBackup) {
		return true
	}

	return false
}

// SetVMBackup gets a reference to the given float32 and assigns it to the VMBackup field.
func (o *RolePermissionSummary) SetVMBackup(v float32) {
	o.VMBackup = &v
}

// GetVMClone returns the VMClone field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMClone() float32 {
	if o == nil || IsNil(o.VMClone) {
		var ret float32
		return ret
	}
	return *o.VMClone
}

// GetVMCloneOk returns a tuple with the VMClone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMCloneOk() (*float32, bool) {
	if o == nil || IsNil(o.VMClone) {
		return nil, false
	}
	return o.VMClone, true
}

// HasVMClone returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMClone() bool {
	if o != nil && !IsNil(o.VMClone) {
		return true
	}

	return false
}

// SetVMClone gets a reference to the given float32 and assigns it to the VMClone field.
func (o *RolePermissionSummary) SetVMClone(v float32) {
	o.VMClone = &v
}

// GetVMConfigCDROM returns the VMConfigCDROM field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigCDROM() float32 {
	if o == nil || IsNil(o.VMConfigCDROM) {
		var ret float32
		return ret
	}
	return *o.VMConfigCDROM
}

// GetVMConfigCDROMOk returns a tuple with the VMConfigCDROM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigCDROMOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigCDROM) {
		return nil, false
	}
	return o.VMConfigCDROM, true
}

// HasVMConfigCDROM returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigCDROM() bool {
	if o != nil && !IsNil(o.VMConfigCDROM) {
		return true
	}

	return false
}

// SetVMConfigCDROM gets a reference to the given float32 and assigns it to the VMConfigCDROM field.
func (o *RolePermissionSummary) SetVMConfigCDROM(v float32) {
	o.VMConfigCDROM = &v
}

// GetVMConfigCPU returns the VMConfigCPU field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigCPU() float32 {
	if o == nil || IsNil(o.VMConfigCPU) {
		var ret float32
		return ret
	}
	return *o.VMConfigCPU
}

// GetVMConfigCPUOk returns a tuple with the VMConfigCPU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigCPUOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigCPU) {
		return nil, false
	}
	return o.VMConfigCPU, true
}

// HasVMConfigCPU returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigCPU() bool {
	if o != nil && !IsNil(o.VMConfigCPU) {
		return true
	}

	return false
}

// SetVMConfigCPU gets a reference to the given float32 and assigns it to the VMConfigCPU field.
func (o *RolePermissionSummary) SetVMConfigCPU(v float32) {
	o.VMConfigCPU = &v
}

// GetVMConfigCloudinit returns the VMConfigCloudinit field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigCloudinit() float32 {
	if o == nil || IsNil(o.VMConfigCloudinit) {
		var ret float32
		return ret
	}
	return *o.VMConfigCloudinit
}

// GetVMConfigCloudinitOk returns a tuple with the VMConfigCloudinit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigCloudinitOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigCloudinit) {
		return nil, false
	}
	return o.VMConfigCloudinit, true
}

// HasVMConfigCloudinit returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigCloudinit() bool {
	if o != nil && !IsNil(o.VMConfigCloudinit) {
		return true
	}

	return false
}

// SetVMConfigCloudinit gets a reference to the given float32 and assigns it to the VMConfigCloudinit field.
func (o *RolePermissionSummary) SetVMConfigCloudinit(v float32) {
	o.VMConfigCloudinit = &v
}

// GetVMConfigDisk returns the VMConfigDisk field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigDisk() float32 {
	if o == nil || IsNil(o.VMConfigDisk) {
		var ret float32
		return ret
	}
	return *o.VMConfigDisk
}

// GetVMConfigDiskOk returns a tuple with the VMConfigDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigDiskOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigDisk) {
		return nil, false
	}
	return o.VMConfigDisk, true
}

// HasVMConfigDisk returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigDisk() bool {
	if o != nil && !IsNil(o.VMConfigDisk) {
		return true
	}

	return false
}

// SetVMConfigDisk gets a reference to the given float32 and assigns it to the VMConfigDisk field.
func (o *RolePermissionSummary) SetVMConfigDisk(v float32) {
	o.VMConfigDisk = &v
}

// GetVMConfigHWType returns the VMConfigHWType field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigHWType() float32 {
	if o == nil || IsNil(o.VMConfigHWType) {
		var ret float32
		return ret
	}
	return *o.VMConfigHWType
}

// GetVMConfigHWTypeOk returns a tuple with the VMConfigHWType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigHWTypeOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigHWType) {
		return nil, false
	}
	return o.VMConfigHWType, true
}

// HasVMConfigHWType returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigHWType() bool {
	if o != nil && !IsNil(o.VMConfigHWType) {
		return true
	}

	return false
}

// SetVMConfigHWType gets a reference to the given float32 and assigns it to the VMConfigHWType field.
func (o *RolePermissionSummary) SetVMConfigHWType(v float32) {
	o.VMConfigHWType = &v
}

// GetVMConfigMemory returns the VMConfigMemory field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigMemory() float32 {
	if o == nil || IsNil(o.VMConfigMemory) {
		var ret float32
		return ret
	}
	return *o.VMConfigMemory
}

// GetVMConfigMemoryOk returns a tuple with the VMConfigMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigMemoryOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigMemory) {
		return nil, false
	}
	return o.VMConfigMemory, true
}

// HasVMConfigMemory returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigMemory() bool {
	if o != nil && !IsNil(o.VMConfigMemory) {
		return true
	}

	return false
}

// SetVMConfigMemory gets a reference to the given float32 and assigns it to the VMConfigMemory field.
func (o *RolePermissionSummary) SetVMConfigMemory(v float32) {
	o.VMConfigMemory = &v
}

// GetVMConfigNetwork returns the VMConfigNetwork field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigNetwork() float32 {
	if o == nil || IsNil(o.VMConfigNetwork) {
		var ret float32
		return ret
	}
	return *o.VMConfigNetwork
}

// GetVMConfigNetworkOk returns a tuple with the VMConfigNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigNetworkOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigNetwork) {
		return nil, false
	}
	return o.VMConfigNetwork, true
}

// HasVMConfigNetwork returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigNetwork() bool {
	if o != nil && !IsNil(o.VMConfigNetwork) {
		return true
	}

	return false
}

// SetVMConfigNetwork gets a reference to the given float32 and assigns it to the VMConfigNetwork field.
func (o *RolePermissionSummary) SetVMConfigNetwork(v float32) {
	o.VMConfigNetwork = &v
}

// GetVMConfigOptions returns the VMConfigOptions field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConfigOptions() float32 {
	if o == nil || IsNil(o.VMConfigOptions) {
		var ret float32
		return ret
	}
	return *o.VMConfigOptions
}

// GetVMConfigOptionsOk returns a tuple with the VMConfigOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConfigOptionsOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConfigOptions) {
		return nil, false
	}
	return o.VMConfigOptions, true
}

// HasVMConfigOptions returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConfigOptions() bool {
	if o != nil && !IsNil(o.VMConfigOptions) {
		return true
	}

	return false
}

// SetVMConfigOptions gets a reference to the given float32 and assigns it to the VMConfigOptions field.
func (o *RolePermissionSummary) SetVMConfigOptions(v float32) {
	o.VMConfigOptions = &v
}

// GetVMConsole returns the VMConsole field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMConsole() float32 {
	if o == nil || IsNil(o.VMConsole) {
		var ret float32
		return ret
	}
	return *o.VMConsole
}

// GetVMConsoleOk returns a tuple with the VMConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMConsoleOk() (*float32, bool) {
	if o == nil || IsNil(o.VMConsole) {
		return nil, false
	}
	return o.VMConsole, true
}

// HasVMConsole returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMConsole() bool {
	if o != nil && !IsNil(o.VMConsole) {
		return true
	}

	return false
}

// SetVMConsole gets a reference to the given float32 and assigns it to the VMConsole field.
func (o *RolePermissionSummary) SetVMConsole(v float32) {
	o.VMConsole = &v
}

// GetVMMigrate returns the VMMigrate field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMMigrate() float32 {
	if o == nil || IsNil(o.VMMigrate) {
		var ret float32
		return ret
	}
	return *o.VMMigrate
}

// GetVMMigrateOk returns a tuple with the VMMigrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMMigrateOk() (*float32, bool) {
	if o == nil || IsNil(o.VMMigrate) {
		return nil, false
	}
	return o.VMMigrate, true
}

// HasVMMigrate returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMMigrate() bool {
	if o != nil && !IsNil(o.VMMigrate) {
		return true
	}

	return false
}

// SetVMMigrate gets a reference to the given float32 and assigns it to the VMMigrate field.
func (o *RolePermissionSummary) SetVMMigrate(v float32) {
	o.VMMigrate = &v
}

// GetVMMonitor returns the VMMonitor field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMMonitor() float32 {
	if o == nil || IsNil(o.VMMonitor) {
		var ret float32
		return ret
	}
	return *o.VMMonitor
}

// GetVMMonitorOk returns a tuple with the VMMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMMonitorOk() (*float32, bool) {
	if o == nil || IsNil(o.VMMonitor) {
		return nil, false
	}
	return o.VMMonitor, true
}

// HasVMMonitor returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMMonitor() bool {
	if o != nil && !IsNil(o.VMMonitor) {
		return true
	}

	return false
}

// SetVMMonitor gets a reference to the given float32 and assigns it to the VMMonitor field.
func (o *RolePermissionSummary) SetVMMonitor(v float32) {
	o.VMMonitor = &v
}

// GetVMPowerMgmt returns the VMPowerMgmt field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMPowerMgmt() float32 {
	if o == nil || IsNil(o.VMPowerMgmt) {
		var ret float32
		return ret
	}
	return *o.VMPowerMgmt
}

// GetVMPowerMgmtOk returns a tuple with the VMPowerMgmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMPowerMgmtOk() (*float32, bool) {
	if o == nil || IsNil(o.VMPowerMgmt) {
		return nil, false
	}
	return o.VMPowerMgmt, true
}

// HasVMPowerMgmt returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMPowerMgmt() bool {
	if o != nil && !IsNil(o.VMPowerMgmt) {
		return true
	}

	return false
}

// SetVMPowerMgmt gets a reference to the given float32 and assigns it to the VMPowerMgmt field.
func (o *RolePermissionSummary) SetVMPowerMgmt(v float32) {
	o.VMPowerMgmt = &v
}

// GetVMSnapshot returns the VMSnapshot field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMSnapshot() float32 {
	if o == nil || IsNil(o.VMSnapshot) {
		var ret float32
		return ret
	}
	return *o.VMSnapshot
}

// GetVMSnapshotOk returns a tuple with the VMSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMSnapshotOk() (*float32, bool) {
	if o == nil || IsNil(o.VMSnapshot) {
		return nil, false
	}
	return o.VMSnapshot, true
}

// HasVMSnapshot returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMSnapshot() bool {
	if o != nil && !IsNil(o.VMSnapshot) {
		return true
	}

	return false
}

// SetVMSnapshot gets a reference to the given float32 and assigns it to the VMSnapshot field.
func (o *RolePermissionSummary) SetVMSnapshot(v float32) {
	o.VMSnapshot = &v
}

// GetVMSnapshotRollback returns the VMSnapshotRollback field value if set, zero value otherwise.
func (o *RolePermissionSummary) GetVMSnapshotRollback() float32 {
	if o == nil || IsNil(o.VMSnapshotRollback) {
		var ret float32
		return ret
	}
	return *o.VMSnapshotRollback
}

// GetVMSnapshotRollbackOk returns a tuple with the VMSnapshotRollback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionSummary) GetVMSnapshotRollbackOk() (*float32, bool) {
	if o == nil || IsNil(o.VMSnapshotRollback) {
		return nil, false
	}
	return o.VMSnapshotRollback, true
}

// HasVMSnapshotRollback returns a boolean if a field has been set.
func (o *RolePermissionSummary) HasVMSnapshotRollback() bool {
	if o != nil && !IsNil(o.VMSnapshotRollback) {
		return true
	}

	return false
}

// SetVMSnapshotRollback gets a reference to the given float32 and assigns it to the VMSnapshotRollback field.
func (o *RolePermissionSummary) SetVMSnapshotRollback(v float32) {
	o.VMSnapshotRollback = &v
}

func (o RolePermissionSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolePermissionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatastoreAllocate) {
		toSerialize["Datastore.Allocate"] = o.DatastoreAllocate
	}
	if !IsNil(o.DatastoreAllocateSpace) {
		toSerialize["Datastore.AllocateSpace"] = o.DatastoreAllocateSpace
	}
	if !IsNil(o.DatastoreAudit) {
		toSerialize["Datastore.Audit"] = o.DatastoreAudit
	}
	if !IsNil(o.DatastoreAllocateTemplate) {
		toSerialize["Datastore.AllocateTemplate"] = o.DatastoreAllocateTemplate
	}
	if !IsNil(o.GroupAllocate) {
		toSerialize["Group.Allocate"] = o.GroupAllocate
	}
	if !IsNil(o.PermissionModify) {
		toSerialize["Permission.Modify"] = o.PermissionModify
	}
	if !IsNil(o.PoolAllocate) {
		toSerialize["Pool.Allocate"] = o.PoolAllocate
	}
	if !IsNil(o.PoolAudit) {
		toSerialize["Pool.Audit"] = o.PoolAudit
	}
	if !IsNil(o.RealmAllocate) {
		toSerialize["Realm.Allocate"] = o.RealmAllocate
	}
	if !IsNil(o.RealmAllocateUser) {
		toSerialize["Realm.AllocateUser"] = o.RealmAllocateUser
	}
	if !IsNil(o.SDNAllocate) {
		toSerialize["SDN.Allocate"] = o.SDNAllocate
	}
	if !IsNil(o.SDNAudit) {
		toSerialize["SDN.Audit"] = o.SDNAudit
	}
	if !IsNil(o.SysAudit) {
		toSerialize["Sys.Audit"] = o.SysAudit
	}
	if !IsNil(o.SysModify) {
		toSerialize["Sys.Modify"] = o.SysModify
	}
	if !IsNil(o.SysConsole) {
		toSerialize["Sys.Console"] = o.SysConsole
	}
	if !IsNil(o.SysIncoming) {
		toSerialize["Sys.Incoming"] = o.SysIncoming
	}
	if !IsNil(o.SysPowerMgmt) {
		toSerialize["Sys.PowerMgmt"] = o.SysPowerMgmt
	}
	if !IsNil(o.SysSyslog) {
		toSerialize["Sys.Syslog"] = o.SysSyslog
	}
	if !IsNil(o.UserModify) {
		toSerialize["User.Modify"] = o.UserModify
	}
	if !IsNil(o.VMAllocate) {
		toSerialize["VM.Allocate"] = o.VMAllocate
	}
	if !IsNil(o.VMAudit) {
		toSerialize["VM.Audit"] = o.VMAudit
	}
	if !IsNil(o.VMBackup) {
		toSerialize["VM.Backup"] = o.VMBackup
	}
	if !IsNil(o.VMClone) {
		toSerialize["VM.Clone"] = o.VMClone
	}
	if !IsNil(o.VMConfigCDROM) {
		toSerialize["VM.Config.CDROM"] = o.VMConfigCDROM
	}
	if !IsNil(o.VMConfigCPU) {
		toSerialize["VM.Config.CPU"] = o.VMConfigCPU
	}
	if !IsNil(o.VMConfigCloudinit) {
		toSerialize["VM.Config.Cloudinit"] = o.VMConfigCloudinit
	}
	if !IsNil(o.VMConfigDisk) {
		toSerialize["VM.Config.Disk"] = o.VMConfigDisk
	}
	if !IsNil(o.VMConfigHWType) {
		toSerialize["VM.Config.HWType"] = o.VMConfigHWType
	}
	if !IsNil(o.VMConfigMemory) {
		toSerialize["VM.Config.Memory"] = o.VMConfigMemory
	}
	if !IsNil(o.VMConfigNetwork) {
		toSerialize["VM.Config.Network"] = o.VMConfigNetwork
	}
	if !IsNil(o.VMConfigOptions) {
		toSerialize["VM.Config.Options"] = o.VMConfigOptions
	}
	if !IsNil(o.VMConsole) {
		toSerialize["VM.Console"] = o.VMConsole
	}
	if !IsNil(o.VMMigrate) {
		toSerialize["VM.Migrate"] = o.VMMigrate
	}
	if !IsNil(o.VMMonitor) {
		toSerialize["VM.Monitor"] = o.VMMonitor
	}
	if !IsNil(o.VMPowerMgmt) {
		toSerialize["VM.PowerMgmt"] = o.VMPowerMgmt
	}
	if !IsNil(o.VMSnapshot) {
		toSerialize["VM.Snapshot"] = o.VMSnapshot
	}
	if !IsNil(o.VMSnapshotRollback) {
		toSerialize["VM.Snapshot.Rollback"] = o.VMSnapshotRollback
	}
	return toSerialize, nil
}

type NullableRolePermissionSummary struct {
	value *RolePermissionSummary
	isSet bool
}

func (v NullableRolePermissionSummary) Get() *RolePermissionSummary {
	return v.value
}

func (v *NullableRolePermissionSummary) Set(val *RolePermissionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionSummary(val *RolePermissionSummary) *NullableRolePermissionSummary {
	return &NullableRolePermissionSummary{value: val, isSet: true}
}

func (v NullableRolePermissionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


