/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the SnapshotSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotSummary{}

// SnapshotSummary struct for SnapshotSummary
type SnapshotSummary struct {
	// The snapshot name.
	Name string `json:"name"`
	// The snapshot description.
	Description string `json:"description"`
	// The snapshot name.
	Parent *string `json:"parent,omitempty"`
	// The snapshot time.
	Snaptime *float32 `json:"snaptime,omitempty"`
	// If the snapshot includes RAM.
	VmState *bool `json:"vmState,omitempty"`
}

// NewSnapshotSummary instantiates a new SnapshotSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotSummary(name string, description string) *SnapshotSummary {
	this := SnapshotSummary{}
	this.Name = name
	this.Description = description
	return &this
}

// NewSnapshotSummaryWithDefaults instantiates a new SnapshotSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotSummaryWithDefaults() *SnapshotSummary {
	this := SnapshotSummary{}
	return &this
}

// GetName returns the Name field value
func (o *SnapshotSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SnapshotSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SnapshotSummary) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *SnapshotSummary) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SnapshotSummary) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SnapshotSummary) SetDescription(v string) {
	o.Description = v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *SnapshotSummary) GetParent() string {
	if o == nil || IsNil(o.Parent) {
		var ret string
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSummary) GetParentOk() (*string, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *SnapshotSummary) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given string and assigns it to the Parent field.
func (o *SnapshotSummary) SetParent(v string) {
	o.Parent = &v
}

// GetSnaptime returns the Snaptime field value if set, zero value otherwise.
func (o *SnapshotSummary) GetSnaptime() float32 {
	if o == nil || IsNil(o.Snaptime) {
		var ret float32
		return ret
	}
	return *o.Snaptime
}

// GetSnaptimeOk returns a tuple with the Snaptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSummary) GetSnaptimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Snaptime) {
		return nil, false
	}
	return o.Snaptime, true
}

// HasSnaptime returns a boolean if a field has been set.
func (o *SnapshotSummary) HasSnaptime() bool {
	if o != nil && !IsNil(o.Snaptime) {
		return true
	}

	return false
}

// SetSnaptime gets a reference to the given float32 and assigns it to the Snaptime field.
func (o *SnapshotSummary) SetSnaptime(v float32) {
	o.Snaptime = &v
}

// GetVmState returns the VmState field value if set, zero value otherwise.
func (o *SnapshotSummary) GetVmState() bool {
	if o == nil || IsNil(o.VmState) {
		var ret bool
		return ret
	}
	return *o.VmState
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSummary) GetVmStateOk() (*bool, bool) {
	if o == nil || IsNil(o.VmState) {
		return nil, false
	}
	return o.VmState, true
}

// HasVmState returns a boolean if a field has been set.
func (o *SnapshotSummary) HasVmState() bool {
	if o != nil && !IsNil(o.VmState) {
		return true
	}

	return false
}

// SetVmState gets a reference to the given bool and assigns it to the VmState field.
func (o *SnapshotSummary) SetVmState(v bool) {
	o.VmState = &v
}

func (o SnapshotSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Snaptime) {
		toSerialize["snaptime"] = o.Snaptime
	}
	if !IsNil(o.VmState) {
		toSerialize["vmState"] = o.VmState
	}
	return toSerialize, nil
}

type NullableSnapshotSummary struct {
	value *SnapshotSummary
	isSet bool
}

func (v NullableSnapshotSummary) Get() *SnapshotSummary {
	return v.value
}

func (v *NullableSnapshotSummary) Set(val *SnapshotSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotSummary(val *SnapshotSummary) *NullableSnapshotSummary {
	return &NullableSnapshotSummary{value: val, isSet: true}
}

func (v NullableSnapshotSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


