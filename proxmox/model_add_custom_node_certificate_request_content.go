/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// AddCustomNodeCertificateRequestContent struct for AddCustomNodeCertificateRequestContent
type AddCustomNodeCertificateRequestContent struct {
	// PEM encoded certificate.
	Certificates string `json:"certificates"`
	// Overwrite existing custom or ACME certificate.
	Force *float32 `json:"force,omitempty"`
	// PEM encoded private key.
	Key *string `json:"key,omitempty"`
	// Restart the PVE proxy.
	Restart *float32 `json:"restart,omitempty"`
}

// NewAddCustomNodeCertificateRequestContent instantiates a new AddCustomNodeCertificateRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCustomNodeCertificateRequestContent(certificates string) *AddCustomNodeCertificateRequestContent {
	this := AddCustomNodeCertificateRequestContent{}
	this.Certificates = certificates
	return &this
}

// NewAddCustomNodeCertificateRequestContentWithDefaults instantiates a new AddCustomNodeCertificateRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCustomNodeCertificateRequestContentWithDefaults() *AddCustomNodeCertificateRequestContent {
	this := AddCustomNodeCertificateRequestContent{}
	return &this
}

// GetCertificates returns the Certificates field value
func (o *AddCustomNodeCertificateRequestContent) GetCertificates() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value
// and a boolean to check if the value has been set.
func (o *AddCustomNodeCertificateRequestContent) GetCertificatesOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Certificates, true
}

// SetCertificates sets field value
func (o *AddCustomNodeCertificateRequestContent) SetCertificates(v string) {
	o.Certificates = v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *AddCustomNodeCertificateRequestContent) GetForce() float32 {
	if o == nil || isNil(o.Force) {
		var ret float32
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomNodeCertificateRequestContent) GetForceOk() (*float32, bool) {
	if o == nil || isNil(o.Force) {
    return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *AddCustomNodeCertificateRequestContent) HasForce() bool {
	if o != nil && !isNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given float32 and assigns it to the Force field.
func (o *AddCustomNodeCertificateRequestContent) SetForce(v float32) {
	o.Force = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *AddCustomNodeCertificateRequestContent) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomNodeCertificateRequestContent) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
    return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *AddCustomNodeCertificateRequestContent) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *AddCustomNodeCertificateRequestContent) SetKey(v string) {
	o.Key = &v
}

// GetRestart returns the Restart field value if set, zero value otherwise.
func (o *AddCustomNodeCertificateRequestContent) GetRestart() float32 {
	if o == nil || isNil(o.Restart) {
		var ret float32
		return ret
	}
	return *o.Restart
}

// GetRestartOk returns a tuple with the Restart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomNodeCertificateRequestContent) GetRestartOk() (*float32, bool) {
	if o == nil || isNil(o.Restart) {
    return nil, false
	}
	return o.Restart, true
}

// HasRestart returns a boolean if a field has been set.
func (o *AddCustomNodeCertificateRequestContent) HasRestart() bool {
	if o != nil && !isNil(o.Restart) {
		return true
	}

	return false
}

// SetRestart gets a reference to the given float32 and assigns it to the Restart field.
func (o *AddCustomNodeCertificateRequestContent) SetRestart(v float32) {
	o.Restart = &v
}

func (o AddCustomNodeCertificateRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificates"] = o.Certificates
	}
	if !isNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.Restart) {
		toSerialize["restart"] = o.Restart
	}
	return json.Marshal(toSerialize)
}

type NullableAddCustomNodeCertificateRequestContent struct {
	value *AddCustomNodeCertificateRequestContent
	isSet bool
}

func (v NullableAddCustomNodeCertificateRequestContent) Get() *AddCustomNodeCertificateRequestContent {
	return v.value
}

func (v *NullableAddCustomNodeCertificateRequestContent) Set(val *AddCustomNodeCertificateRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCustomNodeCertificateRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCustomNodeCertificateRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCustomNodeCertificateRequestContent(val *AddCustomNodeCertificateRequestContent) *NullableAddCustomNodeCertificateRequestContent {
	return &NullableAddCustomNodeCertificateRequestContent{value: val, isSet: true}
}

func (v NullableAddCustomNodeCertificateRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCustomNodeCertificateRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


