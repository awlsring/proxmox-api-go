/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// ListRepositoriesInformationResponseContent struct for ListRepositoriesInformationResponseContent
type ListRepositoriesInformationResponseContent struct {
	Data RepositoriesReport `json:"data"`
}

// NewListRepositoriesInformationResponseContent instantiates a new ListRepositoriesInformationResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRepositoriesInformationResponseContent(data RepositoriesReport) *ListRepositoriesInformationResponseContent {
	this := ListRepositoriesInformationResponseContent{}
	this.Data = data
	return &this
}

// NewListRepositoriesInformationResponseContentWithDefaults instantiates a new ListRepositoriesInformationResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRepositoriesInformationResponseContentWithDefaults() *ListRepositoriesInformationResponseContent {
	this := ListRepositoriesInformationResponseContent{}
	return &this
}

// GetData returns the Data field value
func (o *ListRepositoriesInformationResponseContent) GetData() RepositoriesReport {
	if o == nil {
		var ret RepositoriesReport
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListRepositoriesInformationResponseContent) GetDataOk() (*RepositoriesReport, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ListRepositoriesInformationResponseContent) SetData(v RepositoriesReport) {
	o.Data = v
}

func (o ListRepositoriesInformationResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableListRepositoriesInformationResponseContent struct {
	value *ListRepositoriesInformationResponseContent
	isSet bool
}

func (v NullableListRepositoriesInformationResponseContent) Get() *ListRepositoriesInformationResponseContent {
	return v.value
}

func (v *NullableListRepositoriesInformationResponseContent) Set(val *ListRepositoriesInformationResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableListRepositoriesInformationResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableListRepositoriesInformationResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRepositoriesInformationResponseContent(val *ListRepositoriesInformationResponseContent) *NullableListRepositoriesInformationResponseContent {
	return &NullableListRepositoriesInformationResponseContent{value: val, isSet: true}
}

func (v NullableListRepositoriesInformationResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRepositoriesInformationResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


