/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the ModifyPoolRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyPoolRequestContent{}

// ModifyPoolRequestContent struct for ModifyPoolRequestContent
type ModifyPoolRequestContent struct {
	Poolid string `json:"poolid"`
	Comment *string `json:"comment,omitempty"`
	// Remove storage and vms in request rather than adding.
	Delete *bool `json:"delete,omitempty"`
	// List of storage identifiers to add to the pool.
	Storage *string `json:"storage,omitempty"`
	// List of VM identifiers to add to the pool.
	Vms *string `json:"vms,omitempty"`
}

// NewModifyPoolRequestContent instantiates a new ModifyPoolRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyPoolRequestContent(poolid string) *ModifyPoolRequestContent {
	this := ModifyPoolRequestContent{}
	this.Poolid = poolid
	return &this
}

// NewModifyPoolRequestContentWithDefaults instantiates a new ModifyPoolRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyPoolRequestContentWithDefaults() *ModifyPoolRequestContent {
	this := ModifyPoolRequestContent{}
	return &this
}

// GetPoolid returns the Poolid field value
func (o *ModifyPoolRequestContent) GetPoolid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Poolid
}

// GetPoolidOk returns a tuple with the Poolid field value
// and a boolean to check if the value has been set.
func (o *ModifyPoolRequestContent) GetPoolidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Poolid, true
}

// SetPoolid sets field value
func (o *ModifyPoolRequestContent) SetPoolid(v string) {
	o.Poolid = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ModifyPoolRequestContent) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyPoolRequestContent) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ModifyPoolRequestContent) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ModifyPoolRequestContent) SetComment(v string) {
	o.Comment = &v
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *ModifyPoolRequestContent) GetDelete() bool {
	if o == nil || isNil(o.Delete) {
		var ret bool
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyPoolRequestContent) GetDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.Delete) {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *ModifyPoolRequestContent) HasDelete() bool {
	if o != nil && !isNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given bool and assigns it to the Delete field.
func (o *ModifyPoolRequestContent) SetDelete(v bool) {
	o.Delete = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *ModifyPoolRequestContent) GetStorage() string {
	if o == nil || isNil(o.Storage) {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyPoolRequestContent) GetStorageOk() (*string, bool) {
	if o == nil || isNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *ModifyPoolRequestContent) HasStorage() bool {
	if o != nil && !isNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *ModifyPoolRequestContent) SetStorage(v string) {
	o.Storage = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *ModifyPoolRequestContent) GetVms() string {
	if o == nil || isNil(o.Vms) {
		var ret string
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyPoolRequestContent) GetVmsOk() (*string, bool) {
	if o == nil || isNil(o.Vms) {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *ModifyPoolRequestContent) HasVms() bool {
	if o != nil && !isNil(o.Vms) {
		return true
	}

	return false
}

// SetVms gets a reference to the given string and assigns it to the Vms field.
func (o *ModifyPoolRequestContent) SetVms(v string) {
	o.Vms = &v
}

func (o ModifyPoolRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyPoolRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["poolid"] = o.Poolid
	if !isNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !isNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	if !isNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !isNil(o.Vms) {
		toSerialize["vms"] = o.Vms
	}
	return toSerialize, nil
}

type NullableModifyPoolRequestContent struct {
	value *ModifyPoolRequestContent
	isSet bool
}

func (v NullableModifyPoolRequestContent) Get() *ModifyPoolRequestContent {
	return v.value
}

func (v *NullableModifyPoolRequestContent) Set(val *ModifyPoolRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyPoolRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyPoolRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyPoolRequestContent(val *ModifyPoolRequestContent) *NullableModifyPoolRequestContent {
	return &NullableModifyPoolRequestContent{value: val, isSet: true}
}

func (v NullableModifyPoolRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyPoolRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


