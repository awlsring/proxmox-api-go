/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the TimeZoneSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeZoneSummary{}

// TimeZoneSummary struct for TimeZoneSummary
type TimeZoneSummary struct {
	Zone *string `json:"zone,omitempty"`
	Offset *float32 `json:"offset,omitempty"`
}

// NewTimeZoneSummary instantiates a new TimeZoneSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeZoneSummary() *TimeZoneSummary {
	this := TimeZoneSummary{}
	return &this
}

// NewTimeZoneSummaryWithDefaults instantiates a new TimeZoneSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeZoneSummaryWithDefaults() *TimeZoneSummary {
	this := TimeZoneSummary{}
	return &this
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *TimeZoneSummary) GetZone() string {
	if o == nil || isNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneSummary) GetZoneOk() (*string, bool) {
	if o == nil || isNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *TimeZoneSummary) HasZone() bool {
	if o != nil && !isNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *TimeZoneSummary) SetZone(v string) {
	o.Zone = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TimeZoneSummary) GetOffset() float32 {
	if o == nil || isNil(o.Offset) {
		var ret float32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneSummary) GetOffsetOk() (*float32, bool) {
	if o == nil || isNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TimeZoneSummary) HasOffset() bool {
	if o != nil && !isNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given float32 and assigns it to the Offset field.
func (o *TimeZoneSummary) SetOffset(v float32) {
	o.Offset = &v
}

func (o TimeZoneSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeZoneSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !isNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	return toSerialize, nil
}

type NullableTimeZoneSummary struct {
	value *TimeZoneSummary
	isSet bool
}

func (v NullableTimeZoneSummary) Get() *TimeZoneSummary {
	return v.value
}

func (v *NullableTimeZoneSummary) Set(val *TimeZoneSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeZoneSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeZoneSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeZoneSummary(val *TimeZoneSummary) *NullableTimeZoneSummary {
	return &NullableTimeZoneSummary{value: val, isSet: true}
}

func (v NullableTimeZoneSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeZoneSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


