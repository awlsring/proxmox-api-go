/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the FileReadSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileReadSummary{}

// FileReadSummary struct for FileReadSummary
type FileReadSummary struct {
	Content string `json:"content"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Truncated *float32 `json:"truncated,omitempty"`
}

// NewFileReadSummary instantiates a new FileReadSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileReadSummary(content string) *FileReadSummary {
	this := FileReadSummary{}
	this.Content = content
	return &this
}

// NewFileReadSummaryWithDefaults instantiates a new FileReadSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileReadSummaryWithDefaults() *FileReadSummary {
	this := FileReadSummary{}
	return &this
}

// GetContent returns the Content field value
func (o *FileReadSummary) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *FileReadSummary) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *FileReadSummary) SetContent(v string) {
	o.Content = v
}

// GetTruncated returns the Truncated field value if set, zero value otherwise.
func (o *FileReadSummary) GetTruncated() float32 {
	if o == nil || IsNil(o.Truncated) {
		var ret float32
		return ret
	}
	return *o.Truncated
}

// GetTruncatedOk returns a tuple with the Truncated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileReadSummary) GetTruncatedOk() (*float32, bool) {
	if o == nil || IsNil(o.Truncated) {
		return nil, false
	}
	return o.Truncated, true
}

// HasTruncated returns a boolean if a field has been set.
func (o *FileReadSummary) HasTruncated() bool {
	if o != nil && !IsNil(o.Truncated) {
		return true
	}

	return false
}

// SetTruncated gets a reference to the given float32 and assigns it to the Truncated field.
func (o *FileReadSummary) SetTruncated(v float32) {
	o.Truncated = &v
}

func (o FileReadSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileReadSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	if !IsNil(o.Truncated) {
		toSerialize["truncated"] = o.Truncated
	}
	return toSerialize, nil
}

type NullableFileReadSummary struct {
	value *FileReadSummary
	isSet bool
}

func (v NullableFileReadSummary) Get() *FileReadSummary {
	return v.value
}

func (v *NullableFileReadSummary) Set(val *FileReadSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableFileReadSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableFileReadSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileReadSummary(val *FileReadSummary) *NullableFileReadSummary {
	return &NullableFileReadSummary{value: val, isSet: true}
}

func (v NullableFileReadSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileReadSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


