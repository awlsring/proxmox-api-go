/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the CreateSnapshotRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSnapshotRequestContent{}

// CreateSnapshotRequestContent struct for CreateSnapshotRequestContent
type CreateSnapshotRequestContent struct {
	// The snapshot name.
	Snapname string `json:"snapname"`
	Description *string `json:"description,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Vmstate *float32 `json:"vmstate,omitempty"`
}

// NewCreateSnapshotRequestContent instantiates a new CreateSnapshotRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotRequestContent(snapname string) *CreateSnapshotRequestContent {
	this := CreateSnapshotRequestContent{}
	this.Snapname = snapname
	return &this
}

// NewCreateSnapshotRequestContentWithDefaults instantiates a new CreateSnapshotRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotRequestContentWithDefaults() *CreateSnapshotRequestContent {
	this := CreateSnapshotRequestContent{}
	return &this
}

// GetSnapname returns the Snapname field value
func (o *CreateSnapshotRequestContent) GetSnapname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Snapname
}

// GetSnapnameOk returns a tuple with the Snapname field value
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequestContent) GetSnapnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Snapname, true
}

// SetSnapname sets field value
func (o *CreateSnapshotRequestContent) SetSnapname(v string) {
	o.Snapname = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateSnapshotRequestContent) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequestContent) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSnapshotRequestContent) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateSnapshotRequestContent) SetDescription(v string) {
	o.Description = &v
}

// GetVmstate returns the Vmstate field value if set, zero value otherwise.
func (o *CreateSnapshotRequestContent) GetVmstate() float32 {
	if o == nil || IsNil(o.Vmstate) {
		var ret float32
		return ret
	}
	return *o.Vmstate
}

// GetVmstateOk returns a tuple with the Vmstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotRequestContent) GetVmstateOk() (*float32, bool) {
	if o == nil || IsNil(o.Vmstate) {
		return nil, false
	}
	return o.Vmstate, true
}

// HasVmstate returns a boolean if a field has been set.
func (o *CreateSnapshotRequestContent) HasVmstate() bool {
	if o != nil && !IsNil(o.Vmstate) {
		return true
	}

	return false
}

// SetVmstate gets a reference to the given float32 and assigns it to the Vmstate field.
func (o *CreateSnapshotRequestContent) SetVmstate(v float32) {
	o.Vmstate = &v
}

func (o CreateSnapshotRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSnapshotRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["snapname"] = o.Snapname
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Vmstate) {
		toSerialize["vmstate"] = o.Vmstate
	}
	return toSerialize, nil
}

type NullableCreateSnapshotRequestContent struct {
	value *CreateSnapshotRequestContent
	isSet bool
}

func (v NullableCreateSnapshotRequestContent) Get() *CreateSnapshotRequestContent {
	return v.value
}

func (v *NullableCreateSnapshotRequestContent) Set(val *CreateSnapshotRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotRequestContent(val *CreateSnapshotRequestContent) *NullableCreateSnapshotRequestContent {
	return &NullableCreateSnapshotRequestContent{value: val, isSet: true}
}

func (v NullableCreateSnapshotRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


