/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the RoleSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleSummary{}

// RoleSummary struct for RoleSummary
type RoleSummary struct {
	Roleid string `json:"roleid"`
	Privs *string `json:"privs,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Special *float32 `json:"special,omitempty"`
}

// NewRoleSummary instantiates a new RoleSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleSummary(roleid string) *RoleSummary {
	this := RoleSummary{}
	this.Roleid = roleid
	return &this
}

// NewRoleSummaryWithDefaults instantiates a new RoleSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleSummaryWithDefaults() *RoleSummary {
	this := RoleSummary{}
	return &this
}

// GetRoleid returns the Roleid field value
func (o *RoleSummary) GetRoleid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Roleid
}

// GetRoleidOk returns a tuple with the Roleid field value
// and a boolean to check if the value has been set.
func (o *RoleSummary) GetRoleidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Roleid, true
}

// SetRoleid sets field value
func (o *RoleSummary) SetRoleid(v string) {
	o.Roleid = v
}

// GetPrivs returns the Privs field value if set, zero value otherwise.
func (o *RoleSummary) GetPrivs() string {
	if o == nil || IsNil(o.Privs) {
		var ret string
		return ret
	}
	return *o.Privs
}

// GetPrivsOk returns a tuple with the Privs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleSummary) GetPrivsOk() (*string, bool) {
	if o == nil || IsNil(o.Privs) {
		return nil, false
	}
	return o.Privs, true
}

// HasPrivs returns a boolean if a field has been set.
func (o *RoleSummary) HasPrivs() bool {
	if o != nil && !IsNil(o.Privs) {
		return true
	}

	return false
}

// SetPrivs gets a reference to the given string and assigns it to the Privs field.
func (o *RoleSummary) SetPrivs(v string) {
	o.Privs = &v
}

// GetSpecial returns the Special field value if set, zero value otherwise.
func (o *RoleSummary) GetSpecial() float32 {
	if o == nil || IsNil(o.Special) {
		var ret float32
		return ret
	}
	return *o.Special
}

// GetSpecialOk returns a tuple with the Special field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleSummary) GetSpecialOk() (*float32, bool) {
	if o == nil || IsNil(o.Special) {
		return nil, false
	}
	return o.Special, true
}

// HasSpecial returns a boolean if a field has been set.
func (o *RoleSummary) HasSpecial() bool {
	if o != nil && !IsNil(o.Special) {
		return true
	}

	return false
}

// SetSpecial gets a reference to the given float32 and assigns it to the Special field.
func (o *RoleSummary) SetSpecial(v float32) {
	o.Special = &v
}

func (o RoleSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roleid"] = o.Roleid
	if !IsNil(o.Privs) {
		toSerialize["privs"] = o.Privs
	}
	if !IsNil(o.Special) {
		toSerialize["special"] = o.Special
	}
	return toSerialize, nil
}

type NullableRoleSummary struct {
	value *RoleSummary
	isSet bool
}

func (v NullableRoleSummary) Get() *RoleSummary {
	return v.value
}

func (v *NullableRoleSummary) Set(val *RoleSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleSummary(val *RoleSummary) *NullableRoleSummary {
	return &NullableRoleSummary{value: val, isSet: true}
}

func (v NullableRoleSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


