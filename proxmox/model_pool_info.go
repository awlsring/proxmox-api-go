/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// PoolInfo struct for PoolInfo
type PoolInfo struct {
	Poolid string `json:"poolid"`
	Comment *string `json:"comment,omitempty"`
}

// NewPoolInfo instantiates a new PoolInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolInfo(poolid string) *PoolInfo {
	this := PoolInfo{}
	this.Poolid = poolid
	return &this
}

// NewPoolInfoWithDefaults instantiates a new PoolInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolInfoWithDefaults() *PoolInfo {
	this := PoolInfo{}
	return &this
}

// GetPoolid returns the Poolid field value
func (o *PoolInfo) GetPoolid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Poolid
}

// GetPoolidOk returns a tuple with the Poolid field value
// and a boolean to check if the value has been set.
func (o *PoolInfo) GetPoolidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Poolid, true
}

// SetPoolid sets field value
func (o *PoolInfo) SetPoolid(v string) {
	o.Poolid = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PoolInfo) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolInfo) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
    return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PoolInfo) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PoolInfo) SetComment(v string) {
	o.Comment = &v
}

func (o PoolInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["poolid"] = o.Poolid
	}
	if !isNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullablePoolInfo struct {
	value *PoolInfo
	isSet bool
}

func (v NullablePoolInfo) Get() *PoolInfo {
	return v.value
}

func (v *NullablePoolInfo) Set(val *PoolInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolInfo(val *PoolInfo) *NullablePoolInfo {
	return &NullablePoolInfo{value: val, isSet: true}
}

func (v NullablePoolInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


