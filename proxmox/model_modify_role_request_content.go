/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package proxmox

import (
	"encoding/json"
)

// checks if the ModifyRoleRequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyRoleRequestContent{}

// ModifyRoleRequestContent struct for ModifyRoleRequestContent
type ModifyRoleRequestContent struct {
	Privs *string `json:"privs,omitempty"`
	// An integer used to represent a boolean. 0 is false, 1 is true.
	Append *float32 `json:"append,omitempty"`
}

// NewModifyRoleRequestContent instantiates a new ModifyRoleRequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyRoleRequestContent() *ModifyRoleRequestContent {
	this := ModifyRoleRequestContent{}
	return &this
}

// NewModifyRoleRequestContentWithDefaults instantiates a new ModifyRoleRequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyRoleRequestContentWithDefaults() *ModifyRoleRequestContent {
	this := ModifyRoleRequestContent{}
	return &this
}

// GetPrivs returns the Privs field value if set, zero value otherwise.
func (o *ModifyRoleRequestContent) GetPrivs() string {
	if o == nil || isNil(o.Privs) {
		var ret string
		return ret
	}
	return *o.Privs
}

// GetPrivsOk returns a tuple with the Privs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyRoleRequestContent) GetPrivsOk() (*string, bool) {
	if o == nil || isNil(o.Privs) {
		return nil, false
	}
	return o.Privs, true
}

// HasPrivs returns a boolean if a field has been set.
func (o *ModifyRoleRequestContent) HasPrivs() bool {
	if o != nil && !isNil(o.Privs) {
		return true
	}

	return false
}

// SetPrivs gets a reference to the given string and assigns it to the Privs field.
func (o *ModifyRoleRequestContent) SetPrivs(v string) {
	o.Privs = &v
}

// GetAppend returns the Append field value if set, zero value otherwise.
func (o *ModifyRoleRequestContent) GetAppend() float32 {
	if o == nil || isNil(o.Append) {
		var ret float32
		return ret
	}
	return *o.Append
}

// GetAppendOk returns a tuple with the Append field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyRoleRequestContent) GetAppendOk() (*float32, bool) {
	if o == nil || isNil(o.Append) {
		return nil, false
	}
	return o.Append, true
}

// HasAppend returns a boolean if a field has been set.
func (o *ModifyRoleRequestContent) HasAppend() bool {
	if o != nil && !isNil(o.Append) {
		return true
	}

	return false
}

// SetAppend gets a reference to the given float32 and assigns it to the Append field.
func (o *ModifyRoleRequestContent) SetAppend(v float32) {
	o.Append = &v
}

func (o ModifyRoleRequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyRoleRequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Privs) {
		toSerialize["privs"] = o.Privs
	}
	if !isNil(o.Append) {
		toSerialize["append"] = o.Append
	}
	return toSerialize, nil
}

type NullableModifyRoleRequestContent struct {
	value *ModifyRoleRequestContent
	isSet bool
}

func (v NullableModifyRoleRequestContent) Get() *ModifyRoleRequestContent {
	return v.value
}

func (v *NullableModifyRoleRequestContent) Set(val *ModifyRoleRequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyRoleRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyRoleRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyRoleRequestContent(val *ModifyRoleRequestContent) *NullableModifyRoleRequestContent {
	return &NullableModifyRoleRequestContent{value: val, isSet: true}
}

func (v NullableModifyRoleRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyRoleRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


