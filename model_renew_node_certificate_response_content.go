/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenewNodeCertificateResponseContent struct for RenewNodeCertificateResponseContent
type RenewNodeCertificateResponseContent struct {
	Data string `json:"data"`
}

// NewRenewNodeCertificateResponseContent instantiates a new RenewNodeCertificateResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenewNodeCertificateResponseContent(data string) *RenewNodeCertificateResponseContent {
	this := RenewNodeCertificateResponseContent{}
	this.Data = data
	return &this
}

// NewRenewNodeCertificateResponseContentWithDefaults instantiates a new RenewNodeCertificateResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenewNodeCertificateResponseContentWithDefaults() *RenewNodeCertificateResponseContent {
	this := RenewNodeCertificateResponseContent{}
	return &this
}

// GetData returns the Data field value
func (o *RenewNodeCertificateResponseContent) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RenewNodeCertificateResponseContent) GetDataOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *RenewNodeCertificateResponseContent) SetData(v string) {
	o.Data = v
}

func (o RenewNodeCertificateResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableRenewNodeCertificateResponseContent struct {
	value *RenewNodeCertificateResponseContent
	isSet bool
}

func (v NullableRenewNodeCertificateResponseContent) Get() *RenewNodeCertificateResponseContent {
	return v.value
}

func (v *NullableRenewNodeCertificateResponseContent) Set(val *RenewNodeCertificateResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableRenewNodeCertificateResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableRenewNodeCertificateResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenewNodeCertificateResponseContent(val *RenewNodeCertificateResponseContent) *NullableRenewNodeCertificateResponseContent {
	return &NullableRenewNodeCertificateResponseContent{value: val, isSet: true}
}

func (v NullableRenewNodeCertificateResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenewNodeCertificateResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


