/*
Proxmox

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2023-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProxmoxSupportSummary struct for ProxmoxSupportSummary
type ProxmoxSupportSummary struct {
	PbsLibraryVersion *string `json:"pbs-library-version,omitempty"`
	PbsMasterkey *bool `json:"pbs-masterkey,omitempty"`
	PbsDirtyBitmapSavevm *bool `json:"pbs-dirty-bitmap-savevm,omitempty"`
	PbsDirtyBitmapMigration *bool `json:"pbs-dirty-bitmap-migration,omitempty"`
	PbsDirtyBitmap *bool `json:"pbs-dirty-bitmap,omitempty"`
	BackupMaxWorkers *bool `json:"backup-max-workers,omitempty"`
	QueryBitmapInfo *bool `json:"query-bitmap-info,omitempty"`
}

// NewProxmoxSupportSummary instantiates a new ProxmoxSupportSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxmoxSupportSummary() *ProxmoxSupportSummary {
	this := ProxmoxSupportSummary{}
	return &this
}

// NewProxmoxSupportSummaryWithDefaults instantiates a new ProxmoxSupportSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxmoxSupportSummaryWithDefaults() *ProxmoxSupportSummary {
	this := ProxmoxSupportSummary{}
	return &this
}

// GetPbsLibraryVersion returns the PbsLibraryVersion field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetPbsLibraryVersion() string {
	if o == nil || isNil(o.PbsLibraryVersion) {
		var ret string
		return ret
	}
	return *o.PbsLibraryVersion
}

// GetPbsLibraryVersionOk returns a tuple with the PbsLibraryVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetPbsLibraryVersionOk() (*string, bool) {
	if o == nil || isNil(o.PbsLibraryVersion) {
    return nil, false
	}
	return o.PbsLibraryVersion, true
}

// HasPbsLibraryVersion returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasPbsLibraryVersion() bool {
	if o != nil && !isNil(o.PbsLibraryVersion) {
		return true
	}

	return false
}

// SetPbsLibraryVersion gets a reference to the given string and assigns it to the PbsLibraryVersion field.
func (o *ProxmoxSupportSummary) SetPbsLibraryVersion(v string) {
	o.PbsLibraryVersion = &v
}

// GetPbsMasterkey returns the PbsMasterkey field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetPbsMasterkey() bool {
	if o == nil || isNil(o.PbsMasterkey) {
		var ret bool
		return ret
	}
	return *o.PbsMasterkey
}

// GetPbsMasterkeyOk returns a tuple with the PbsMasterkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetPbsMasterkeyOk() (*bool, bool) {
	if o == nil || isNil(o.PbsMasterkey) {
    return nil, false
	}
	return o.PbsMasterkey, true
}

// HasPbsMasterkey returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasPbsMasterkey() bool {
	if o != nil && !isNil(o.PbsMasterkey) {
		return true
	}

	return false
}

// SetPbsMasterkey gets a reference to the given bool and assigns it to the PbsMasterkey field.
func (o *ProxmoxSupportSummary) SetPbsMasterkey(v bool) {
	o.PbsMasterkey = &v
}

// GetPbsDirtyBitmapSavevm returns the PbsDirtyBitmapSavevm field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetPbsDirtyBitmapSavevm() bool {
	if o == nil || isNil(o.PbsDirtyBitmapSavevm) {
		var ret bool
		return ret
	}
	return *o.PbsDirtyBitmapSavevm
}

// GetPbsDirtyBitmapSavevmOk returns a tuple with the PbsDirtyBitmapSavevm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetPbsDirtyBitmapSavevmOk() (*bool, bool) {
	if o == nil || isNil(o.PbsDirtyBitmapSavevm) {
    return nil, false
	}
	return o.PbsDirtyBitmapSavevm, true
}

// HasPbsDirtyBitmapSavevm returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasPbsDirtyBitmapSavevm() bool {
	if o != nil && !isNil(o.PbsDirtyBitmapSavevm) {
		return true
	}

	return false
}

// SetPbsDirtyBitmapSavevm gets a reference to the given bool and assigns it to the PbsDirtyBitmapSavevm field.
func (o *ProxmoxSupportSummary) SetPbsDirtyBitmapSavevm(v bool) {
	o.PbsDirtyBitmapSavevm = &v
}

// GetPbsDirtyBitmapMigration returns the PbsDirtyBitmapMigration field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetPbsDirtyBitmapMigration() bool {
	if o == nil || isNil(o.PbsDirtyBitmapMigration) {
		var ret bool
		return ret
	}
	return *o.PbsDirtyBitmapMigration
}

// GetPbsDirtyBitmapMigrationOk returns a tuple with the PbsDirtyBitmapMigration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetPbsDirtyBitmapMigrationOk() (*bool, bool) {
	if o == nil || isNil(o.PbsDirtyBitmapMigration) {
    return nil, false
	}
	return o.PbsDirtyBitmapMigration, true
}

// HasPbsDirtyBitmapMigration returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasPbsDirtyBitmapMigration() bool {
	if o != nil && !isNil(o.PbsDirtyBitmapMigration) {
		return true
	}

	return false
}

// SetPbsDirtyBitmapMigration gets a reference to the given bool and assigns it to the PbsDirtyBitmapMigration field.
func (o *ProxmoxSupportSummary) SetPbsDirtyBitmapMigration(v bool) {
	o.PbsDirtyBitmapMigration = &v
}

// GetPbsDirtyBitmap returns the PbsDirtyBitmap field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetPbsDirtyBitmap() bool {
	if o == nil || isNil(o.PbsDirtyBitmap) {
		var ret bool
		return ret
	}
	return *o.PbsDirtyBitmap
}

// GetPbsDirtyBitmapOk returns a tuple with the PbsDirtyBitmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetPbsDirtyBitmapOk() (*bool, bool) {
	if o == nil || isNil(o.PbsDirtyBitmap) {
    return nil, false
	}
	return o.PbsDirtyBitmap, true
}

// HasPbsDirtyBitmap returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasPbsDirtyBitmap() bool {
	if o != nil && !isNil(o.PbsDirtyBitmap) {
		return true
	}

	return false
}

// SetPbsDirtyBitmap gets a reference to the given bool and assigns it to the PbsDirtyBitmap field.
func (o *ProxmoxSupportSummary) SetPbsDirtyBitmap(v bool) {
	o.PbsDirtyBitmap = &v
}

// GetBackupMaxWorkers returns the BackupMaxWorkers field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetBackupMaxWorkers() bool {
	if o == nil || isNil(o.BackupMaxWorkers) {
		var ret bool
		return ret
	}
	return *o.BackupMaxWorkers
}

// GetBackupMaxWorkersOk returns a tuple with the BackupMaxWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetBackupMaxWorkersOk() (*bool, bool) {
	if o == nil || isNil(o.BackupMaxWorkers) {
    return nil, false
	}
	return o.BackupMaxWorkers, true
}

// HasBackupMaxWorkers returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasBackupMaxWorkers() bool {
	if o != nil && !isNil(o.BackupMaxWorkers) {
		return true
	}

	return false
}

// SetBackupMaxWorkers gets a reference to the given bool and assigns it to the BackupMaxWorkers field.
func (o *ProxmoxSupportSummary) SetBackupMaxWorkers(v bool) {
	o.BackupMaxWorkers = &v
}

// GetQueryBitmapInfo returns the QueryBitmapInfo field value if set, zero value otherwise.
func (o *ProxmoxSupportSummary) GetQueryBitmapInfo() bool {
	if o == nil || isNil(o.QueryBitmapInfo) {
		var ret bool
		return ret
	}
	return *o.QueryBitmapInfo
}

// GetQueryBitmapInfoOk returns a tuple with the QueryBitmapInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxmoxSupportSummary) GetQueryBitmapInfoOk() (*bool, bool) {
	if o == nil || isNil(o.QueryBitmapInfo) {
    return nil, false
	}
	return o.QueryBitmapInfo, true
}

// HasQueryBitmapInfo returns a boolean if a field has been set.
func (o *ProxmoxSupportSummary) HasQueryBitmapInfo() bool {
	if o != nil && !isNil(o.QueryBitmapInfo) {
		return true
	}

	return false
}

// SetQueryBitmapInfo gets a reference to the given bool and assigns it to the QueryBitmapInfo field.
func (o *ProxmoxSupportSummary) SetQueryBitmapInfo(v bool) {
	o.QueryBitmapInfo = &v
}

func (o ProxmoxSupportSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PbsLibraryVersion) {
		toSerialize["pbs-library-version"] = o.PbsLibraryVersion
	}
	if !isNil(o.PbsMasterkey) {
		toSerialize["pbs-masterkey"] = o.PbsMasterkey
	}
	if !isNil(o.PbsDirtyBitmapSavevm) {
		toSerialize["pbs-dirty-bitmap-savevm"] = o.PbsDirtyBitmapSavevm
	}
	if !isNil(o.PbsDirtyBitmapMigration) {
		toSerialize["pbs-dirty-bitmap-migration"] = o.PbsDirtyBitmapMigration
	}
	if !isNil(o.PbsDirtyBitmap) {
		toSerialize["pbs-dirty-bitmap"] = o.PbsDirtyBitmap
	}
	if !isNil(o.BackupMaxWorkers) {
		toSerialize["backup-max-workers"] = o.BackupMaxWorkers
	}
	if !isNil(o.QueryBitmapInfo) {
		toSerialize["query-bitmap-info"] = o.QueryBitmapInfo
	}
	return json.Marshal(toSerialize)
}

type NullableProxmoxSupportSummary struct {
	value *ProxmoxSupportSummary
	isSet bool
}

func (v NullableProxmoxSupportSummary) Get() *ProxmoxSupportSummary {
	return v.value
}

func (v *NullableProxmoxSupportSummary) Set(val *ProxmoxSupportSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableProxmoxSupportSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableProxmoxSupportSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxmoxSupportSummary(val *ProxmoxSupportSummary) *NullableProxmoxSupportSummary {
	return &NullableProxmoxSupportSummary{value: val, isSet: true}
}

func (v NullableProxmoxSupportSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxmoxSupportSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


